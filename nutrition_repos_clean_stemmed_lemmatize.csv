language,readme_contents,clean,clean_stemmed,clean_lemmatized
Java,"# Nutrition

Nutrition is a highly configurable mod to enable the creation of health systems in Minecraft.

[Download](https://github.com/WesCook/Nutrition/releases) | [Wiki](https://github.com/WesCook/Nutrition/wiki) | [Changelog](changelog.md)

![Nutrition GUI](screenshots/gui.png ""Nutrition GUI"")

Through its [config files](https://github.com/WesCook/Nutrition/wiki/Configuration), Nutrition allows you to define custom food groups (called [nutrients](https://github.com/WesCook/Nutrition/wiki/Nutrients)) which apply [effects](https://github.com/WesCook/Nutrition/wiki/Effects) based on nutrition levels.

By default, Nutrition comes configured with the classic five food group system: dairy, fruit, grain, protein, and vegetables.  However many different systems are possible.  Some examples include:

* A spicy tolerance bar, where eating enough spicy foods will grant a permanent resistance to fire.
* A zombie simulation where you must eat brains to avoid negative effects.
* Gluten intolerance.  Eat bread, get sick.

When updating the mod, please delete your `/config/nutrition/nutrients/` directory to receive new mod support.  This is necessary so we don't overwrite any customizations.

## Mods Supported

Mods that are supported with the default five-food group system include:

* [AbyssalCraft](https://www.curseforge.com/minecraft/mc-mods/abyssalcraft)
* [Actually Additions](https://www.curseforge.com/minecraft/mc-mods/actually-additions)
* [Advent of Ascension](https://www.curseforge.com/minecraft/mc-mods/advent-of-ascension-nevermine)
* [The Aether](https://www.curseforge.com/minecraft/mc-mods/the-aether)
* [akkamaddi's Ashenwheat](https://www.curseforge.com/minecraft/mc-mods/akkamaddis-ashenwheat)
* [Animalium](https://www.curseforge.com/minecraft/mc-mods/animalium)
* [Animania](https://www.curseforge.com/minecraft/mc-mods/animania)
* [Aquaculture](https://www.curseforge.com/minecraft/mc-mods/aquaculture)
* [Beasts](https://www.curseforge.com/minecraft/mc-mods/beasts)
* [Better Animals Plus](https://www.curseforge.com/minecraft/mc-mods/betteranimalsplus)
* [BetterNether](https://www.curseforge.com/minecraft/mc-mods/betternether)
* [Better with Addons](https://www.curseforge.com/minecraft/mc-mods/better-with-addons)
* [Better with Mods](https://www.curseforge.com/minecraft/mc-mods/bwm-suite)
* [The Betweenlands](https://www.curseforge.com/minecraft/mc-mods/angry-pixel-the-betweenlands-mod)
* [Bewitchment](https://www.curseforge.com/minecraft/mc-mods/bewitchment)
* [Biomes O' Plenty](https://www.curseforge.com/minecraft/mc-mods/biomes-o-plenty)
* [The Birdwatching Mod](https://www.curseforge.com/minecraft/mc-mods/the-birdwatching-mod)
* [Cave Root](https://www.curseforge.com/minecraft/mc-mods/cave-root)
* [ChinjufuMod](https://www.curseforge.com/minecraft/mc-mods/chinjufumod)
* [Chococraft](https://www.curseforge.com/minecraft/mc-mods/chococraft-3)
* [Combustive Fishing](https://www.curseforge.com/minecraft/mc-mods/combustive-fishing)
* [Complex Crops](https://www.curseforge.com/minecraft/mc-mods/complex-crops)
* [Defiled Lands](https://www.curseforge.com/minecraft/mc-mods/defiled-lands)
* [Duck Craft](https://www.curseforge.com/minecraft/mc-mods/duck-craft)
* [Edible Bugs](https://www.curseforge.com/minecraft/mc-mods/edible-bugs)
* [Erebus](https://www.curseforge.com/minecraft/mc-mods/the-erebus)
* [Exotic Birds](https://www.curseforge.com/minecraft/mc-mods/exotic-birds)
* [Ex Sartagine](https://www.curseforge.com/minecraft/mc-mods/ex-sartagine)
* [Extra Utilities 2](https://www.curseforge.com/minecraft/mc-mods/extra-utilities)
* [Familiar Fauna](https://www.curseforge.com/minecraft/mc-mods/familiar-fauna)
* [Fauna and Ecology](https://www.curseforge.com/minecraft/mc-mods/fauna-and-ecology)
* [Food Expansion](https://www.curseforge.com/minecraft/mc-mods/food-expansion)
* [Forestry](https://www.curseforge.com/minecraft/mc-mods/forestry)
* [Fossils and Archeology Revival](https://www.curseforge.com/minecraft/mc-mods/fossils)
* [Galacticraft](https://micdoodle8.com/mods/galacticraft)
* [Glacidus](https://www.curseforge.com/minecraft/mc-mods/glacidus)
* [Grim Pack](https://www.curseforge.com/minecraft/mc-mods/grim-pack)
* [Grimoire of Gaia](https://www.curseforge.com/minecraft/mc-mods/grimoire-of-gaia)
* [Growthcraft Community Edition](https://www.curseforge.com/minecraft/mc-mods/growthcraft-community-edition)
* [Heat and Climate](https://defeatedcrow.jp/modwiki/HeatAndClimate_EN)
* [Ice and Fire](https://www.curseforge.com/minecraft/mc-mods/ice-and-fire-dragons)
* [Inspirations](https://www.curseforge.com/minecraft/mc-mods/inspirations)
* [JAFFA Foods](https://www.curseforge.com/minecraft/mc-mods/jaffa-foods-a-harvestcraft-addon)
* [JurassiCraft](https://www.curseforge.com/minecraft/mc-mods/jurassicraft)
* [Lycanites Mobs](https://www.curseforge.com/minecraft/mc-mods/lycanites-mobs)
* [The Midnight](https://www.curseforge.com/minecraft/mc-mods/the-midnight)
* [Mo' Creatures](https://www.curseforge.com/minecraft/mc-mods/mo-creatures)
* [Mob Mash](https://www.curseforge.com/minecraft/mc-mods/mob-mash)
* [Mystical World](https://www.curseforge.com/minecraft/mc-mods/mystical-world)
* [Natura](https://www.curseforge.com/minecraft/mc-mods/natura)
* [Natural Fauna](https://www.curseforge.com/minecraft/mc-mods/natural-fauna-mod-a-zawa-addon)
* [NetherEx](https://www.curseforge.com/minecraft/mc-mods/netherex)
* [Oh The Biomes You'll Go](https://www.curseforge.com/minecraft/mc-mods/oh-the-biomes-youll-go)
* [Pam's BreadCraft](https://www.curseforge.com/minecraft/mc-mods/pams-breadcraft)
* [Pam's BrewCraft](https://www.curseforge.com/minecraft/mc-mods/pams-brewcraft)
* [Pam's HarvestCraft](https://www.curseforge.com/minecraft/mc-mods/pams-harvestcraft)
* [Pam's Simply Strawberries](https://www.curseforge.com/minecraft/mc-mods/pams-simply-strawberries)
* [PizzaCraft](https://www.curseforge.com/minecraft/mc-mods/pizzacraft)
* [Plant Mega Pack](https://web.archive.org/web/20181020031322/http://10paksmods.net/pmp.html)
* [Plants](https://www.curseforge.com/minecraft/mc-mods/plants)
* [PrimalCore](https://www.curseforge.com/minecraft/mc-mods/primalcore)
* [Primitive Mobs](https://www.curseforge.com/minecraft/mc-mods/primitive-mobs)
* [Project: Vibrant Journeys](https://www.curseforge.com/minecraft/mc-mods/project-vibrant-journeys)
* [Pyrotech](https://www.curseforge.com/minecraft/mc-mods/pyrotech)
* [Quark](https://quark.vazkii.net/)
* [Rats](https://www.curseforge.com/minecraft/mc-mods/rats)
* [RealWorld](https://web.archive.org/web/20181008045611/https://10paksmods.net/realworld.html)
* [Reptile Mod](https://www.curseforge.com/minecraft/mc-mods/lizardmod/files/3247823)
* [Rockhounding Surface](https://www.curseforge.com/minecraft/mc-mods/rockhounding-mod-surface)
* [Roots](https://www.curseforge.com/minecraft/mc-mods/roots)
* [Roots Classic](https://www.curseforge.com/minecraft/mc-mods/roots-classic)
* [Rustic](https://www.curseforge.com/minecraft/mc-mods/rustic)
* [SaltyMod](https://www.curseforge.com/minecraft/mc-mods/saltymod)
* [Simple Corn](https://www.curseforge.com/minecraft/mc-mods/simple-corn)
* [Simply Tea!](https://www.curseforge.com/minecraft/mc-mods/simply-tea)
* [Skye's Bakery](https://www.curseforge.com/minecraft/mc-mods/skyes-bakery)
* [Taco Tuesday](https://www.curseforge.com/minecraft/mc-mods/taco-tuesday)
* [Tea the Story](https://www.curseforge.com/minecraft/mc-mods/tea-the-story)
* [Thaumcraft](https://www.curseforge.com/minecraft/mc-mods/thaumcraft)
* [Tinkers Construct](https://www.curseforge.com/minecraft/mc-mods/tinkers-construct)
* [Tiny Progressions](https://www.curseforge.com/minecraft/mc-mods/tiny-progressions)
* [Tropicraft](https://www.curseforge.com/minecraft/mc-mods/tropicraft)
* [Twilight Forest](https://www.curseforge.com/minecraft/mc-mods/the-twilight-forest)
* [VanillaFoodPantry](https://www.curseforge.com/minecraft/mc-mods/vanillafoodpantry-mod)
* [XL Food Mod](https://www.curseforge.com/minecraft/mc-mods/xl-food-mod)
* [Zoo & Wild Animals Rebuilt](https://www.curseforge.com/minecraft/mc-mods/zoo-wild-animals-rebuild)

Mod support contributions are welcome!  Please create a [Pull Request](https://github.com/WesCook/Nutrition/pulls) or an [Issue](https://github.com/WesCook/Nutrition/issues) with the relevant .json files.
","nutrition

nutrition is a highly configurable mod to enable the creation of health systems in minecraft

downloadhttpsgithubcomwescooknutritionreleases wikihttpsgithubcomwescooknutritionwiki changelogchangelogmd

nutrition guiscreenshotsguipng nutrition gui

through its config fileshttpsgithubcomwescooknutritionwikiconfiguration nutrition allows you to define custom food groups called nutrientshttpsgithubcomwescooknutritionwikinutrients which apply effectshttpsgithubcomwescooknutritionwikieffects based on nutrition levels

by default nutrition comes configured with the classic five food group system dairy fruit grain protein and vegetables however many different systems are possible some examples include

 a spicy tolerance bar where eating enough spicy foods will grant a permanent resistance to fire
 a zombie simulation where you must eat brains to avoid negative effects
 gluten intolerance eat bread get sick

when updating the mod please delete your confignutritionnutrients directory to receive new mod support this is necessary so we don ' t overwrite any customizations

 mods supported

mods that are supported with the default fivefood group system include

 abyssalcrafthttpswwwcurseforgecomminecraftmcmodsabyssalcraft
 actually additionshttpswwwcurseforgecomminecraftmcmodsactuallyadditions
 advent of ascensionhttpswwwcurseforgecomminecraftmcmodsadventofascensionnevermine
 the aetherhttpswwwcurseforgecomminecraftmcmodstheaether
 akkamaddi ' s ashenwheathttpswwwcurseforgecomminecraftmcmodsakkamaddisashenwheat
 animaliumhttpswwwcurseforgecomminecraftmcmodsanimalium
 animaniahttpswwwcurseforgecomminecraftmcmodsanimania
 aquaculturehttpswwwcurseforgecomminecraftmcmodsaquaculture
 beastshttpswwwcurseforgecomminecraftmcmodsbeasts
 better animals plushttpswwwcurseforgecomminecraftmcmodsbetteranimalsplus
 betternetherhttpswwwcurseforgecomminecraftmcmodsbetternether
 better with addonshttpswwwcurseforgecomminecraftmcmodsbetterwithaddons
 better with modshttpswwwcurseforgecomminecraftmcmodsbwmsuite
 the betweenlandshttpswwwcurseforgecomminecraftmcmodsangrypixelthebetweenlandsmod
 bewitchmenthttpswwwcurseforgecomminecraftmcmodsbewitchment
 biomes o ' plentyhttpswwwcurseforgecomminecraftmcmodsbiomesoplenty
 the birdwatching modhttpswwwcurseforgecomminecraftmcmodsthebirdwatchingmod
 cave roothttpswwwcurseforgecomminecraftmcmodscaveroot
 chinjufumodhttpswwwcurseforgecomminecraftmcmodschinjufumod
 chococrafthttpswwwcurseforgecomminecraftmcmodschococraft3
 combustive fishinghttpswwwcurseforgecomminecraftmcmodscombustivefishing
 complex cropshttpswwwcurseforgecomminecraftmcmodscomplexcrops
 defiled landshttpswwwcurseforgecomminecraftmcmodsdefiledlands
 duck crafthttpswwwcurseforgecomminecraftmcmodsduckcraft
 edible bugshttpswwwcurseforgecomminecraftmcmodsediblebugs
 erebushttpswwwcurseforgecomminecraftmcmodstheerebus
 exotic birdshttpswwwcurseforgecomminecraftmcmodsexoticbirds
 ex sartaginehttpswwwcurseforgecomminecraftmcmodsexsartagine
 extra utilities 2httpswwwcurseforgecomminecraftmcmodsextrautilities
 familiar faunahttpswwwcurseforgecomminecraftmcmodsfamiliarfauna
 fauna and ecologyhttpswwwcurseforgecomminecraftmcmodsfaunaandecology
 food expansionhttpswwwcurseforgecomminecraftmcmodsfoodexpansion
 forestryhttpswwwcurseforgecomminecraftmcmodsforestry
 fossils and archeology revivalhttpswwwcurseforgecomminecraftmcmodsfossils
 galacticrafthttpsmicdoodle8commodsgalacticraft
 glacidushttpswwwcurseforgecomminecraftmcmodsglacidus
 grim packhttpswwwcurseforgecomminecraftmcmodsgrimpack
 grimoire of gaiahttpswwwcurseforgecomminecraftmcmodsgrimoireofgaia
 growthcraft community editionhttpswwwcurseforgecomminecraftmcmodsgrowthcraftcommunityedition
 heat and climatehttpsdefeatedcrowjpmodwikiheatandclimateen
 ice and firehttpswwwcurseforgecomminecraftmcmodsiceandfiredragons
 inspirationshttpswwwcurseforgecomminecraftmcmodsinspirations
 jaffa foodshttpswwwcurseforgecomminecraftmcmodsjaffafoodsaharvestcraftaddon
 jurassicrafthttpswwwcurseforgecomminecraftmcmodsjurassicraft
 lycanites mobshttpswwwcurseforgecomminecraftmcmodslycanitesmobs
 the midnighthttpswwwcurseforgecomminecraftmcmodsthemidnight
 mo ' creatureshttpswwwcurseforgecomminecraftmcmodsmocreatures
 mob mashhttpswwwcurseforgecomminecraftmcmodsmobmash
 mystical worldhttpswwwcurseforgecomminecraftmcmodsmysticalworld
 naturahttpswwwcurseforgecomminecraftmcmodsnatura
 natural faunahttpswwwcurseforgecomminecraftmcmodsnaturalfaunamodazawaaddon
 netherexhttpswwwcurseforgecomminecraftmcmodsnetherex
 oh the biomes you ' ll gohttpswwwcurseforgecomminecraftmcmodsohthebiomesyoullgo
 pam ' s breadcrafthttpswwwcurseforgecomminecraftmcmodspamsbreadcraft
 pam ' s brewcrafthttpswwwcurseforgecomminecraftmcmodspamsbrewcraft
 pam ' s harvestcrafthttpswwwcurseforgecomminecraftmcmodspamsharvestcraft
 pam ' s simply strawberrieshttpswwwcurseforgecomminecraftmcmodspamssimplystrawberries
 pizzacrafthttpswwwcurseforgecomminecraftmcmodspizzacraft
 plant mega packhttpswebarchiveorgweb20181020031322http10paksmodsnetpmphtml
 plantshttpswwwcurseforgecomminecraftmcmodsplants
 primalcorehttpswwwcurseforgecomminecraftmcmodsprimalcore
 primitive mobshttpswwwcurseforgecomminecraftmcmodsprimitivemobs
 project vibrant journeyshttpswwwcurseforgecomminecraftmcmodsprojectvibrantjourneys
 pyrotechhttpswwwcurseforgecomminecraftmcmodspyrotech
 quarkhttpsquarkvazkiinet
 ratshttpswwwcurseforgecomminecraftmcmodsrats
 realworldhttpswebarchiveorgweb20181008045611https10paksmodsnetrealworldhtml
 reptile modhttpswwwcurseforgecomminecraftmcmodslizardmodfiles3247823
 rockhounding surfacehttpswwwcurseforgecomminecraftmcmodsrockhoundingmodsurface
 rootshttpswwwcurseforgecomminecraftmcmodsroots
 roots classichttpswwwcurseforgecomminecraftmcmodsrootsclassic
 rustichttpswwwcurseforgecomminecraftmcmodsrustic
 saltymodhttpswwwcurseforgecomminecraftmcmodssaltymod
 simple cornhttpswwwcurseforgecomminecraftmcmodssimplecorn
 simply teahttpswwwcurseforgecomminecraftmcmodssimplytea
 skye ' s bakeryhttpswwwcurseforgecomminecraftmcmodsskyesbakery
 taco tuesdayhttpswwwcurseforgecomminecraftmcmodstacotuesday
 tea the storyhttpswwwcurseforgecomminecraftmcmodsteathestory
 thaumcrafthttpswwwcurseforgecomminecraftmcmodsthaumcraft
 tinkers constructhttpswwwcurseforgecomminecraftmcmodstinkersconstruct
 tiny progressionshttpswwwcurseforgecomminecraftmcmodstinyprogressions
 tropicrafthttpswwwcurseforgecomminecraftmcmodstropicraft
 twilight foresthttpswwwcurseforgecomminecraftmcmodsthetwilightforest
 vanillafoodpantryhttpswwwcurseforgecomminecraftmcmodsvanillafoodpantrymod
 xl food modhttpswwwcurseforgecomminecraftmcmodsxlfoodmod
 zoo wild animals rebuilthttpswwwcurseforgecomminecraftmcmodszoowildanimalsrebuild

mod support contributions are welcome please create a pull requesthttpsgithubcomwescooknutritionpulls or an issuehttpsgithubcomwescooknutritionissues with the relevant json files",nutrit nutrit highli configur mod enabl creation health system minecraft downloadhttpsgithubcomwescooknutritionreleas wikihttpsgithubcomwescooknutritionwiki changelogchangelogmd nutrit guiscreenshotsguipng nutrit gui config fileshttpsgithubcomwescooknutritionwikiconfigur nutrit allow defin custom food group call nutrientshttpsgithubcomwescooknutritionwikinutri appli effectshttpsgithubcomwescooknutritionwikieffect base nutrit level default nutrit come configur classic five food group system dairi fruit grain protein veget howev mani differ system possibl exampl includ spici toler bar eat enough spici food grant perman resist fire zombi simul must eat brain avoid neg effect gluten intoler eat bread get sick updat mod pleas delet confignutritionnutri directori receiv new mod support thi necessari ' overwrit ani custom mod support mod support default fivefood group system includ abyssalcrafthttpswwwcurseforgecomminecraftmcmodsabyssalcraft actual additionshttpswwwcurseforgecomminecraftmcmodsactuallyaddit advent ascensionhttpswwwcurseforgecomminecraftmcmodsadventofascensionnevermin aetherhttpswwwcurseforgecomminecraftmcmodstheaeth akkamaddi ' ashenwheathttpswwwcurseforgecomminecraftmcmodsakkamaddisashenwheat animaliumhttpswwwcurseforgecomminecraftmcmodsanimalium animaniahttpswwwcurseforgecomminecraftmcmodsanimania aquaculturehttpswwwcurseforgecomminecraftmcmodsaquacultur beastshttpswwwcurseforgecomminecraftmcmodsbeast better anim plushttpswwwcurseforgecomminecraftmcmodsbetteranimalsplu betternetherhttpswwwcurseforgecomminecraftmcmodsbetterneth better addonshttpswwwcurseforgecomminecraftmcmodsbetterwithaddon better modshttpswwwcurseforgecomminecraftmcmodsbwmsuit betweenlandshttpswwwcurseforgecomminecraftmcmodsangrypixelthebetweenlandsmod bewitchmenthttpswwwcurseforgecomminecraftmcmodsbewitch biom ' plentyhttpswwwcurseforgecomminecraftmcmodsbiomesoplenti birdwatch modhttpswwwcurseforgecomminecraftmcmodsthebirdwatchingmod cave roothttpswwwcurseforgecomminecraftmcmodscaveroot chinjufumodhttpswwwcurseforgecomminecraftmcmodschinjufumod chococrafthttpswwwcurseforgecomminecraftmcmodschococraft3 combust fishinghttpswwwcurseforgecomminecraftmcmodscombustivefish complex cropshttpswwwcurseforgecomminecraftmcmodscomplexcrop defil landshttpswwwcurseforgecomminecraftmcmodsdefiledland duck crafthttpswwwcurseforgecomminecraftmcmodsduckcraft edibl bugshttpswwwcurseforgecomminecraftmcmodsediblebug erebushttpswwwcurseforgecomminecraftmcmodstheerebu exot birdshttpswwwcurseforgecomminecraftmcmodsexoticbird ex sartaginehttpswwwcurseforgecomminecraftmcmodsexsartagin extra util 2httpswwwcurseforgecomminecraftmcmodsextrautil familiar faunahttpswwwcurseforgecomminecraftmcmodsfamiliarfauna fauna ecologyhttpswwwcurseforgecomminecraftmcmodsfaunaandecolog food expansionhttpswwwcurseforgecomminecraftmcmodsfoodexpans forestryhttpswwwcurseforgecomminecraftmcmodsforestri fossil archeolog revivalhttpswwwcurseforgecomminecraftmcmodsfossil galacticrafthttpsmicdoodle8commodsgalacticraft glacidushttpswwwcurseforgecomminecraftmcmodsglacidu grim packhttpswwwcurseforgecomminecraftmcmodsgrimpack grimoir gaiahttpswwwcurseforgecomminecraftmcmodsgrimoireofgaia growthcraft commun editionhttpswwwcurseforgecomminecraftmcmodsgrowthcraftcommunityedit heat climatehttpsdefeatedcrowjpmodwikiheatandclimateen ice firehttpswwwcurseforgecomminecraftmcmodsiceandfiredragon inspirationshttpswwwcurseforgecomminecraftmcmodsinspir jaffa foodshttpswwwcurseforgecomminecraftmcmodsjaffafoodsaharvestcraftaddon jurassicrafthttpswwwcurseforgecomminecraftmcmodsjurassicraft lycanit mobshttpswwwcurseforgecomminecraftmcmodslycanitesmob midnighthttpswwwcurseforgecomminecraftmcmodsthemidnight mo ' creatureshttpswwwcurseforgecomminecraftmcmodsmocreatur mob mashhttpswwwcurseforgecomminecraftmcmodsmobmash mystic worldhttpswwwcurseforgecomminecraftmcmodsmysticalworld naturahttpswwwcurseforgecomminecraftmcmodsnatura natur faunahttpswwwcurseforgecomminecraftmcmodsnaturalfaunamodazawaaddon netherexhttpswwwcurseforgecomminecraftmcmodsnetherex oh biom ' gohttpswwwcurseforgecomminecraftmcmodsohthebiomesyoullgo pam ' breadcrafthttpswwwcurseforgecomminecraftmcmodspamsbreadcraft pam ' brewcrafthttpswwwcurseforgecomminecraftmcmodspamsbrewcraft pam ' harvestcrafthttpswwwcurseforgecomminecraftmcmodspamsharvestcraft pam ' simpli strawberrieshttpswwwcurseforgecomminecraftmcmodspamssimplystrawberri pizzacrafthttpswwwcurseforgecomminecraftmcmodspizzacraft plant mega packhttpswebarchiveorgweb20181020031322http10paksmodsnetpmphtml plantshttpswwwcurseforgecomminecraftmcmodspl primalcorehttpswwwcurseforgecomminecraftmcmodsprimalcor primit mobshttpswwwcurseforgecomminecraftmcmodsprimitivemob project vibrant journeyshttpswwwcurseforgecomminecraftmcmodsprojectvibrantjourney pyrotechhttpswwwcurseforgecomminecraftmcmodspyrotech quarkhttpsquarkvazkiinet ratshttpswwwcurseforgecomminecraftmcmodsrat realworldhttpswebarchiveorgweb20181008045611https10paksmodsnetrealworldhtml reptil modhttpswwwcurseforgecomminecraftmcmodslizardmodfiles3247823 rockhound surfacehttpswwwcurseforgecomminecraftmcmodsrockhoundingmodsurfac rootshttpswwwcurseforgecomminecraftmcmodsroot root classichttpswwwcurseforgecomminecraftmcmodsrootsclass rustichttpswwwcurseforgecomminecraftmcmodsrust saltymodhttpswwwcurseforgecomminecraftmcmodssaltymod simpl cornhttpswwwcurseforgecomminecraftmcmodssimplecorn simpli teahttpswwwcurseforgecomminecraftmcmodssimplytea skye ' bakeryhttpswwwcurseforgecomminecraftmcmodsskyesbakeri taco tuesdayhttpswwwcurseforgecomminecraftmcmodstacotuesday tea storyhttpswwwcurseforgecomminecraftmcmodsteathestori thaumcrafthttpswwwcurseforgecomminecraftmcmodsthaumcraft tinker constructhttpswwwcurseforgecomminecraftmcmodstinkersconstruct tini progressionshttpswwwcurseforgecomminecraftmcmodstinyprogress tropicrafthttpswwwcurseforgecomminecraftmcmodstropicraft twilight foresthttpswwwcurseforgecomminecraftmcmodsthetwilightforest vanillafoodpantryhttpswwwcurseforgecomminecraftmcmodsvanillafoodpantrymod xl food modhttpswwwcurseforgecomminecraftmcmodsxlfoodmod zoo wild anim rebuilthttpswwwcurseforgecomminecraftmcmodszoowildanimalsrebuild mod support contribut welcom pleas creat pull requesthttpsgithubcomwescooknutritionpul issuehttpsgithubcomwescooknutritionissu relev json file,nutrition nutrition highly configurable mod enable creation health system minecraft downloadhttpsgithubcomwescooknutritionreleases wikihttpsgithubcomwescooknutritionwiki changelogchangelogmd nutrition guiscreenshotsguipng nutrition gui config fileshttpsgithubcomwescooknutritionwikiconfiguration nutrition allows define custom food group called nutrientshttpsgithubcomwescooknutritionwikinutrients apply effectshttpsgithubcomwescooknutritionwikieffects based nutrition level default nutrition come configured classic five food group system dairy fruit grain protein vegetable however many different system possible example include spicy tolerance bar eating enough spicy food grant permanent resistance fire zombie simulation must eat brain avoid negative effect gluten intolerance eat bread get sick updating mod please delete confignutritionnutrients directory receive new mod support necessary ' overwrite customizations mod supported mod supported default fivefood group system include abyssalcrafthttpswwwcurseforgecomminecraftmcmodsabyssalcraft actually additionshttpswwwcurseforgecomminecraftmcmodsactuallyadditions advent ascensionhttpswwwcurseforgecomminecraftmcmodsadventofascensionnevermine aetherhttpswwwcurseforgecomminecraftmcmodstheaether akkamaddi ' ashenwheathttpswwwcurseforgecomminecraftmcmodsakkamaddisashenwheat animaliumhttpswwwcurseforgecomminecraftmcmodsanimalium animaniahttpswwwcurseforgecomminecraftmcmodsanimania aquaculturehttpswwwcurseforgecomminecraftmcmodsaquaculture beastshttpswwwcurseforgecomminecraftmcmodsbeasts better animal plushttpswwwcurseforgecomminecraftmcmodsbetteranimalsplus betternetherhttpswwwcurseforgecomminecraftmcmodsbetternether better addonshttpswwwcurseforgecomminecraftmcmodsbetterwithaddons better modshttpswwwcurseforgecomminecraftmcmodsbwmsuite betweenlandshttpswwwcurseforgecomminecraftmcmodsangrypixelthebetweenlandsmod bewitchmenthttpswwwcurseforgecomminecraftmcmodsbewitchment biome ' plentyhttpswwwcurseforgecomminecraftmcmodsbiomesoplenty birdwatching modhttpswwwcurseforgecomminecraftmcmodsthebirdwatchingmod cave roothttpswwwcurseforgecomminecraftmcmodscaveroot chinjufumodhttpswwwcurseforgecomminecraftmcmodschinjufumod chococrafthttpswwwcurseforgecomminecraftmcmodschococraft3 combustive fishinghttpswwwcurseforgecomminecraftmcmodscombustivefishing complex cropshttpswwwcurseforgecomminecraftmcmodscomplexcrops defiled landshttpswwwcurseforgecomminecraftmcmodsdefiledlands duck crafthttpswwwcurseforgecomminecraftmcmodsduckcraft edible bugshttpswwwcurseforgecomminecraftmcmodsediblebugs erebushttpswwwcurseforgecomminecraftmcmodstheerebus exotic birdshttpswwwcurseforgecomminecraftmcmodsexoticbirds ex sartaginehttpswwwcurseforgecomminecraftmcmodsexsartagine extra utility 2httpswwwcurseforgecomminecraftmcmodsextrautilities familiar faunahttpswwwcurseforgecomminecraftmcmodsfamiliarfauna fauna ecologyhttpswwwcurseforgecomminecraftmcmodsfaunaandecology food expansionhttpswwwcurseforgecomminecraftmcmodsfoodexpansion forestryhttpswwwcurseforgecomminecraftmcmodsforestry fossil archeology revivalhttpswwwcurseforgecomminecraftmcmodsfossils galacticrafthttpsmicdoodle8commodsgalacticraft glacidushttpswwwcurseforgecomminecraftmcmodsglacidus grim packhttpswwwcurseforgecomminecraftmcmodsgrimpack grimoire gaiahttpswwwcurseforgecomminecraftmcmodsgrimoireofgaia growthcraft community editionhttpswwwcurseforgecomminecraftmcmodsgrowthcraftcommunityedition heat climatehttpsdefeatedcrowjpmodwikiheatandclimateen ice firehttpswwwcurseforgecomminecraftmcmodsiceandfiredragons inspirationshttpswwwcurseforgecomminecraftmcmodsinspirations jaffa foodshttpswwwcurseforgecomminecraftmcmodsjaffafoodsaharvestcraftaddon jurassicrafthttpswwwcurseforgecomminecraftmcmodsjurassicraft lycanites mobshttpswwwcurseforgecomminecraftmcmodslycanitesmobs midnighthttpswwwcurseforgecomminecraftmcmodsthemidnight mo ' creatureshttpswwwcurseforgecomminecraftmcmodsmocreatures mob mashhttpswwwcurseforgecomminecraftmcmodsmobmash mystical worldhttpswwwcurseforgecomminecraftmcmodsmysticalworld naturahttpswwwcurseforgecomminecraftmcmodsnatura natural faunahttpswwwcurseforgecomminecraftmcmodsnaturalfaunamodazawaaddon netherexhttpswwwcurseforgecomminecraftmcmodsnetherex oh biome ' gohttpswwwcurseforgecomminecraftmcmodsohthebiomesyoullgo pam ' breadcrafthttpswwwcurseforgecomminecraftmcmodspamsbreadcraft pam ' brewcrafthttpswwwcurseforgecomminecraftmcmodspamsbrewcraft pam ' harvestcrafthttpswwwcurseforgecomminecraftmcmodspamsharvestcraft pam ' simply strawberrieshttpswwwcurseforgecomminecraftmcmodspamssimplystrawberries pizzacrafthttpswwwcurseforgecomminecraftmcmodspizzacraft plant mega packhttpswebarchiveorgweb20181020031322http10paksmodsnetpmphtml plantshttpswwwcurseforgecomminecraftmcmodsplants primalcorehttpswwwcurseforgecomminecraftmcmodsprimalcore primitive mobshttpswwwcurseforgecomminecraftmcmodsprimitivemobs project vibrant journeyshttpswwwcurseforgecomminecraftmcmodsprojectvibrantjourneys pyrotechhttpswwwcurseforgecomminecraftmcmodspyrotech quarkhttpsquarkvazkiinet ratshttpswwwcurseforgecomminecraftmcmodsrats realworldhttpswebarchiveorgweb20181008045611https10paksmodsnetrealworldhtml reptile modhttpswwwcurseforgecomminecraftmcmodslizardmodfiles3247823 rockhounding surfacehttpswwwcurseforgecomminecraftmcmodsrockhoundingmodsurface rootshttpswwwcurseforgecomminecraftmcmodsroots root classichttpswwwcurseforgecomminecraftmcmodsrootsclassic rustichttpswwwcurseforgecomminecraftmcmodsrustic saltymodhttpswwwcurseforgecomminecraftmcmodssaltymod simple cornhttpswwwcurseforgecomminecraftmcmodssimplecorn simply teahttpswwwcurseforgecomminecraftmcmodssimplytea skye ' bakeryhttpswwwcurseforgecomminecraftmcmodsskyesbakery taco tuesdayhttpswwwcurseforgecomminecraftmcmodstacotuesday tea storyhttpswwwcurseforgecomminecraftmcmodsteathestory thaumcrafthttpswwwcurseforgecomminecraftmcmodsthaumcraft tinker constructhttpswwwcurseforgecomminecraftmcmodstinkersconstruct tiny progressionshttpswwwcurseforgecomminecraftmcmodstinyprogressions tropicrafthttpswwwcurseforgecomminecraftmcmodstropicraft twilight foresthttpswwwcurseforgecomminecraftmcmodsthetwilightforest vanillafoodpantryhttpswwwcurseforgecomminecraftmcmodsvanillafoodpantrymod xl food modhttpswwwcurseforgecomminecraftmcmodsxlfoodmod zoo wild animal rebuilthttpswwwcurseforgecomminecraftmcmodszoowildanimalsrebuild mod support contribution welcome please create pull requesthttpsgithubcomwescooknutritionpulls issuehttpsgithubcomwescooknutritionissues relevant json file
Java,"
## 营养大师

一款基于数据分析的智能饮食推荐APP  

仓库地址: https://github.com/wangtianrui/NutritionMaster

### 数据分析

* 人体健康信息
  * 体重
  * 身高
  * 年龄
* 菜品信息
  * 菜的名称
  * 卡路里
  * 蛋白质,脂肪等
  * 推荐的食用量
* 某个人群对应的改善体质(减肥,塑性,增肌等)的方案
  * 菜谱
  * 运动方式

### 数据集和api

**赵励志收集的资料**

* 图像识别食物,获取卡路里: https://cloud.baidu.com/product/imagerecognition/fine_grained
* **nutrition facts** from food : https://www.kaggle.com/openfoodfacts/world-food-facts#en.openfoodfacts.org.products.tsv
  * https://world.openfoodfacts.org/ 数据集官网
  * 456赞,目前为止发现的最高的相关数据集
* nutrition facts for **McDonald’s** : https://www.kaggle.com/mcdonalds/nutrition-facts
  * Calories, fat, and sugar for every cheeseburger, fries, and milkshake on menu
* 更牛逼的食材分析和菜谱推荐: http://pic2recipe.csail.mit.edu/    加强版百度API
* 莫须有数据集
  * 糖尿病 时间-血糖含量关系数据 : https://archive.ics.uci.edu/ml/datasets/diabetes
  * GPA和饮食习惯的关系 : https://www.kaggle.com/borapajo/food-choices

**王天锐收集的资料**

0、9种体质   //暂定
1、根据用户的体质来进行推荐菜谱与制定营养计划     ----  两种模式：9体模式和普通健身模式
2、用户可以随时输入自己当前吃的食物的名字与量     ----  随时记
3、动态爬虫——http://www.boohee.com/       每种食材的卡路里等信息（优先kaggle）
4、卡路里累加器及其可视化、每天个人信息可视化
5、https://www.xinshipu.com/      菜谱信息
6、通过照片提取出食物的卡路里等信息  百度api
7、http://www.zyyssl.com/cookbook.html    //中药食材信息、药膳信息、9体、各种病针对的药膳
8、照片识菜帮
9、http://www.ttmeishi.com/CaiXi/YaoShan/  //病人对应的食谱  
10、测算http://www.chinacaipu.com/zt/sccs.html  体质算法 
11、http://www.chinacaipu.com/menu/jianya/      特殊人群（压力之类的）



### 需求分析

* 登陆、注册
* 输入基本信息信息（身高、体重、性别、年龄）
  * 额外信息（工作、周均运动时间、睡眠段、九体、病史）
* 针对没有填写额外信息的用户：选择减肥、增肌、塑形 、保持
* 可视化（自己的信息和目标标准的比较、根据上述选择改变）每天的量（手环、手机计步器），近几天的曲线
* 推荐菜谱：两个tab，一个定制菜谱，一个是随机智能推送
  * 单一菜推荐
  * 组合推荐
  * 一周大菜谱推荐（根据每日你自己加的一些信息动态改变）
  * 如果填了额外信息的，就是药膳推荐（一周药膳、周二普通、周三药膳。。。。）（注意可能不想减肥啥的）
* 百度api->动态录入每顿饭的信息（防抖处理，这里吹牛逼算法，推测吃了多少卡路里），识别后把，动态改变一周定制计划
* 做菜环节加入识菜帮所有功能，并加入详细食材信息卡路里等
* 针对特殊人群，混到推荐里推送有利于健康的**方法**信息（敷黄瓜方法）
* 特殊病人群体每日相关东西的摄取量的一个限定区间显示
* ocr体检单信息录入
* **针对照片中菜的数量分析吃了多少菜,包含多少卡路里**



### 10-6更新：小细节

* BMI小数
* 需不需要为每个用户加一个用于存放一周定制的类，（这个应该不是特别需要，只是想想）
* 模糊搜索
* 食材对应menu



#### 24日更新内容



粉尘接触得多的 吃纤维素

* 职业,某种病对各种物质的需求
  * 修改职业,病(一些菜谱分类),体质 表
  * 把职业分为几类(多动的,少动的)用于BMI标准
* https://www.google.com/search?q=%E8%90%A5%E5%85%BB%E5%85%83%E7%B4%A0%E9%9C%80%E6%B1%82&oq=%E8%90%A5%E5%85%BB%E5%85%83%E7%B4%A0&aqs=chrome.1.69i57j69i59j0l4.5781j0j1&sourceid=chrome&ie=UTF-8
* 职业\病\九体\体质(BMI) 结合起来的**物质需求标准**  (要求有 **卡路里**  六芒星),以周为单位计算需求量 
* 特殊职业(比如运动员)对身体素质(BMI)标准
* 早  中晚餐分类:
  * 早: 饼 粥 羹 面 奶  
* **加入季节方案(比如夏天就推荐防暑的,冬天推荐暖身的)**
* 蒋:
  * 补充菜谱: url补充缺失值,卡路里,热量,脂肪,蛋白质等
    * 爬卡路里时,原来的菜名是一列,新爬到的是一列,后面几列就是卡路里,脂肪等,注意数据规整
    * 爬不到就先空下,根据食材的信息计算
  * 食材的信息(包括卡路里等)
  * http://www.boohee.com/food/search?keyword=%E8%8C%B6%E5%8F%B6%EF%BC%88%E7%BA%A650%E5%85%8B%EF%BC%89
  * 菜谱的简单介绍
* 浏览记录(post  username和menuname和时间)

王:定制( 需要蒋给我比如:蛋白质在100-200范围内的菜谱)

蒋: 

* 体质表: 添加几列对某种物质的需求  √

* 职业表: 添加几列对某种物质的需求,添加一列BMI的需求 √

* user表: 添加综合对物质的需求 √

* 菜单表: 
  * 添加一列早/午晚餐,早为1,else为0.  根据 饼 粥 羹 面 奶  判断  
  * 补充一下缺失的url,卡路里 √
  * 添加几列各种物质的需求 √
    * 有一部分数据是爬下的csv里面直接读取,一部分缺失的用food_material的组合来计算

* **对接任务**: 接口使用方法可以参尻main函数里面的注释和数据库ER图

  * WebUtil改成了单例,一些方法注意一下

  * 注册: `createUser`.注意年龄应该让用户填出生年,获取年龄时每次都根据年份计算一下

    * 直接set设置用户的各种信息,不需要的就空着不用set,特殊的一点是病有多个值,要用一个List

    ![](http://ww1.sinaimg.cn/large/0077h8xtly1fvu5tfi47aj30mv0gg403.jpg)

  * 修改用户信息 `changeUserInfo`,注意username必须设置,其他的是需要改的值.**修改会覆盖之前的内容**.比如用户之前illness是健忘食谱,想增加一个高血压食谱, 就需要把之前的也写上,就是一起传 `健忘食谱,高血压食谱`这两个参数.写到List里面. 具体参考main函数里面的

  * 获取九体信息 `getPhysique`方法

  * 获取用户营养元素所需的量: 先`getUser`获取到用户的病/职业/体质名字,然后根据这些名字查询每个 病/职业/体质信息对应的元素需求,最后加权计算 (这里是不是麻烦了点?)

  * 用户职业BMI分类 3多动,2中等,1少动  先 `getUser`获取到用户的职业名字.然后`getOccupation`获取到该职业的BMI分类

  * 动态改变用户已吃的营养元素的量: 在用户表添加element参数,每周自动清空一次

    * Map的可选参数:  `[calorie,carbohydrate,fat ,protein,cellulose,vitaminA,vitaminB1,vitaminB2,vitaminB6,vitaminC,vitaminE,carotene,cholesterol,Mg,Ca,Fe,Zn,Cu,Mn,K ,P ,Na,Se,niacin ,thiamine]`

    ```java
    public static void main(String[] args) {
        	//只传入变动的参数就行.
        	//比如 这顿饭摄入了100卡路里,10脂肪.就这样写.
            Map<String, Double> params = new HashMap<>();
            params.put(""calorie"", 100.0);
            params.put(""fat"", 10.0);
    		
        	//第一个参数是username,第二个参数是摄入的营养元素值.可以看函数的源码,有注释
            WebUtil.getInstance().eatenElements(""test5"", params, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
    
                }
    
                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    System.out.println(new Gson().fromJson(response.body().string(), MyUser.class));
    
                }
            });
    }
    ```

  * 获取用户本周已摄入的营养元素的量: `getUser`得到当前用户的信息,解析后用`MyUser`的`getEaten_elements()`获取到Element对象.里面有各种元素信息

  * 根据多个食材组合来搜菜

    ```java
    List<String> materialList = new ArrayList<>();
            materialList.add(""黄瓜"");
            materialList.add(""茄子"");
    //        materialList.add(""鸡蛋"");
            WebUtil.getInstance().getMenusByMaterials(materialList, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
    
                }
    
                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    //必须判断状态码,如果为200说明正常,如果为404,说明这几个食材组合查询不到可以做的菜
                    if (response.code() == 200) {
                        String json = response.body().string();
                        FoodMenu[] menus = new Gson().fromJson(json, FoodMenu[].class);
                        System.out.println(menus);
                        for (FoodMenu menu : menus) {
                            System.out.println(menu.getName());
                        }
                    } else {
                        System.out.println(""查不到组合食材可以做的菜"");
                    }
                }
            });
    ```

  * 用户的浏览历史: 添加用户和菜谱的多对多关系

    ```java
    //获取历史记录  传入username
    WebUtil.getInstance().getEatenHistory(""test5"", new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
    
                }
    
                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    String json = response.body().string();
                    History[] histories = new Gson().fromJson(json, History[].class);
                    System.out.println(Arrays.toString(histories));
                }
            });
    //添加历史记录  传入username 和 Menu的名字
    WebUtil.getInstance().addEatenHistory(""test5"", ""多味茄子泥"", new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
    
                }
    
                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    String json = response.body().string();
                    History history = new Gson().fromJson(json, History.class);
                    System.out.println(history);
                }
            });
    ```

  * 菜名搜索: `getMenu`方法,传入菜名(菜名通过其他的各种关联方式获取) (menu.calorie是直接爬到的卡路里值,营养元素里的menu.elements.calorie卡路里是根据每个食材的卡路里计算的,相对来说,menu.calorie的值更准确)

  * 功效搜菜 `getMenuClassification`传入分类(功效)参数,比如川菜.搜到所有的川菜名字.然后可以用菜名搜索搜某个菜的详细信息

  * **点赞或评论来影响推荐顺序**

  * **晒图区域**

  * 营养量搜菜 : 搜索某个营养量范围内的菜

    可选参数:  `[calorie,carbohydrate,fat ,protein,cellulose,vitaminA,vitaminB1,vitaminB2,vitaminB6,vitaminC,vitaminE,carotene,cholesterol,Mg,Ca,Fe,Zn,Cu,Mn,K ,P ,Na,Se,niacin ,thiamine]`

    ```java
    public static void main(String[] args) {
        	//首先构造一个Map, key是参数的名字,value是参数的值.用不到的参数不用写.
        	//我在服务器端根据这些参数构造一个sql,就是 ... WHERE key1 <= val1 AND ...这样的.
       		//所以你只传入需要作为搜索条件的参数就可以了.
            Map<String, Double> params = new HashMap<>();
            params.put(""calorie"", 100.0);
            params.put(""fat"", 10.0);
            WebUtil.getInstance().getMenusByElements(params, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
    
                }
    
                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    String json = response.body().string();
                    System.out.println(json);
                    //用轻量级的菜单类MenuLight解析json,这个类只有Menu的[名字,卡路里,元素对象的主码id]这三个域.想获取详细信息可以用getMenu方法获取
                    //这样是为了查询更快
                    FoodMenuLight[] foodMenuLights = new Gson().fromJson(json, FoodMenuLight[].class);
                    System.out.println(Arrays.toString(foodMenuLights));
                }
            });
    }
    ```

  * **季节搜菜**

  * 小知识获取 : `getRandomTricks`



![1538310994730](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\1538310994730.png)

![1538313835249](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\1538313835249.png)



#### 又想到的补充内容

- 根据口味推荐,或者口味混合搭配推荐
- 注意冬天不推荐夏天的菜谱

### 数据库设计

![](http://ww1.sinaimg.cn/large/0077h8xtly1fvu67fbm8qj312f0sux6p.jpg)

**加下划线为主码,加粗为外码,默认not null**

* **菜谱**(<u>str菜名</u>,  **nullable str体质_名称**(对应最优菜谱的效果) ,int卡路里,int制作时间(分钟),str口味,str工艺,str做法,str图片url)
  * menu
* **食材**( <u>str名称</u>)
  * material
* **体质**(<u>str体质名称</u>,str体质特点,str运动调理方式)
  * physique
* **体质性状**(<u>str性状名称</u>)
  * Physical properties
* **菜谱功能和分类**( <u>str分类名称</u>)
  * menu classification
* **用户**( <u>str用户名</u>,str密码, **nullable str 体质-名称**,**nullable str特殊职业**)
  * User
* **特殊职业**( <u>str职业名称</u>)
  * Occupation
* 菜谱功能分类_可治愈的职业\_特殊职业( <u> **特殊职业-str职业名称**</u>, <u> **菜谱功能和分类-str分类名称**</u>)
* 菜谱\_做菜_食材 ( <u>**str菜谱-菜名**</u>,**<u>str食材-名称**</u>,int用量)
  * cook quantity
* 食材\_效果_体质(<u> **str食材-名称**</u>,<u> **nullable str体质-名称**</u>,int效果(1有利于,0不利于))
  * Material effect
* 体质\_身体状态_体质性状( <u> **str体质-名称**</u>, <u> **str体质性状-性状名称**</u>)
  * physical_state
* 菜谱\_菜谱效果_菜谱功能和分类( <u> **str菜谱-菜名**</u>, <u> **str菜谱功能和分类-分类名称**</u>)
  * menu_effect



### 服务器请求

| 说明     | 方法   | 请求示例                                     | 备注                            |
| ------ | ---- | ---------------------------------------- | ----------------------------- |
| 查询菜单信息 | GET  | http://120.77.182.38/menus/某菜名/          | 不加菜名默认请求所有菜单(服务器可能扛不住)        |
| 查询食材信息 | GET  | http://120.77.182.38/foodmaterial/西红柿/   | 同上                            |
| 查询用户信息 | GET  | http://120.77.182.38/myuser/zhaolizhi/   | 同上                            |
| 新建用户信息 | POST | http://120.77.182.38/myuser/             | 参数见下图                         |
| 查询菜谱分类 | GET  | http://120.77.182.38/menuclassification/糖尿病食谱/ | 不加分类名默认请求所有分类(和对应的菜谱),响应时间较长  |
| 查询职业信息 | GET  | http://120.77.182.38/occupation/电力工程师/   | 不加职业名默认查询所有,响应较快  返回职业对应的菜单分类 |
| 查询体质信息 | GET  | http://120.77.182.38/physique/气虚质/       | 返回体质需要的食材                     |
|        |      |                                          |                               |
|        |      |                                          |                               |

* POST新建用户信息`params`示例

  * 1♂   0♀
  * `occupation_name`,`physical_name`的值必须和数据库对应

  ![](http://ww1.sinaimg.cn/large/0077h8xtly1fvjbfh6vm1j30r70eh3zj.jpg)



## 国赛阶段

### 代码

* 优化了`getRandomMenus方法`,传入username参数.会根据user的体质,职业,病理推荐菜

  ```java
  public void getRandomMenus(int count, String username, Callback callback)
  ```

  这个方法之前的版本没有username参数,**现在弃用原来的版本,原来的方法仍然可以调用,需要把项目的所有getRandomMenus方法调用加上一个username参数**

### 问题

* ~~连续识别,出现错误的,点一下消去  锐!~~
* ~~bug: 连续拍照后 点了一周定制  锐~~
* ~~*食材模糊识别 ok*~~
* ~~通过食材组合,搜索菜 ,菜要符合username的信息   蒋和锐 `getMenusByMaterials`~~
* 卡路里不对
* ~~*早餐晚餐的搜索不随机 shuffle了一下.ok*~~

  * ~~`get_menus_by_elements` django随机一下~~
* 周定制下面的两个按钮  锐
* ~~*搜菜如果搜不到   把name减一下再搜  ok*~~
* getRandomMenus的调用里面加上username参数 锐
* 吃饭的时候没拍照,吃饭完了才想添加,但是菜图片没有了.需要输入添加 (王)
* 口味信息采集
* 历史记录
* 社交功能: 点赞,晒图,评论


  ### 时间安排

* 周日上午答辩
* 周五排练

### PPT安排

* 小组分工介绍


* 产品背景 秦
* 量身定制 林
* 周定制 林
* 动态添加 智能定量 赵
* 拍食材做菜(食菜帮) 赵
* 菜谱推荐 秦

* 产品亮点 秦
* 产品难点 王
* 未来展望 王
  * 相信在不就得将来,在AI智能定制膳食的帮助下,人们不再为职业病,慢性病所烦恼,享受科学膳食带来的健康生活.

### 需要演示的功能

* 拍照  菜品识别  识别  烤鸭 土豆丝  鱼香肉丝  红烧肉  炒面   (动态调量,修改当天余额)
* 拍照 食材识别  胡萝卜  白萝卜  姜  长条茄子  菜花   (根据用户的信息,并且是多搜索)

* 周定制(最左边的fragment) 
","app 

 httpsgithubcomwangtianruinutritionmaster

 

 
 
 
 
 
 
 
 
 
 
 
 

 api



 httpscloudbaiducomproductimagerecognitionfinegrained
 nutrition facts from food httpswwwkagglecomopenfoodfactsworldfoodfactsenopenfoodfactsorgproductstsv
 httpsworldopenfoodfactsorg 
 456
 nutrition facts for mcdonalds httpswwwkagglecommcdonaldsnutritionfacts
 calories fat and sugar for every cheeseburger fries and milkshake on menu
 httppic2recipecsailmitedu api
 
 httpsarchiveicsuciedumldatasetsdiabetes
 gpa httpswwwkagglecomborapajofoodchoices



09 
1 9
2 
3httpwwwbooheecom kaggle
4
5httpswwwxinshipucom 
6 api
7httpwwwzyysslcomcookbookhtml 9
8
9httpwwwttmeishicomcaixiyaoshan 
10httpwwwchinacaipucomztsccshtml 
11httpwwwchinacaipucommenujianya 



 

 
 
 
 
 
 tab
 
 
 
 
 api
 
 
 
 ocr
 



 106

 bmi
 
 
 menu



 24



 

 
 
 bmi
 httpswwwgooglecomsearchqe890a5e585bbe58583e7b4a0e99c80e6b182oqe890a5e585bbe58583e7b4a0aqschrome169i57j69i59j0l45781j0j1sourceidchromeieutf8
 bmi 
 bmi
 
 
 
 
 url
 
 
 
 httpwwwbooheecomfoodsearchkeyworde88cb6e58fb6efbc88e7baa650e5858befbc89
 
 post usernamemenuname

 100200

 

 

 bmi 

 user 

 
 1else0 
 url 
 
 csvfoodmaterial

 mainer

 webutil

 createuser

 setsetlist

 httpww1sinaimgcnlarge0077h8xtly1fvu5tfi47aj30mv0gg403jpg

 changeuserinfousernameillness list main

 getphysique

 getuser 

 bmi 321 getusergetoccupationbmi

 element

 map caloriecarbohydratefat proteincellulosevitaminavitaminb1vitaminb2vitaminb6vitamincvitaminecarotenecholesterolmgcafezncumnk p naseniacin thiamine

 java
 public static void mainstring args 
 &#9; 
 &#9; 10010
 mapstring double params new hashmap
 paramsputcalorie 1000
 paramsputfat 100
 &#9; &#9; 
 &#9; username
 webutilgetinstanceeatenelementstest5 params new callback 
 override
 public void onfailurecall call ioexception e 
 
 
 
 override
 public void onresponsecall call response response throws ioexception 
 systemoutprintlnnew gsonfromjsonresponsebodystring myuserclass
 
 
 
 
 

 getusermyusergeteatenelementselement

 

 java
 liststring materiallist new arraylist
 materiallistadd
 materiallistadd
 materiallistadd
 webutilgetinstancegetmenusbymaterialsmateriallist new callback 
 override
 public void onfailurecall call ioexception e 
 
 
 
 override
 public void onresponsecall call response response throws ioexception 
 200404
 if responsecode 200 
 string json responsebodystring
 foodmenu menus new gsonfromjsonjson foodmenuclass
 systemoutprintlnmenus
 for foodmenu menu menus 
 systemoutprintlnmenugetname
 
 else 
 systemoutprintln
 
 
 
 

 

 java
 username
 webutilgetinstancegeteatenhistorytest5 new callback 
 override
 public void onfailurecall call ioexception e 
 
 
 
 override
 public void onresponsecall call response response throws ioexception 
 string json responsebodystring
 history histories new gsonfromjsonjson historyclass
 systemoutprintlnarraystostringhistories
 
 
 username menu
 webutilgetinstanceaddeatenhistorytest5 new callback 
 override
 public void onfailurecall call ioexception e 
 
 
 
 override
 public void onresponsecall call response response throws ioexception 
 string json responsebodystring
 history history new gsonfromjsonjson historyclass
 systemoutprintlnhistory
 
 
 

 getmenu menucaloriemenuelementscaloriemenucalorie

 getmenuclassification

 

 

 

 caloriecarbohydratefat proteincellulosevitaminavitaminb1vitaminb2vitaminb6vitamincvitaminecarotenecholesterolmgcafezncumnk p naseniacin thiamine

 java
 public static void mainstring args 
 &#9; map keyvalue
 &#9; sql where key1 val1 and 
 &#9; &#9; 
 mapstring double params new hashmap
 paramsputcalorie 1000
 paramsputfat 100
 webutilgetinstancegetmenusbyelementsparams new callback 
 override
 public void onfailurecall call ioexception e 
 
 
 
 override
 public void onresponsecall call response response throws ioexception 
 string json responsebodystring
 systemoutprintlnjson
 menulightjsonmenuidgetmenu
 
 foodmenulight foodmenulights new gsonfromjsonjson foodmenulightclass
 systemoutprintlnarraystostringfoodmenulights
 
 
 
 

 

 getrandomtricks



1538310994730cusersadministratorappdataroamingtyporatyporauserimages1538310994730png

1538313835249cusersadministratorappdataroamingtyporatyporauserimages1538313835249png



 

 
 

 

httpww1sinaimgcnlarge0077h8xtly1fvu67fbm8qj312f0sux6pjpg

not null

 ustru nullable str intintstrstrstrstrurl
 menu
 ustru
 material
 ustrustrstr
 physique
 ustru
 physical properties
 ustru
 menu classification
 ustrustr nullable str nullable str
 user
 ustru
 occupation
 u stru u stru
 ustruustruint
 cook quantity
 u struu nullable struint10
 material effect
 u stru u stru
 physicalstate
 u stru u stru
 menueffect



 

 
 
 get http1207718238menus 
 get http1207718238foodmaterial 
 get http1207718238myuserzhaolizhi 
 post http1207718238myuser 
 get http1207718238menuclassification 
 get http1207718238occupation 
 get http1207718238physique 
 
 

 postparams

 1 0
 occupationnamephysicalname

 httpww1sinaimgcnlarge0077h8xtly1fvjbfh6vm1j30r70eh3zjjpg



 

 

 getrandommenususernameuser

 java
 public void getrandommenusint count string username callback callback
 

 usernamegetrandommenususername

 

 
 bug 
 ok
 username getmenusbymaterials
 
 shuffleok

 getmenusbyelements django
 
 name ok
 getrandommenususername 
 
 
 
 


 

 
 

 ppt

 


 
 
 
 
 
 

 
 
 
 ai

 

 
 

 fragment",app httpsgithubcomwangtianruinutritionmast api httpscloudbaiducomproductimagerecognitionfinegrain nutrit fact food httpswwwkagglecomopenfoodfactsworldfoodfactsenopenfoodfactsorgproductstsv httpsworldopenfoodfactsorg 456 nutrit fact mcdonald httpswwwkagglecommcdonaldsnutritionfact calori fat sugar everi cheeseburg fri milkshak menu httppic2recipecsailmitedu api httpsarchiveicsuciedumldatasetsdiabet gpa httpswwwkagglecomborapajofoodchoic 09 1 9 2 3httpwwwbooheecom kaggl 4 5httpswwwxinshipucom 6 api 7httpwwwzyysslcomcookbookhtml 9 8 9httpwwwttmeishicomcaixiyaoshan 10httpwwwchinacaipucomztsccshtml 11httpwwwchinacaipucommenujianya tab api ocr 106 bmi menu 24 bmi httpswwwgooglecomsearchqe890a5e585bbe58583e7b4a0e99c80e6b182oqe890a5e585bbe58583e7b4a0aqschrome169i57j69i59j0l45781j0j1sourceidchromeieutf8 bmi bmi url httpwwwbooheecomfoodsearchkeyworde88cb6e58fb6efbc88e7baa650e5858befbc89 post usernamemenunam 100200 bmi user 1else0 url csvfoodmateri mainer webutil createus setsetlist httpww1sinaimgcnlarge0077h8xtly1fvu5tfi47aj30mv0gg403jpg changeuserinfousernameil list main getphysiqu getus bmi 321 getusergetoccupationbmi element map caloriecarbohydratefat proteincellulosevitaminavitaminb1vitaminb2vitaminb6vitamincvitaminecarotenecholesterolmgcafezncumnk p naseniacin thiamin java public static void mainstr arg &#9; &#9; 10010 mapstr doubl param new hashmap paramsputcalori 1000 paramsputfat 100 &#9; &#9; &#9; usernam webutilgetinstanceeatenelementstest5 param new callback overrid public void onfailurecal call ioexcept e overrid public void onresponsecal call respons respons throw ioexcept systemoutprintlnnew gsonfromjsonresponsebodystr myuserclass getusermyusergeteatenelementsel java liststr materiallist new arraylist materiallistadd materiallistadd materiallistadd webutilgetinstancegetmenusbymaterialsmateriallist new callback overrid public void onfailurecal call ioexcept e overrid public void onresponsecal call respons respons throw ioexcept 200404 responsecod 200 string json responsebodystr foodmenu menu new gsonfromjsonjson foodmenuclass systemoutprintlnmenu foodmenu menu menu systemoutprintlnmenugetnam els systemoutprintln java usernam webutilgetinstancegeteatenhistorytest5 new callback overrid public void onfailurecal call ioexcept e overrid public void onresponsecal call respons respons throw ioexcept string json responsebodystr histori histori new gsonfromjsonjson historyclass systemoutprintlnarraystostringhistori usernam menu webutilgetinstanceaddeatenhistorytest5 new callback overrid public void onfailurecal call ioexcept e overrid public void onresponsecal call respons respons throw ioexcept string json responsebodystr histori histori new gsonfromjsonjson historyclass systemoutprintlnhistori getmenu menucaloriemenuelementscaloriemenucalori getmenuclassif caloriecarbohydratefat proteincellulosevitaminavitaminb1vitaminb2vitaminb6vitamincvitaminecarotenecholesterolmgcafezncumnk p naseniacin thiamin java public static void mainstr arg &#9; map keyvalu &#9; sql key1 val1 &#9; &#9; mapstr doubl param new hashmap paramsputcalori 1000 paramsputfat 100 webutilgetinstancegetmenusbyelementsparam new callback overrid public void onfailurecal call ioexcept e overrid public void onresponsecal call respons respons throw ioexcept string json responsebodystr systemoutprintlnjson menulightjsonmenuidgetmenu foodmenulight foodmenulight new gsonfromjsonjson foodmenulightclass systemoutprintlnarraystostringfoodmenulight getrandomtrick 1538310994730cusersadministratorappdataroamingtyporatyporauserimages1538310994730png 1538313835249cusersadministratorappdataroamingtyporatyporauserimages1538313835249png httpww1sinaimgcnlarge0077h8xtly1fvu67fbm8qj312f0sux6pjpg null ustru nullabl str intintstrstrstrstrurl menu ustru materi ustrustrstr physiqu ustru physic properti ustru menu classif ustrustr nullabl str nullabl str user ustru occup u stru u stru ustruustruint cook quantiti u struu nullabl struint10 materi effect u stru u stru physicalst u stru u stru menueffect get http1207718238menu get http1207718238foodmateri get http1207718238myuserzhaolizhi post http1207718238myuser get http1207718238menuclassif get http1207718238occup get http1207718238physiqu postparam 1 0 occupationnamephysicalnam httpww1sinaimgcnlarge0077h8xtly1fvjbfh6vm1j30r70eh3zjjpg getrandommenususernameus java public void getrandommenusint count string usernam callback callback usernamegetrandommenususernam bug ok usernam getmenusbymateri shuffleok getmenusbyel django name ok getrandommenususernam ppt ai fragment,app httpsgithubcomwangtianruinutritionmaster api httpscloudbaiducomproductimagerecognitionfinegrained nutrition fact food httpswwwkagglecomopenfoodfactsworldfoodfactsenopenfoodfactsorgproductstsv httpsworldopenfoodfactsorg 456 nutrition fact mcdonalds httpswwwkagglecommcdonaldsnutritionfacts calorie fat sugar every cheeseburger fry milkshake menu httppic2recipecsailmitedu api httpsarchiveicsuciedumldatasetsdiabetes gpa httpswwwkagglecomborapajofoodchoices 09 1 9 2 3httpwwwbooheecom kaggle 4 5httpswwwxinshipucom 6 api 7httpwwwzyysslcomcookbookhtml 9 8 9httpwwwttmeishicomcaixiyaoshan 10httpwwwchinacaipucomztsccshtml 11httpwwwchinacaipucommenujianya tab api ocr 106 bmi menu 24 bmi httpswwwgooglecomsearchqe890a5e585bbe58583e7b4a0e99c80e6b182oqe890a5e585bbe58583e7b4a0aqschrome169i57j69i59j0l45781j0j1sourceidchromeieutf8 bmi bmi url httpwwwbooheecomfoodsearchkeyworde88cb6e58fb6efbc88e7baa650e5858befbc89 post usernamemenuname 100200 bmi user 1else0 url csvfoodmaterial mainer webutil createuser setsetlist httpww1sinaimgcnlarge0077h8xtly1fvu5tfi47aj30mv0gg403jpg changeuserinfousernameillness list main getphysique getuser bmi 321 getusergetoccupationbmi element map caloriecarbohydratefat proteincellulosevitaminavitaminb1vitaminb2vitaminb6vitamincvitaminecarotenecholesterolmgcafezncumnk p naseniacin thiamine java public static void mainstring args &#9; &#9; 10010 mapstring double params new hashmap paramsputcalorie 1000 paramsputfat 100 &#9; &#9; &#9; username webutilgetinstanceeatenelementstest5 params new callback override public void onfailurecall call ioexception e override public void onresponsecall call response response throw ioexception systemoutprintlnnew gsonfromjsonresponsebodystring myuserclass getusermyusergeteatenelementselement java liststring materiallist new arraylist materiallistadd materiallistadd materiallistadd webutilgetinstancegetmenusbymaterialsmateriallist new callback override public void onfailurecall call ioexception e override public void onresponsecall call response response throw ioexception 200404 responsecode 200 string json responsebodystring foodmenu menu new gsonfromjsonjson foodmenuclass systemoutprintlnmenus foodmenu menu menu systemoutprintlnmenugetname else systemoutprintln java username webutilgetinstancegeteatenhistorytest5 new callback override public void onfailurecall call ioexception e override public void onresponsecall call response response throw ioexception string json responsebodystring history history new gsonfromjsonjson historyclass systemoutprintlnarraystostringhistories username menu webutilgetinstanceaddeatenhistorytest5 new callback override public void onfailurecall call ioexception e override public void onresponsecall call response response throw ioexception string json responsebodystring history history new gsonfromjsonjson historyclass systemoutprintlnhistory getmenu menucaloriemenuelementscaloriemenucalorie getmenuclassification caloriecarbohydratefat proteincellulosevitaminavitaminb1vitaminb2vitaminb6vitamincvitaminecarotenecholesterolmgcafezncumnk p naseniacin thiamine java public static void mainstring args &#9; map keyvalue &#9; sql key1 val1 &#9; &#9; mapstring double params new hashmap paramsputcalorie 1000 paramsputfat 100 webutilgetinstancegetmenusbyelementsparams new callback override public void onfailurecall call ioexception e override public void onresponsecall call response response throw ioexception string json responsebodystring systemoutprintlnjson menulightjsonmenuidgetmenu foodmenulight foodmenulights new gsonfromjsonjson foodmenulightclass systemoutprintlnarraystostringfoodmenulights getrandomtricks 1538310994730cusersadministratorappdataroamingtyporatyporauserimages1538310994730png 1538313835249cusersadministratorappdataroamingtyporatyporauserimages1538313835249png httpww1sinaimgcnlarge0077h8xtly1fvu67fbm8qj312f0sux6pjpg null ustru nullable str intintstrstrstrstrurl menu ustru material ustrustrstr physique ustru physical property ustru menu classification ustrustr nullable str nullable str user ustru occupation u stru u stru ustruustruint cook quantity u struu nullable struint10 material effect u stru u stru physicalstate u stru u stru menueffect get http1207718238menus get http1207718238foodmaterial get http1207718238myuserzhaolizhi post http1207718238myuser get http1207718238menuclassification get http1207718238occupation get http1207718238physique postparams 1 0 occupationnamephysicalname httpww1sinaimgcnlarge0077h8xtly1fvjbfh6vm1j30r70eh3zjjpg getrandommenususernameuser java public void getrandommenusint count string username callback callback usernamegetrandommenususername bug ok username getmenusbymaterials shuffleok getmenusbyelements django name ok getrandommenususername ppt ai fragment
JavaScript,"Nutrition Label jQuery Plugin by Nutritionix
============================================

[![NPM](https://nodei.co/npm/nutrition-label-jquery-plugin.png)](https://www.npmjs.com/package/nutrition-label-jquery-plugin)

[Check out the Demo!](http://dev2.nutritionix.com/html/label-jquery-plugin/demo/demo.html)

Summary: Create a FDA-style nutrition label with any nutrition data source (even the [Nutritionix API](http://www.nutritionix.com/api)!)


Installation
------------

**getting the files from github and including the required files using cdn**
```sh
git clone git@github.com:nutritionix/nutrition-label.git
```

```html
<!-- include the needed font from google api -->
<link rel=""stylesheet"" type=""text/css"" href=""http://fonts.googleapis.com/css?family=Archivo+Black"" />
<!-- include the nutrition label plugin css file -->
<link rel=""stylesheet"" type=""text/css"" href=""/bower_components/nutrition-label-jquery-plugin/dist/css/nutritionLabel-min.css"">
<!-- include the jquery library from the google cdn -->
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js""></script>
<!-- include the nutrition label plugin js file -->
<script type=""text/javascript"" src=""/bower_components/nutrition-label-jquery-plugin/dist/js/nutritionLabel-min.js""></script>
```

***

**using bower**
```sh
bower install --save nutrition-label-jquery-plugin
```
***

**using npm**
```sh
npm install nutrition-label-jquery-plugin
```
***

```html
<!-- include the needed font from google api -->
<link rel=""stylesheet"" type=""text/css"" href=""http://fonts.googleapis.com/css?family=Archivo+Black"" />
<!-- include the nutrition label plugin css file -->
<link rel=""stylesheet"" type=""text/css"" href=""/bower_components/nutrition-label-jquery-plugin/dist/css/nutritionLabel-min.css"">
<!-- include the jquery library -->
<script type=""text/javascript"" src=""/bower_components/jquery/dist/jquery.min.js""></script>
<!-- include the nutrition label plugin js file -->
<script type=""text/javascript"" src=""/bower_components/nutrition-label-jquery-plugin/dist/js/nutritionLabel-min.js""></script>
```


Usage
-----

For some sample usage, you can check out the [demo page](http://dev2.nutritionix.com/html/label-jquery-plugin/demo/demo.html).","nutrition label jquery plugin by nutritionix


npmhttpsnodeiconpmnutritionlabeljquerypluginpnghttpswwwnpmjscompackagenutritionlabeljqueryplugin

check out the demohttpdev2nutritionixcomhtmllabeljqueryplugindemodemohtml

summary create a fdastyle nutrition label with any nutrition data source even the nutritionix apihttpwwwnutritionixcomapi


installation


getting the files from github and including the required files using cdn
sh
git clone gitgithubcomnutritionixnutritionlabelgit


html
 include the needed font from google api 
link relstylesheet typetextcss hrefhttpfontsgoogleapiscomcssfamilyarchivoblack 
 include the nutrition label plugin css file 
link relstylesheet typetextcss hrefbowercomponentsnutritionlabeljqueryplugindistcssnutritionlabelmincss
 include the jquery library from the google cdn 
script srchttpsajaxgoogleapiscomajaxlibsjquery180jqueryminjsscript
 include the nutrition label plugin js file 
script typetextjavascript srcbowercomponentsnutritionlabeljqueryplugindistjsnutritionlabelminjsscript




using bower
sh
bower install save nutritionlabeljqueryplugin



using npm
sh
npm install nutritionlabeljqueryplugin



html
 include the needed font from google api 
link relstylesheet typetextcss hrefhttpfontsgoogleapiscomcssfamilyarchivoblack 
 include the nutrition label plugin css file 
link relstylesheet typetextcss hrefbowercomponentsnutritionlabeljqueryplugindistcssnutritionlabelmincss
 include the jquery library 
script typetextjavascript srcbowercomponentsjquerydistjqueryminjsscript
 include the nutrition label plugin js file 
script typetextjavascript srcbowercomponentsnutritionlabeljqueryplugindistjsnutritionlabelminjsscript



usage


for some sample usage you can check out the demo pagehttpdev2nutritionixcomhtmllabeljqueryplugindemodemohtml",nutrit label jqueri plugin nutritionix npmhttpsnodeiconpmnutritionlabeljquerypluginpnghttpswwwnpmjscompackagenutritionlabeljqueryplugin check demohttpdev2nutritionixcomhtmllabeljqueryplugindemodemohtml summari creat fdastyl nutrit label ani nutrit data sourc even nutritionix apihttpwwwnutritionixcomapi instal get file github includ requir file use cdn sh git clone gitgithubcomnutritionixnutritionlabelgit html includ need font googl api link relstylesheet typetextcss hrefhttpfontsgoogleapiscomcssfamilyarchivoblack includ nutrit label plugin css file link relstylesheet typetextcss hrefbowercomponentsnutritionlabeljqueryplugindistcssnutritionlabelmincss includ jqueri librari googl cdn script srchttpsajaxgoogleapiscomajaxlibsjquery180jqueryminjsscript includ nutrit label plugin js file script typetextjavascript srcbowercomponentsnutritionlabeljqueryplugindistjsnutritionlabelminjsscript use bower sh bower instal save nutritionlabeljqueryplugin use npm sh npm instal nutritionlabeljqueryplugin html includ need font googl api link relstylesheet typetextcss hrefhttpfontsgoogleapiscomcssfamilyarchivoblack includ nutrit label plugin css file link relstylesheet typetextcss hrefbowercomponentsnutritionlabeljqueryplugindistcssnutritionlabelmincss includ jqueri librari script typetextjavascript srcbowercomponentsjquerydistjqueryminjsscript includ nutrit label plugin js file script typetextjavascript srcbowercomponentsnutritionlabeljqueryplugindistjsnutritionlabelminjsscript usag sampl usag check demo pagehttpdev2nutritionixcomhtmllabeljqueryplugindemodemohtml,nutrition label jquery plugin nutritionix npmhttpsnodeiconpmnutritionlabeljquerypluginpnghttpswwwnpmjscompackagenutritionlabeljqueryplugin check demohttpdev2nutritionixcomhtmllabeljqueryplugindemodemohtml summary create fdastyle nutrition label nutrition data source even nutritionix apihttpwwwnutritionixcomapi installation getting file github including required file using cdn sh git clone gitgithubcomnutritionixnutritionlabelgit html include needed font google api link relstylesheet typetextcss hrefhttpfontsgoogleapiscomcssfamilyarchivoblack include nutrition label plugin cs file link relstylesheet typetextcss hrefbowercomponentsnutritionlabeljqueryplugindistcssnutritionlabelmincss include jquery library google cdn script srchttpsajaxgoogleapiscomajaxlibsjquery180jqueryminjsscript include nutrition label plugin j file script typetextjavascript srcbowercomponentsnutritionlabeljqueryplugindistjsnutritionlabelminjsscript using bower sh bower install save nutritionlabeljqueryplugin using npm sh npm install nutritionlabeljqueryplugin html include needed font google api link relstylesheet typetextcss hrefhttpfontsgoogleapiscomcssfamilyarchivoblack include nutrition label plugin cs file link relstylesheet typetextcss hrefbowercomponentsnutritionlabeljqueryplugindistcssnutritionlabelmincss include jquery library script typetextjavascript srcbowercomponentsjquerydistjqueryminjsscript include nutrition label plugin j file script typetextjavascript srcbowercomponentsnutritionlabeljqueryplugindistjsnutritionlabelminjsscript usage sample usage check demo pagehttpdev2nutritionixcomhtmllabeljqueryplugindemodemohtml
Jupyter Notebook,"
# off-nutrition-table-extractor
This repository is the accumulation of all the work done during Google Summer of Code 2018.
- **Student**: Sagar Panchal
- **Github**: [sgrpanchal31](https://github.com/sgrpanchal31)
- **Organisation**: [Open Food Facts](https://world.openfoodfacts.org/)
- **Project**: [OCR on Nutritional Facts Table](https://summerofcode.withgoogle.com/projects/#6627107531128832)

## Technical Details
The pipeline is made up of three major parts namely table detection, text detection and OCR with post-processing.

### Table Detection
For detecting tables in an image, we are using the Single Shot Detector (SSD) object detection model. The model is trained on Tensorflow's Object Detection API. The provided Jupyter Notebook shows how we are using the pre-trained graph to detect tables in product images.
Before running the notebook, install the object detection model from the [Tensorflow's Github Repository](https://github.com/tensorflow/models).
![Table detection](/data/images/table_detection.jpeg)

### Text Detection and extraction
Text detection is done using the [text-detection-ctpn](https://github.com/eragonruan/text-detection-ctpn) which uses fast-rcnn to extract textual regions in the image. In future, we are planning to update it to a faster and more accurate text detection model.
![Text Detection](/data/images/text_detection.jpg)

### OCR and post-processing
For the text recognition, we are using Tesseract OCR. Every text box detected from the text detection step will be passed through the OCR and a raw string will be returned which is then passed throught many post processing steps that clean the string (through regular expressions) and rectify any spelling mistakes in the string (using the [symspell](https://github.com/wolfgarbe/SymSpell) spelling correction algorithm).

### Final Results
![Full pipeline detection](/data/images/final_result.jpg)
Output for the above image is given below:
```
Nutritional content = {
    'Dietary Fiber': (2.0, 'g'), 
    'Sugars': (9.0, 'g'),
    'Soluble Fiber': (1.0, 'g'), 
    'Monounsaturated Fat': (0.5, 'g'), 
    'Polyunsaturated Fat': (0.5, 'g'), 
    'Trans Fat': (0.0, 'g'), 
    'Other Carbohydrate': (11.0, 'g')
}
```

## Requirements
The code is compatible with Python 3.0+. If you find any other dependency required during the execution, do raise an issue and inform there. 
```
1. Tensorflow
2. OpenCV
3. Pillow
4. Numpy
5. Tesseract v4.0
6. Pytesseract
7. Django-2.0.5 (Only for API)
```

## How to test your image
- Download the frozen model for ctpn from [here](https://github.com/eragonruan/text-detection-ctpn/releases/download/untagged-48d74c6337a71b6b5f87/ctpn.pb).
- Save the model in `./nutrition_extractor/data` repository.
- Make a directory named `test_images` and put the images in that folder.
- run `python detection.py -i [IMAGE-PATH]` from inside nutrition_extractor folder.

## Planned functionality
- [x] Develop a table detection model to extract the region of interest (nutritional facts table) from images.
- [x] Crop the RoI from images and apply text detection pipeline to the region.
- [x] Pass every text blob through Tesseract OCR to extract the text.
- [x] Develop a post-processing method to clean the text and extract the nutritional label and its value form it.
- [ ] Create a spatial mapping algorithm to map the text blobs according to their location in the image. (Done but the accuracy is not upto the standards).

## Future Work
With GSoC 2018 being the kickstarter of this project, we are just getting started. There are a lot of things to do that we are going to do
* Improving the spatial mapping algorithm. 
* Training and using a faster and more accurate text detection model than the currently used fast-rcnn model.
* Creating a bigger nutritional table dataset and training that on a recent and bleeding edge object detection model to improve the accuracy.
* Developing a better image preprocessing algorithm to detect bold text.
* Implementing a method to unify the two models into one since the same calculations are being done twice in initial layers of the two models.
","offnutritiontableextractor
this repository is the accumulation of all the work done during google summer of code 2018
 student sagar panchal
 github sgrpanchal31httpsgithubcomsgrpanchal31
 organisation open food factshttpsworldopenfoodfactsorg
 project ocr on nutritional facts tablehttpssummerofcodewithgooglecomprojects6627107531128832

 technical details
the pipeline is made up of three major parts namely table detection text detection and ocr with postprocessing

 table detection
for detecting tables in an image we are using the single shot detector ssd object detection model the model is trained on tensorflow ' s object detection api the provided jupyter notebook shows how we are using the pretrained graph to detect tables in product images
before running the notebook install the object detection model from the tensorflow ' s github repositoryhttpsgithubcomtensorflowmodels
table detectiondataimagestabledetectionjpeg

 text detection and extraction
text detection is done using the textdetectionctpnhttpsgithubcomeragonruantextdetectionctpn which uses fastrcnn to extract textual regions in the image in future we are planning to update it to a faster and more accurate text detection model
text detectiondataimagestextdetectionjpg

 ocr and postprocessing
for the text recognition we are using tesseract ocr every text box detected from the text detection step will be passed through the ocr and a raw string will be returned which is then passed throught many post processing steps that clean the string through regular expressions and rectify any spelling mistakes in the string using the symspellhttpsgithubcomwolfgarbesymspell spelling correction algorithm

 final results
full pipeline detectiondataimagesfinalresultjpg
output for the above image is given below

nutritional content 
 ' dietary fiber ' 20 ' g ' 
 ' sugars ' 90 ' g ' 
 ' soluble fiber ' 10 ' g ' 
 ' monounsaturated fat ' 05 ' g ' 
 ' polyunsaturated fat ' 05 ' g ' 
 ' trans fat ' 00 ' g ' 
 ' other carbohydrate ' 110 ' g ' 



 requirements
the code is compatible with python 30 if you find any other dependency required during the execution do raise an issue and inform there 

1 tensorflow
2 opencv
3 pillow
4 numpy
5 tesseract v40
6 pytesseract
7 django205 only for api


 how to test your image
 download the frozen model for ctpn from herehttpsgithubcomeragonruantextdetectionctpnreleasesdownloaduntagged48d74c6337a71b6b5f87ctpnpb
 save the model in nutritionextractordata repository
 make a directory named testimages and put the images in that folder
 run python detectionpy i imagepath from inside nutritionextractor folder

 planned functionality
 x develop a table detection model to extract the region of interest nutritional facts table from images
 x crop the roi from images and apply text detection pipeline to the region
 x pass every text blob through tesseract ocr to extract the text
 x develop a postprocessing method to clean the text and extract the nutritional label and its value form it
 create a spatial mapping algorithm to map the text blobs according to their location in the image done but the accuracy is not upto the standards

 future work
with gsoc 2018 being the kickstarter of this project we are just getting started there are a lot of things to do that we are going to do
 improving the spatial mapping algorithm 
 training and using a faster and more accurate text detection model than the currently used fastrcnn model
 creating a bigger nutritional table dataset and training that on a recent and bleeding edge object detection model to improve the accuracy
 developing a better image preprocessing algorithm to detect bold text
 implementing a method to unify the two models into one since the same calculations are being done twice in initial layers of the two models",offnutritiontableextractor thi repositori accumul work done dure googl summer code 2018 student sagar panchal github sgrpanchal31httpsgithubcomsgrpanchal31 organis open food factshttpsworldopenfoodfactsorg project ocr nutrit fact tablehttpssummerofcodewithgooglecomprojects6627107531128832 technic detail pipelin made three major part name tabl detect text detect ocr postprocess tabl detect detect tabl imag use singl shot detector ssd object detect model model train tensorflow ' object detect api provid jupyt notebook show use pretrain graph detect tabl product imag befor run notebook instal object detect model tensorflow ' github repositoryhttpsgithubcomtensorflowmodel tabl detectiondataimagestabledetectionjpeg text detect extract text detect done use textdetectionctpnhttpsgithubcomeragonruantextdetectionctpn use fastrcnn extract textual region imag futur plan updat faster accur text detect model text detectiondataimagestextdetectionjpg ocr postprocess text recognit use tesseract ocr everi text box detect text detect step pass ocr raw string return pass throught mani post process step clean string regular express rectifi ani spell mistak string use symspellhttpsgithubcomwolfgarbesymspel spell correct algorithm final result full pipelin detectiondataimagesfinalresultjpg output abov imag given nutrit content ' dietari fiber ' 20 ' g ' ' sugar ' 90 ' g ' ' solubl fiber ' 10 ' g ' ' monounsatur fat ' 05 ' g ' ' polyunsatur fat ' 05 ' g ' ' tran fat ' 00 ' g ' ' carbohydr ' 110 ' g ' requir code compat python 30 find ani depend requir dure execut rais issu inform 1 tensorflow 2 opencv 3 pillow 4 numpi 5 tesseract v40 6 pytesseract 7 django205 onli api test imag download frozen model ctpn herehttpsgithubcomeragonruantextdetectionctpnreleasesdownloaduntagged48d74c6337a71b6b5f87ctpnpb save model nutritionextractordata repositori make directori name testimag put imag folder run python detectionpi imagepath insid nutritionextractor folder plan function x develop tabl detect model extract region interest nutrit fact tabl imag x crop roi imag appli text detect pipelin region x pass everi text blob tesseract ocr extract text x develop postprocess method clean text extract nutrit label valu form creat spatial map algorithm map text blob accord locat imag done accuraci upto standard futur work gsoc 2018 kickstart thi project get start lot thing go improv spatial map algorithm train use faster accur text detect model current use fastrcnn model creat bigger nutrit tabl dataset train recent bleed edg object detect model improv accuraci develop better imag preprocess algorithm detect bold text implement method unifi two model one sinc calcul done twice initi layer two model,offnutritiontableextractor repository accumulation work done google summer code 2018 student sagar panchal github sgrpanchal31httpsgithubcomsgrpanchal31 organisation open food factshttpsworldopenfoodfactsorg project ocr nutritional fact tablehttpssummerofcodewithgooglecomprojects6627107531128832 technical detail pipeline made three major part namely table detection text detection ocr postprocessing table detection detecting table image using single shot detector ssd object detection model model trained tensorflow ' object detection api provided jupyter notebook show using pretrained graph detect table product image running notebook install object detection model tensorflow ' github repositoryhttpsgithubcomtensorflowmodels table detectiondataimagestabledetectionjpeg text detection extraction text detection done using textdetectionctpnhttpsgithubcomeragonruantextdetectionctpn us fastrcnn extract textual region image future planning update faster accurate text detection model text detectiondataimagestextdetectionjpg ocr postprocessing text recognition using tesseract ocr every text box detected text detection step passed ocr raw string returned passed throught many post processing step clean string regular expression rectify spelling mistake string using symspellhttpsgithubcomwolfgarbesymspell spelling correction algorithm final result full pipeline detectiondataimagesfinalresultjpg output image given nutritional content ' dietary fiber ' 20 ' g ' ' sugar ' 90 ' g ' ' soluble fiber ' 10 ' g ' ' monounsaturated fat ' 05 ' g ' ' polyunsaturated fat ' 05 ' g ' ' trans fat ' 00 ' g ' ' carbohydrate ' 110 ' g ' requirement code compatible python 30 find dependency required execution raise issue inform 1 tensorflow 2 opencv 3 pillow 4 numpy 5 tesseract v40 6 pytesseract 7 django205 api test image download frozen model ctpn herehttpsgithubcomeragonruantextdetectionctpnreleasesdownloaduntagged48d74c6337a71b6b5f87ctpnpb save model nutritionextractordata repository make directory named testimages put image folder run python detectionpy imagepath inside nutritionextractor folder planned functionality x develop table detection model extract region interest nutritional fact table image x crop roi image apply text detection pipeline region x pas every text blob tesseract ocr extract text x develop postprocessing method clean text extract nutritional label value form create spatial mapping algorithm map text blob according location image done accuracy upto standard future work gsoc 2018 kickstarter project getting started lot thing going improving spatial mapping algorithm training using faster accurate text detection model currently used fastrcnn model creating bigger nutritional table dataset training recent bleeding edge object detection model improve accuracy developing better image preprocessing algorithm detect bold text implementing method unify two model one since calculation done twice initial layer two model
Python,"﻿# wger
<img src=""https://raw.githubusercontent.com/wger-project/wger/master/wger/core/static/images/logos/logo.png"" width=""100"" height=""100"" />

wger (ˈvɛɡɐ) Workout Manager is a free, open source web application that helps
you manage your personal workouts, weight and diet plans and can also be used
as a simple gym management utility. It offers a REST API as well, for easy
integration with other projects and tools.

For a live system, refer to the project's site: <https://wger.de/>

![Workout plan](https://raw.githubusercontent.com/wger-project/wger/master/wger/software/static/images/workout.png)


## Mobile app
[<img src=""https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png""
      alt=""Get it on Google Play""
      height=""80"">](https://play.google.com/store/apps/details?id=de.wger.flutter)
[<img src=""https://fdroid.gitlab.io/artwork/badge/get-it-on.png""
      alt=""Get it on F-Droid""
      height=""80"">](https://f-droid.org/packages/de.wger.flutter/)


## Installation

These are the basic steps to install and run the application locally on a Linux
system. There are more detailed instructions, other deployment options as well
as an administration guide available at <https://wger.readthedocs.io> or in the
[docs repo](https://github.com/wger-project/docs).

Please consult the commands' help for further information and available
parameters.


### Production

If you want to host your own instance, take a look at the provided docker
compose file. This config will persist your database and uploaded images:

<https://github.com/wger-project/docker>

### Demo

If you just want to try it out:

```shell script
    docker run -ti --name wger.demo --publish 8000:80 wger/demo
```

Then just open <http://localhost:8000> and log in as **admin**, password **adminadmin**

Please note that this image will overwrite your data when you pull a new version,
it is only intended as an easy to setup demo

### Development version

We provide a docker compose file that sets everything up for development and
persists the database on a volume. From the root folder just call

````shell script
docker-compose -f extras/docker/compose/docker-compose.yml up
````

Log in as: **admin**, password **adminadmin**

For more info, check the [README in wger/extras/docker/compose](
 ./extras/docker/compose/README.md
).

#### Local installation

If you prefer a local installation, consult the
[development documentation](https://wger.readthedocs.io/en/latest/development.html)


## Contact

Feel free to contact us if you found this useful or if there was something that
didn't behave as you expected. We can't fix what we don't know about, so please
report liberally. If you're not sure if something is a bug or not, feel free to
file a bug anyway.

* **discord:** <https://discord.gg/rPWFv6W>
* **issue tracker:** <https://github.com/wger-project/wger/issues>
* **twitter:** <https://twitter.com/wger_project>


## Sources

All the code and the content is available on github:

<https://github.com/wger-project/wger>


## Translation
Translate the app to your language on [Weblate](https://hosted.weblate.org/engage/wger/).

[![translation status](https://hosted.weblate.org/widgets/wger/-/web/multi-blue.svg)](https://hosted.weblate.org/engage/wger/)


## License

The application is licensed under the Affero GNU General Public License 3 or
later (AGPL 3+).

The initial exercise and ingredient data is licensed additionally under one of
the Creative Commons licenses, see the individual exercises for more details.

The documentation is released under a CC-BY-SA: either version 4 of the License,
or (at your option) any later version.

Some images were taken from Wikipedia, see the SOURCES file in their respective
folders for more details.
","wger
img srchttpsrawgithubusercontentcomwgerprojectwgermasterwgercorestaticimageslogoslogopng width100 height100 

wger v workout manager is a free open source web application that helps
you manage your personal workouts weight and diet plans and can also be used
as a simple gym management utility it offers a rest api as well for easy
integration with other projects and tools

for a live system refer to the project ' s site httpswgerde

workout planhttpsrawgithubusercontentcomwgerprojectwgermasterwgersoftwarestaticimagesworkoutpng


 mobile app
img srchttpsplaygooglecomintlenusbadgesimagesgenericenplaybadgepng
 altget it on google play
 height80httpsplaygooglecomstoreappsdetailsiddewgerflutter
img srchttpsfdroidgitlabioartworkbadgegetitonpng
 altget it on fdroid
 height80httpsfdroidorgpackagesdewgerflutter


 installation

these are the basic steps to install and run the application locally on a linux
system there are more detailed instructions other deployment options as well
as an administration guide available at httpswgerreadthedocsio or in the
docs repohttpsgithubcomwgerprojectdocs

please consult the commands ' help for further information and available
parameters


 production

if you want to host your own instance take a look at the provided docker
compose file this config will persist your database and uploaded images

httpsgithubcomwgerprojectdocker

 demo

if you just want to try it out

shell script
 docker run ti name wgerdemo publish 800080 wgerdemo


then just open httplocalhost8000 and log in as admin password adminadmin

please note that this image will overwrite your data when you pull a new version
it is only intended as an easy to setup demo

 development version

we provide a docker compose file that sets everything up for development and
persists the database on a volume from the root folder just call

shell script
dockercompose f extrasdockercomposedockercomposeyml up


log in as admin password adminadmin

for more info check the readme in wgerextrasdockercompose
 extrasdockercomposereadmemd


 local installation

if you prefer a local installation consult the
development documentationhttpswgerreadthedocsioenlatestdevelopmenthtml


 contact

feel free to contact us if you found this useful or if there was something that
didn ' t behave as you expected we can ' t fix what we don ' t know about so please
report liberally if you ' re not sure if something is a bug or not feel free to
file a bug anyway

 discord httpsdiscordggrpwfv6w
 issue tracker httpsgithubcomwgerprojectwgerissues
 twitter httpstwittercomwgerproject


 sources

all the code and the content is available on github

httpsgithubcomwgerprojectwger


 translation
translate the app to your language on weblatehttpshostedweblateorgengagewger

translation statushttpshostedweblateorgwidgetswgerwebmultibluesvghttpshostedweblateorgengagewger


 license

the application is licensed under the affero gnu general public license 3 or
later agpl 3

the initial exercise and ingredient data is licensed additionally under one of
the creative commons licenses see the individual exercises for more details

the documentation is released under a ccbysa either version 4 of the license
or at your option any later version

some images were taken from wikipedia see the sources file in their respective
folders for more details",wger img srchttpsrawgithubusercontentcomwgerprojectwgermasterwgercorestaticimageslogoslogopng width100 height100 wger v workout manag free open sourc web applic help manag person workout weight diet plan also use simpl gym manag util offer rest api well easi integr project tool live system refer project ' site httpswgerd workout planhttpsrawgithubusercontentcomwgerprojectwgermasterwgersoftwarestaticimagesworkoutpng mobil app img srchttpsplaygooglecomintlenusbadgesimagesgenericenplaybadgepng altget googl play height80httpsplaygooglecomstoreappsdetailsiddewgerflutt img srchttpsfdroidgitlabioartworkbadgegetitonpng altget fdroid height80httpsfdroidorgpackagesdewgerflutt instal basic step instal run applic local linux system detail instruct deploy option well administr guid avail httpswgerreadthedocsio doc repohttpsgithubcomwgerprojectdoc pleas consult command ' help inform avail paramet product want host instanc take look provid docker compos file thi config persist databas upload imag httpsgithubcomwgerprojectdock demo want tri shell script docker run ti name wgerdemo publish 800080 wgerdemo open httplocalhost8000 log admin password adminadmin pleas note thi imag overwrit data pull new version onli intend easi setup demo develop version provid docker compos file set everyth develop persist databas volum root folder call shell script dockercompos f extrasdockercomposedockercomposeyml log admin password adminadmin info check readm wgerextrasdockercompos extrasdockercomposereadmemd local instal prefer local instal consult develop documentationhttpswgerreadthedocsioenlatestdevelopmenthtml contact feel free contact us found thi use wa someth ' behav expect ' fix ' know pleas report liber ' sure someth bug feel free file bug anyway discord httpsdiscordggrpwfv6w issu tracker httpsgithubcomwgerprojectwgerissu twitter httpstwittercomwgerproject sourc code content avail github httpsgithubcomwgerprojectwg translat translat app languag weblatehttpshostedweblateorgengagewg translat statushttpshostedweblateorgwidgetswgerwebmultibluesvghttpshostedweblateorgengagewg licens applic licens affero gnu gener public licens 3 later agpl 3 initi exercis ingredi data licens addit one creativ common licens see individu exercis detail document releas ccbysa either version 4 licens option ani later version imag taken wikipedia see sourc file respect folder detail,wger img srchttpsrawgithubusercontentcomwgerprojectwgermasterwgercorestaticimageslogoslogopng width100 height100 wger v workout manager free open source web application help manage personal workout weight diet plan also used simple gym management utility offer rest api well easy integration project tool live system refer project ' site httpswgerde workout planhttpsrawgithubusercontentcomwgerprojectwgermasterwgersoftwarestaticimagesworkoutpng mobile app img srchttpsplaygooglecomintlenusbadgesimagesgenericenplaybadgepng altget google play height80httpsplaygooglecomstoreappsdetailsiddewgerflutter img srchttpsfdroidgitlabioartworkbadgegetitonpng altget fdroid height80httpsfdroidorgpackagesdewgerflutter installation basic step install run application locally linux system detailed instruction deployment option well administration guide available httpswgerreadthedocsio doc repohttpsgithubcomwgerprojectdocs please consult command ' help information available parameter production want host instance take look provided docker compose file config persist database uploaded image httpsgithubcomwgerprojectdocker demo want try shell script docker run ti name wgerdemo publish 800080 wgerdemo open httplocalhost8000 log admin password adminadmin please note image overwrite data pull new version intended easy setup demo development version provide docker compose file set everything development persists database volume root folder call shell script dockercompose f extrasdockercomposedockercomposeyml log admin password adminadmin info check readme wgerextrasdockercompose extrasdockercomposereadmemd local installation prefer local installation consult development documentationhttpswgerreadthedocsioenlatestdevelopmenthtml contact feel free contact u found useful wa something ' behave expected ' fix ' know please report liberally ' sure something bug feel free file bug anyway discord httpsdiscordggrpwfv6w issue tracker httpsgithubcomwgerprojectwgerissues twitter httpstwittercomwgerproject source code content available github httpsgithubcomwgerprojectwger translation translate app language weblatehttpshostedweblateorgengagewger translation statushttpshostedweblateorgwidgetswgerwebmultibluesvghttpshostedweblateorgengagewger license application licensed affero gnu general public license 3 later agpl 3 initial exercise ingredient data licensed additionally one creative common license see individual exercise detail documentation released ccbysa either version 4 license option later version image taken wikipedia see source file respective folder detail
JavaScript,"nutrition
=========

Easy vegan nutrition system with meal templates and shopping list generation
","nutrition


easy vegan nutrition system with meal templates and shopping list generation",nutrit easi vegan nutrit system meal templat shop list gener,nutrition easy vegan nutrition system meal template shopping list generation
JavaScript,"# My-Nutrition
[![Build Status](https://travis-ci.org/djhi/my-nutrition.svg?branch=master)](https://travis-ci.org/djhi/my-nutrition)

A Meteor application using Webpack, React and Redux for nutritionists who coach people and people wanting to keep track of their nutrition.

![Nutritional Planning](https://sc-cdn.scaleengine.net/i/4699b5eefe616db4ceca84b4e3d33c49.png)

You can see the roadmap [here](./ROADMAP.md).

## Installation

Ensure you installed Meteor by following the [instructions](https://www.meteor.com/install), then run:
```
make install
```

This will copy the settings dist files in `/settings` with default values.

## Development

To start Webpack and Meteor, run:
```
make run-dev
```

The application will be available on `http://localhost:3000`.

Just wait for the message in the console indicating Meteor is running the app at the specified address.
Be aware that it can take some time on the first run as Meteor will install all needed packages.

## Debug

To debug server side code, make sure you installed `node-inspector` and run:
```
make run-debug
```

## Mongo

To access the mongo console, run:
```
make mongo
```

## Meteor commands

Execute any meteor command by running `met [COMMAND]`. For example:
```
met add react
```

## Deployment

Deployment is handled by [MUP](https://github.com/arunoda/meteor-up).

Configure MUP for your environments in `./settings/staging/mup.json` and `./settings/production/mup.json`.

Deploy with either `make deploy-staging` or `make deploy-prod`.

## License

**my-nutrition** is licensed under the MIT Licence, courtesy of @marmelab.
","mynutrition
build statushttpstravisciorgdjhimynutritionsvgbranchmasterhttpstravisciorgdjhimynutrition

a meteor application using webpack react and redux for nutritionists who coach people and people wanting to keep track of their nutrition

nutritional planninghttpssccdnscaleengineneti4699b5eefe616db4ceca84b4e3d33c49png

you can see the roadmap hereroadmapmd

 installation

ensure you installed meteor by following the instructionshttpswwwmeteorcominstall then run

make install


this will copy the settings dist files in settings with default values

 development

to start webpack and meteor run

make rundev


the application will be available on httplocalhost3000

just wait for the message in the console indicating meteor is running the app at the specified address
be aware that it can take some time on the first run as meteor will install all needed packages

 debug

to debug server side code make sure you installed nodeinspector and run

make rundebug


 mongo

to access the mongo console run

make mongo


 meteor commands

execute any meteor command by running met command for example

met add react


 deployment

deployment is handled by muphttpsgithubcomarunodameteorup

configure mup for your environments in settingsstagingmupjson and settingsproductionmupjson

deploy with either make deploystaging or make deployprod

 license

mynutrition is licensed under the mit licence courtesy of marmelab",mynutrit build statushttpstravisciorgdjhimynutritionsvgbranchmasterhttpstravisciorgdjhimynutrit meteor applic use webpack react redux nutritionist coach peopl peopl want keep track nutrit nutrit planninghttpssccdnscaleengineneti4699b5eefe616db4ceca84b4e3d33c49png see roadmap hereroadmapmd instal ensur instal meteor follow instructionshttpswwwmeteorcominstal run make instal thi copi set dist file set default valu develop start webpack meteor run make rundev applic avail httplocalhost3000 wait messag consol indic meteor run app specifi address awar take time first run meteor instal need packag debug debug server side code make sure instal nodeinspector run make rundebug mongo access mongo consol run make mongo meteor command execut ani meteor command run met command exampl met add react deploy deploy handl muphttpsgithubcomarunodameteorup configur mup environ settingsstagingmupjson settingsproductionmupjson deploy either make deploystag make deployprod licens mynutrit licens mit licenc courtesi marmelab,mynutrition build statushttpstravisciorgdjhimynutritionsvgbranchmasterhttpstravisciorgdjhimynutrition meteor application using webpack react redux nutritionist coach people people wanting keep track nutrition nutritional planninghttpssccdnscaleengineneti4699b5eefe616db4ceca84b4e3d33c49png see roadmap hereroadmapmd installation ensure installed meteor following instructionshttpswwwmeteorcominstall run make install copy setting dist file setting default value development start webpack meteor run make rundev application available httplocalhost3000 wait message console indicating meteor running app specified address aware take time first run meteor install needed package debug debug server side code make sure installed nodeinspector run make rundebug mongo access mongo console run make mongo meteor command execute meteor command running met command example met add react deployment deployment handled muphttpsgithubcomarunodameteorup configure mup environment settingsstagingmupjson settingsproductionmupjson deploy either make deploystaging make deployprod license mynutrition licensed mit licence courtesy marmelab
HTML,"# A11Y Nutrition Cards

A11Y Nutrition Cards is an attempt to digest and simplify the accessibility expectations when it comes to component authoring. Based on the <a href=""https://w3c.github.io/aria-practices/"">WAI ARIA Authoring Practices Guide</a>.

## Roadmap

- [ ] Add more components
- [ ] Simplify language
- [ ] Add framework-less CodePen demos for each component
- [ ] Use `<details>` to hide/disclose optional or advanced techniques.
 
## Contributing

Thank you very much for your interest in this project. While I won't be prompt, there's like a 90% chance I'd merge anything you commit.

## Building Locally

The site is built with [Jekyll](https://jekyllrb.com/) (you'll need Ruby to run Jekyll) and deployed via Github Pages. Not sure if it's the best path but leveraging Jekyll's Collections feature to organize components. If you'd like to help contribute locally...

```
git clone git@github.com:davatron5000/a11y-nutrition-cards.git
gem install jekyll
jekyll serve --livereload
```

To add a new component, create a new file in the `_components/` folder.
","a11y nutrition cards

a11y nutrition cards is an attempt to digest and simplify the accessibility expectations when it comes to component authoring based on the a hrefhttpsw3cgithubioariapracticeswai aria authoring practices guidea

 roadmap

 add more components
 simplify language
 add frameworkless codepen demos for each component
 use details to hidedisclose optional or advanced techniques
 
 contributing

thank you very much for your interest in this project while i won ' t be prompt there ' s like a 90 chance i ' d merge anything you commit

 building locally

the site is built with jekyllhttpsjekyllrbcom you ' ll need ruby to run jekyll and deployed via github pages not sure if it ' s the best path but leveraging jekyll ' s collections feature to organize components if you ' d like to help contribute locally


git clone gitgithubcomdavatron5000a11ynutritioncardsgit
gem install jekyll
jekyll serve livereload


to add a new component create a new file in the components folder",a11i nutrit card a11i nutrit card attempt digest simplifi access expect come compon author base hrefhttpsw3cgithubioariapracticeswai aria author practic guidea roadmap add compon simplifi languag add frameworkless codepen demo compon use detail hidedisclos option advanc techniqu contribut thank veri much interest thi project ' prompt ' like 90 chanc ' merg anyth commit build local site built jekyllhttpsjekyllrbcom ' need rubi run jekyl deploy via github page sure ' best path leverag jekyl ' collect featur organ compon ' like help contribut local git clone gitgithubcomdavatron5000a11ynutritioncardsgit gem instal jekyl jekyl serv livereload add new compon creat new file compon folder,a11y nutrition card a11y nutrition card attempt digest simplify accessibility expectation come component authoring based hrefhttpsw3cgithubioariapracticeswai aria authoring practice guidea roadmap add component simplify language add frameworkless codepen demo component use detail hidedisclose optional advanced technique contributing thank much interest project ' prompt ' like 90 chance ' merge anything commit building locally site built jekyllhttpsjekyllrbcom ' need ruby run jekyll deployed via github page sure ' best path leveraging jekyll ' collection feature organize component ' like help contribute locally git clone gitgithubcomdavatron5000a11ynutritioncardsgit gem install jekyll jekyll serve livereload add new component create new file component folder
Ruby,"## active_nutrition

ActiveNutrition is an ActiveRecord-backed collection of models for storing and retrieving nutritional information from the USDA's Nutrient Database.

## Installation

`gem install active_nutrition`

## Usage

ActiveNutrition is meant to be used within a Rails application, but it should work within any Ruby project that uses ActiveRecord 3.0 or greater.

```ruby
require 'active_nutrition'
```

In a (possibly Rails) gemfile:

```ruby
gem 'active_nutrition', '~> 0.5.0'
```

### Getting the Data

ActiveNutrition has the ability to fetch the current Nutrient Database files from the USDA's website and load them into your ActiveRecord-supported database.  As long as you've established a connection via ActiveRecord, you should be able to import the nutrient data.

With Rails:

```bundle exec rake active_nutrition:migrate active_nutrition:rebuild```

Without Rails:

```ruby
require 'active_nutrition'

ActiveNutrition.migrate
ActiveNutrition.rebuild
```

_Note_: The full data import could take anywhere from 30 minutes to a few hours depending on how powerful your computer is.
_Note_: You can use `an` instead of `active_nutrition` for all rake tasks, eg. `rake an:rebuild`.

### Searching

ActiveNutrition provides a simple `#search` method that executes a SQL `LIKE` statement and returns an array of `Food` objects:

```ruby
ActiveNutrition.search(""olive oil"")
```

### Food Objects

Each `Food` object offers these methods

1.  `#nutrition_facts`: Returns an array of `NutritionFact` objects for each kind of nutrient associated with this food.  Examples include the amount of protein, fat, and sodium.  Each `NutritionFact` object knows its unit (eg. miligrams, grams, etc) and amount per 1 gram of the food.
2.  `#weights`: Returns an array of common unit weights for this food (eg. cups, tablespoons, etc) and their gram equivalents.
3.  `#food_group`: Returns an object that specifies the name and code of the food's food group (eg. Breads, Vegetables, etc).

### NutritionFact Objects

Each `NutritionFact` object has these important methods:

1.  `#value`: How much of this nutrient is present in 1 gram of the food.
2.  `#units`: The unit associated with `#value`.
3.  `#description`: A textual description of the nutrient.

```ruby
ActiveNutrition.search(""olive oil"").first.nutrition_facts
```

Calling `#nutrition_facts` on a `Food` object actually returns an instance of `NutritionFacts`, which provides a handy `#to_hash` convenience method to hash nutrient amounts by description:

```ruby
# { ""Protein"" => 0.0, ""Total lipid (fat)"" => 100.0, ... }
ActiveNutrition.search(""olive oil"").first.nutrition_facts.to_hash
```

The `#to_hash` method is capable of hashing nutrient amounts by any method supported by `NutritionFact` via the `:by` option:

```ruby
# { 203 => 0.0, 204 => 100.0, 205 => 0.0, 207 => 0.0, ... }
ActiveNutrition.search(""olive oil"").first.nutrition_facts.to_hash(:by => :nutrition_number)
```

### Weight Objects

Each `Weight` object offers these methods:

1.  `#amount`: The amount associated with `#measurement`, eg. 1, 0.5, etc.
2.  `#measurement`: The unit associated with `#amount`, eg. cup, tablespoon, gallon, dash, etc.
3.  `#grams`: Mass in grams.

Calling `#weights` on a `Food` object actually returns an instance of `Weights`, which provides a handy `#to_hash` convenience method to hash weights (grams) by measurement:

```ruby
# { ""tablespoon"" => 13.5, ""cup"" => 216.0, ""tsp"" => 4.5 }
ActiveNutrition.search(""olive oil"").first.weights.to_hash
```

## Requirements

No external requirements.

## Running Tests

No test suite exists for this gem yet - coming soon!


## Authors

Cameron C. Dutro: http://github.com/camertron

## Links
USDA Nutrition Database: [http://www.ars.usda.gov/Services/docs.htm?docid=8964](http://www.ars.usda.gov/Services/docs.htm?docid=8964)

## License

Licensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0

## Future Plans

* Ability to update your local database with `rake active_nutrition:update`.
* Test suite.","activenutrition

activenutrition is an activerecordbacked collection of models for storing and retrieving nutritional information from the usda ' s nutrient database

 installation

gem install activenutrition

 usage

activenutrition is meant to be used within a rails application but it should work within any ruby project that uses activerecord 30 or greater

ruby
require ' activenutrition ' 


in a possibly rails gemfile

ruby
gem ' activenutrition ' ' 050 ' 


 getting the data

activenutrition has the ability to fetch the current nutrient database files from the usda ' s website and load them into your activerecordsupported database as long as you ' ve established a connection via activerecord you should be able to import the nutrient data

with rails

bundle exec rake activenutritionmigrate activenutritionrebuild

without rails

ruby
require ' activenutrition ' 

activenutritionmigrate
activenutritionrebuild


note the full data import could take anywhere from 30 minutes to a few hours depending on how powerful your computer is
note you can use an instead of activenutrition for all rake tasks eg rake anrebuild

 searching

activenutrition provides a simple search method that executes a sql like statement and returns an array of food objects

ruby
activenutritionsearcholive oil


 food objects

each food object offers these methods

1 nutritionfacts returns an array of nutritionfact objects for each kind of nutrient associated with this food examples include the amount of protein fat and sodium each nutritionfact object knows its unit eg miligrams grams etc and amount per 1 gram of the food
2 weights returns an array of common unit weights for this food eg cups tablespoons etc and their gram equivalents
3 foodgroup returns an object that specifies the name and code of the food ' s food group eg breads vegetables etc

 nutritionfact objects

each nutritionfact object has these important methods

1 value how much of this nutrient is present in 1 gram of the food
2 units the unit associated with value
3 description a textual description of the nutrient

ruby
activenutritionsearcholive oilfirstnutritionfacts


calling nutritionfacts on a food object actually returns an instance of nutritionfacts which provides a handy tohash convenience method to hash nutrient amounts by description

ruby
 protein 00 total lipid fat 1000 
activenutritionsearcholive oilfirstnutritionfactstohash


the tohash method is capable of hashing nutrient amounts by any method supported by nutritionfact via the by option

ruby
 203 00 204 1000 205 00 207 00 
activenutritionsearcholive oilfirstnutritionfactstohashby nutritionnumber


 weight objects

each weight object offers these methods

1 amount the amount associated with measurement eg 1 05 etc
2 measurement the unit associated with amount eg cup tablespoon gallon dash etc
3 grams mass in grams

calling weights on a food object actually returns an instance of weights which provides a handy tohash convenience method to hash weights grams by measurement

ruby
 tablespoon 135 cup 2160 tsp 45 
activenutritionsearcholive oilfirstweightstohash


 requirements

no external requirements

 running tests

no test suite exists for this gem yet coming soon


 authors

cameron c dutro httpgithubcomcamertron

 links
usda nutrition database httpwwwarsusdagovservicesdocshtmdocid8964httpwwwarsusdagovservicesdocshtmdocid8964

 license

licensed under the apache license version 20 httpwwwapacheorglicenseslicense20

 future plans

 ability to update your local database with rake activenutritionupdate
 test suite",activenutrit activenutrit activerecordback collect model store retriev nutrit inform usda ' nutrient databas instal gem instal activenutrit usag activenutrit meant use within rail applic work within ani rubi project use activerecord 30 greater rubi requir ' activenutrit ' possibl rail gemfil rubi gem ' activenutrit ' ' 050 ' get data activenutrit ha abil fetch current nutrient databas file usda ' websit load activerecordsupport databas long ' establish connect via activerecord abl import nutrient data rail bundl exec rake activenutritionmigr activenutritionrebuild without rail rubi requir ' activenutrit ' activenutritionmigr activenutritionrebuild note full data import could take anywher 30 minut hour depend power comput note use instead activenutrit rake task eg rake anrebuild search activenutrit provid simpl search method execut sql like statement return array food object rubi activenutritionsearchol oil food object food object offer method 1 nutritionfact return array nutritionfact object kind nutrient associ thi food exampl includ amount protein fat sodium nutritionfact object know unit eg miligram gram etc amount per 1 gram food 2 weight return array common unit weight thi food eg cup tablespoon etc gram equival 3 foodgroup return object specifi name code food ' food group eg bread veget etc nutritionfact object nutritionfact object ha import method 1 valu much thi nutrient present 1 gram food 2 unit unit associ valu 3 descript textual descript nutrient rubi activenutritionsearchol oilfirstnutritionfact call nutritionfact food object actual return instanc nutritionfact provid handi tohash conveni method hash nutrient amount descript rubi protein 00 total lipid fat 1000 activenutritionsearchol oilfirstnutritionfactstohash tohash method capabl hash nutrient amount ani method support nutritionfact via option rubi 203 00 204 1000 205 00 207 00 activenutritionsearchol oilfirstnutritionfactstohashbi nutritionnumb weight object weight object offer method 1 amount amount associ measur eg 1 05 etc 2 measur unit associ amount eg cup tablespoon gallon dash etc 3 gram mass gram call weight food object actual return instanc weight provid handi tohash conveni method hash weight gram measur rubi tablespoon 135 cup 2160 tsp 45 activenutritionsearchol oilfirstweightstohash requir extern requir run test test suit exist thi gem yet come soon author cameron c dutro httpgithubcomcamertron link usda nutrit databas httpwwwarsusdagovservicesdocshtmdocid8964httpwwwarsusdagovservicesdocshtmdocid8964 licens licens apach licens version 20 httpwwwapacheorglicenseslicense20 futur plan abil updat local databas rake activenutritionupd test suit,activenutrition activenutrition activerecordbacked collection model storing retrieving nutritional information usda ' nutrient database installation gem install activenutrition usage activenutrition meant used within rail application work within ruby project us activerecord 30 greater ruby require ' activenutrition ' possibly rail gemfile ruby gem ' activenutrition ' ' 050 ' getting data activenutrition ha ability fetch current nutrient database file usda ' website load activerecordsupported database long ' established connection via activerecord able import nutrient data rail bundle exec rake activenutritionmigrate activenutritionrebuild without rail ruby require ' activenutrition ' activenutritionmigrate activenutritionrebuild note full data import could take anywhere 30 minute hour depending powerful computer note use instead activenutrition rake task eg rake anrebuild searching activenutrition provides simple search method executes sql like statement return array food object ruby activenutritionsearcholive oil food object food object offer method 1 nutritionfacts return array nutritionfact object kind nutrient associated food example include amount protein fat sodium nutritionfact object know unit eg miligrams gram etc amount per 1 gram food 2 weight return array common unit weight food eg cup tablespoon etc gram equivalent 3 foodgroup return object specifies name code food ' food group eg bread vegetable etc nutritionfact object nutritionfact object ha important method 1 value much nutrient present 1 gram food 2 unit unit associated value 3 description textual description nutrient ruby activenutritionsearcholive oilfirstnutritionfacts calling nutritionfacts food object actually return instance nutritionfacts provides handy tohash convenience method hash nutrient amount description ruby protein 00 total lipid fat 1000 activenutritionsearcholive oilfirstnutritionfactstohash tohash method capable hashing nutrient amount method supported nutritionfact via option ruby 203 00 204 1000 205 00 207 00 activenutritionsearcholive oilfirstnutritionfactstohashby nutritionnumber weight object weight object offer method 1 amount amount associated measurement eg 1 05 etc 2 measurement unit associated amount eg cup tablespoon gallon dash etc 3 gram mass gram calling weight food object actually return instance weight provides handy tohash convenience method hash weight gram measurement ruby tablespoon 135 cup 2160 tsp 45 activenutritionsearcholive oilfirstweightstohash requirement external requirement running test test suite exists gem yet coming soon author cameron c dutro httpgithubcomcamertron link usda nutrition database httpwwwarsusdagovservicesdocshtmdocid8964httpwwwarsusdagovservicesdocshtmdocid8964 license licensed apache license version 20 httpwwwapacheorglicenseslicense20 future plan ability update local database rake activenutritionupdate test suite
Swift,"# NutritionCal

Nutrition Diary is a food and nutrition app that helps you eat right and make healthier food decisions, get nutrition info for foods and drinks, keep track of what you eat, and sync your eaten foods with Apple's Health App.

![Alt text](https://github.com/omaralbeik/NutritionCal/blob/master/screenShots/readme_header.jpg ""Nutrition Cal"")

How to Use:

Nutrition Cal Has 3 main tabs

a. Foods Tab: 
	-Here You can search for foods and add them to favorites
	
	-To search for foods tap + Button in the top right corner
	
	-You can eat food simply by swiping to the left on a food and taping the fork icon, or you can tap on a food to check the nutrition info and them make a decision.
	
	-inside an item page you see a chart with the main nutritions for a food (calcium, carbohydrate, cholesterol, energy, fat, protein,  sugar, vitamin C), or tap on Show All Nutrients button to see all nutrients, once done, tap on Eat it! button to eat the food, or back to go and continue your search.
	
	-You can save foods in favorites, by swiping to the left, and tap the download button, saving an item will fetch all nutritions for offline and fast use.


b. History Tab:

	-Here you see a calendar view to check for foods eaten at a specific day,
	
	-Swipe to delete an item (note that this will not delete the info from Health App)


c. Settings Tab:
	
	-Here you can choose to sync eaten foods with Health App, or keep history for foods in Nutrition Cal, reply tutorial, and more.


Nutrition Cal is an App made for all sizes iPhone with autolayout, built using Swift 2.0 and XCode 7.
Nutrition Cal requires iOS 8.0 or later..
To run the app, Simply download it, unzip the file run from Nutrition Cal.xcworkspace, not Nutrition Cal.xcodeproj


![Alt text](https://github.com/omaralbeik/NutritionCal/blob/master/screenShots/tutorial.gif ""Tutorial"")

All items nutritions info is from: National Agricultural Library, Agricultural Research Service, U.S. Department of Agriculture
http://www.nal.usda.gov/

Icons and graphics made by Freepik
www.flaticon.com


Special thanks to:
Wenchao Ding (FSCalendar)
https://github.com/WenchaoIOS/FSCalendar

takuya ichise (MaterialDesignColor)
https://github.com/tichise/MaterialDesignColor

Nguyen Vinh (NVActivityIndicatorView)
https://github.com/ninjaprox/NVActivityIndicatorView

Ben Guild (BGTableViewRowActionWithImage)
https://github.com/benguild/BGTableViewRowActionWithImage

Kevin (PNChart)
https://github.com/kevinzhow/PNChart
","nutritioncal

nutrition diary is a food and nutrition app that helps you eat right and make healthier food decisions get nutrition info for foods and drinks keep track of what you eat and sync your eaten foods with apple ' s health app

alt texthttpsgithubcomomaralbeiknutritioncalblobmasterscreenshotsreadmeheaderjpg nutrition cal

how to use

nutrition cal has 3 main tabs

a foods tab 
 &#9; here you can search for foods and add them to favorites
 &#9; 
 &#9; to search for foods tap button in the top right corner
 &#9; 
 &#9; you can eat food simply by swiping to the left on a food and taping the fork icon or you can tap on a food to check the nutrition info and them make a decision
 &#9; 
 &#9; inside an item page you see a chart with the main nutritions for a food calcium carbohydrate cholesterol energy fat protein sugar vitamin c or tap on show all nutrients button to see all nutrients once done tap on eat it button to eat the food or back to go and continue your search
 &#9; 
 &#9; you can save foods in favorites by swiping to the left and tap the download button saving an item will fetch all nutritions for offline and fast use


b history tab

 &#9; here you see a calendar view to check for foods eaten at a specific day
 &#9; 
 &#9; swipe to delete an item note that this will not delete the info from health app


c settings tab
 &#9; 
 &#9; here you can choose to sync eaten foods with health app or keep history for foods in nutrition cal reply tutorial and more


nutrition cal is an app made for all sizes iphone with autolayout built using swift 20 and xcode 7
nutrition cal requires ios 80 or later
to run the app simply download it unzip the file run from nutrition calxcworkspace not nutrition calxcodeproj


alt texthttpsgithubcomomaralbeiknutritioncalblobmasterscreenshotstutorialgif tutorial

all items nutritions info is from national agricultural library agricultural research service us department of agriculture
httpwwwnalusdagov

icons and graphics made by freepik
wwwflaticoncom


special thanks to
wenchao ding fscalendar
httpsgithubcomwenchaoiosfscalendar

takuya ichise materialdesigncolor
httpsgithubcomtichisematerialdesigncolor

nguyen vinh nvactivityindicatorview
httpsgithubcomninjaproxnvactivityindicatorview

ben guild bgtableviewrowactionwithimage
httpsgithubcombenguildbgtableviewrowactionwithimage

kevin pnchart
httpsgithubcomkevinzhowpnchart",nutritionc nutrit diari food nutrit app help eat right make healthier food decis get nutrit info food drink keep track eat sync eaten food appl ' health app alt texthttpsgithubcomomaralbeiknutritioncalblobmasterscreenshotsreadmeheaderjpg nutrit cal use nutrit cal ha 3 main tab food tab &#9; search food add favorit &#9; &#9; search food tap button top right corner &#9; &#9; eat food simpli swipe left food tape fork icon tap food check nutrit info make decis &#9; &#9; insid item page see chart main nutrit food calcium carbohydr cholesterol energi fat protein sugar vitamin c tap show nutrient button see nutrient onc done tap eat button eat food back go continu search &#9; &#9; save food favorit swipe left tap download button save item fetch nutrit offlin fast use b histori tab &#9; see calendar view check food eaten specif day &#9; &#9; swipe delet item note thi delet info health app c set tab &#9; &#9; choos sync eaten food health app keep histori food nutrit cal repli tutori nutrit cal app made size iphon autolayout built use swift 20 xcode 7 nutrit cal requir io 80 later run app simpli download unzip file run nutrit calxcworkspac nutrit calxcodeproj alt texthttpsgithubcomomaralbeiknutritioncalblobmasterscreenshotstutorialgif tutori item nutrit info nation agricultur librari agricultur research servic us depart agricultur httpwwwnalusdagov icon graphic made freepik wwwflaticoncom special thank wenchao ding fscalendar httpsgithubcomwenchaoiosfscalendar takuya ichis materialdesigncolor httpsgithubcomtichisematerialdesigncolor nguyen vinh nvactivityindicatorview httpsgithubcomninjaproxnvactivityindicatorview ben guild bgtableviewrowactionwithimag httpsgithubcombenguildbgtableviewrowactionwithimag kevin pnchart httpsgithubcomkevinzhowpnchart,nutritioncal nutrition diary food nutrition app help eat right make healthier food decision get nutrition info food drink keep track eat sync eaten food apple ' health app alt texthttpsgithubcomomaralbeiknutritioncalblobmasterscreenshotsreadmeheaderjpg nutrition cal use nutrition cal ha 3 main tab food tab &#9; search food add favorite &#9; &#9; search food tap button top right corner &#9; &#9; eat food simply swiping left food taping fork icon tap food check nutrition info make decision &#9; &#9; inside item page see chart main nutrition food calcium carbohydrate cholesterol energy fat protein sugar vitamin c tap show nutrient button see nutrient done tap eat button eat food back go continue search &#9; &#9; save food favorite swiping left tap download button saving item fetch nutrition offline fast use b history tab &#9; see calendar view check food eaten specific day &#9; &#9; swipe delete item note delete info health app c setting tab &#9; &#9; choose sync eaten food health app keep history food nutrition cal reply tutorial nutrition cal app made size iphone autolayout built using swift 20 xcode 7 nutrition cal requires io 80 later run app simply download unzip file run nutrition calxcworkspace nutrition calxcodeproj alt texthttpsgithubcomomaralbeiknutritioncalblobmasterscreenshotstutorialgif tutorial item nutrition info national agricultural library agricultural research service u department agriculture httpwwwnalusdagov icon graphic made freepik wwwflaticoncom special thanks wenchao ding fscalendar httpsgithubcomwenchaoiosfscalendar takuya ichise materialdesigncolor httpsgithubcomtichisematerialdesigncolor nguyen vinh nvactivityindicatorview httpsgithubcomninjaproxnvactivityindicatorview ben guild bgtableviewrowactionwithimage httpsgithubcombenguildbgtableviewrowactionwithimage kevin pnchart httpsgithubcomkevinzhowpnchart
JavaScript,"##**Updated Ionic2 version of this sample application is available here [https://github.com/aaronksaunders/Ionic2-NutritionSample](https://github.com/aaronksaunders/Ionic2-NutritionSample)**


# Ionic-NutritionSample

Collection Repeat w/ $http and $resource Factory Example
--------------------------------------------------------
using https://developer.nutritionix.com/ for nutrition information; showing how to access REST API with either $http or $resource with IonicFramework collection-repeat directive.

API Information available here - https://developer.nutritionix.com

A [Pen](http://codepen.io/aaronksaunders/pen/jEYGPe) by [aaron k saunders](http://codepen.io/aaronksaunders) on [CodePen](http://codepen.io/).

[License](http://codepen.io/aaronksaunders/pen/jEYGPe/license).
","updated ionic2 version of this sample application is available here httpsgithubcomaaronksaundersionic2nutritionsamplehttpsgithubcomaaronksaundersionic2nutritionsample


 ionicnutritionsample

collection repeat w http and resource factory example

using httpsdevelopernutritionixcom for nutrition information showing how to access rest api with either http or resource with ionicframework collectionrepeat directive

api information available here httpsdevelopernutritionixcom

a penhttpcodepenioaaronksaunderspenjeygpe by aaron k saundershttpcodepenioaaronksaunders on codepenhttpcodepenio

licensehttpcodepenioaaronksaunderspenjeygpelicense",updat ionic2 version thi sampl applic avail httpsgithubcomaaronksaundersionic2nutritionsamplehttpsgithubcomaaronksaundersionic2nutritionsampl ionicnutritionsampl collect repeat w http resourc factori exampl use httpsdevelopernutritionixcom nutrit inform show access rest api either http resourc ionicframework collectionrepeat direct api inform avail httpsdevelopernutritionixcom penhttpcodepenioaaronksaunderspenjeygp aaron k saundershttpcodepenioaaronksaund codepenhttpcodepenio licensehttpcodepenioaaronksaunderspenjeygpelicens,updated ionic2 version sample application available httpsgithubcomaaronksaundersionic2nutritionsamplehttpsgithubcomaaronksaundersionic2nutritionsample ionicnutritionsample collection repeat w http resource factory example using httpsdevelopernutritionixcom nutrition information showing access rest api either http resource ionicframework collectionrepeat directive api information available httpsdevelopernutritionixcom penhttpcodepenioaaronksaunderspenjeygpe aaron k saundershttpcodepenioaaronksaunders codepenhttpcodepenio licensehttpcodepenioaaronksaunderspenjeygpelicense
JavaScript,"# Project Nutrition

Replace this readme with your own information about your project.

Start by briefly describing the assignment in a sentence or two. Keep it short and to the point.

## The problem

Describe how you approached to problem, and what tools and techniques you used to solve it. How did you plan? What technologies did you use? If you had more time, what would be next?

## View it live

Every project should be deployed somewhere. Be sure to include the link to the deployed project so that the viewer can click around and see what it's all about.
","project nutrition

replace this readme with your own information about your project

start by briefly describing the assignment in a sentence or two keep it short and to the point

 the problem

describe how you approached to problem and what tools and techniques you used to solve it how did you plan what technologies did you use if you had more time what would be next

 view it live

every project should be deployed somewhere be sure to include the link to the deployed project so that the viewer can click around and see what it ' s all about",project nutrit replac thi readm inform project start briefli describ assign sentenc two keep short point problem describ approach problem tool techniqu use solv plan technolog use time would next view live everi project deploy somewher sure includ link deploy project viewer click around see ',project nutrition replace readme information project start briefly describing assignment sentence two keep short point problem describe approached problem tool technique used solve plan technology use time would next view live every project deployed somewhere sure include link deployed project viewer click around see '
CSS,"# Ionic2-NutritionSample

This is a sample application based on off a Ionic2 to show the use of http in an application. 

### YouTube Channel
--
#### [Check out the videos and leave suggestions for new ones and subscribe for updates](https://www.youtube.com/c/AaronSaundersCI)
--

In this example, we are using https://developer.nutritionix.com/for nutrition information; showing how to access REST API using ngFor directive for rendering the data.

####Ionic Version Information
```
Cordova CLI: 6.4.0
Ionic Framework Version: 2.0.0
Ionic CLI Version: 2.2.1
Ionic App Lib Version: 2.1.7
Ionic App Scripts Version: 1.0.0
ios-deploy version: 1.9.1
ios-sim version: 5.0.6
OS: macOS Sierra
Node Version: v5.0.0
Xcode version: Xcode 8.2.1 Build version 8C1002
```

####Function in service to query REST API
```javascript
    getSearchResults(_searchString) {

        // fields to get back from API based on documenation
        let fields = 'brand_id,item_name,item_id,brand_name,nf_calories,nf_total_fat';

        // set the parameters for the http request, these will be 
        // added to the query string
        let params: URLSearchParams = new URLSearchParams();
        params.set('appId', this.APP_ID);
        params.set('appKey', this.API_KEY);
        params.set('fields', fields)

        // construct the URL, adding the search term to the url
        let url = this.BASE_URL + _searchString
        
        // execute the http get request, passing in query tring parameters
        // use the .map() to convert results to JSON to be returned to
        // the caller
        return this.http.get(url, { search: params })
            .map(res => res.json())

    }
```

####Use the service to get the data
```javascript
    // have a string, do the search
    this._dataService.getSearchResults(q)
      .subscribe(
        // process the results..
        (data) => {
          console.log('search results', data.hits)
          this.items = data.hits
        },
        // handle an error condition...
        (err) => alert(""Error Searching: "" + err),
        // called when completely done processing
        () => { console.log(""All Good With The Data"") }
      );
```
##MORE IONIC2 SAMPLES HERE
- [https://github.com/aaronksaunders/ionic2-firebase-sample](https://github.com/aaronksaunders/ionic2-firebase-sample)
- [https://github.com/aaronksaunders/ionic2-angularfire-sample](https://github.com/aaronksaunders/ionic2-angularfire-sample)
- [https://github.com/aaronksaunders/kinvey-starter-ionic2](https://github.com/aaronksaunders/kinvey-starter-ionic2)
- [https://github.com/aaronksaunders/Ionic2-NutritionSample](https://github.com/aaronksaunders/Ionic2-NutritionSample)
","ionic2nutritionsample

this is a sample application based on off a ionic2 to show the use of http in an application 

 youtube channel

 check out the videos and leave suggestions for new ones and subscribe for updateshttpswwwyoutubecomcaaronsaundersci


in this example we are using httpsdevelopernutritionixcomfor nutrition information showing how to access rest api using ngfor directive for rendering the data

ionic version information

cordova cli 640
ionic framework version 200
ionic cli version 221
ionic app lib version 217
ionic app scripts version 100
iosdeploy version 191
iossim version 506
os macos sierra
node version v500
xcode version xcode 821 build version 8c1002


function in service to query rest api
javascript
 getsearchresultssearchstring 

 fields to get back from api based on documenation
 let fields ' brandiditemnameitemidbrandnamenfcaloriesnftotalfat ' 

 set the parameters for the http request these will be 
 added to the query string
 let params urlsearchparams new urlsearchparams
 paramsset ' appid ' thisappid
 paramsset ' appkey ' thisapikey
 paramsset ' fields ' fields

 construct the url adding the search term to the url
 let url thisbaseurl searchstring
 
 execute the http get request passing in query tring parameters
 use the map to convert results to json to be returned to
 the caller
 return thishttpgeturl search params 
 mapres resjson

 


use the service to get the data
javascript
 have a string do the search
 thisdataservicegetsearchresultsq
 subscribe
 process the results
 data 
 consolelog ' search results ' datahits
 thisitems datahits
 
 handle an error condition
 err alerterror searching err
 called when completely done processing
 consolelogall good with the data 
 

more ionic2 samples here
 httpsgithubcomaaronksaundersionic2firebasesamplehttpsgithubcomaaronksaundersionic2firebasesample
 httpsgithubcomaaronksaundersionic2angularfiresamplehttpsgithubcomaaronksaundersionic2angularfiresample
 httpsgithubcomaaronksaunderskinveystarterionic2httpsgithubcomaaronksaunderskinveystarterionic2
 httpsgithubcomaaronksaundersionic2nutritionsamplehttpsgithubcomaaronksaundersionic2nutritionsample",ionic2nutritionsampl thi sampl applic base ionic2 show use http applic youtub channel check video leav suggest new one subscrib updateshttpswwwyoutubecomcaaronsaundersci thi exampl use httpsdevelopernutritionixcomfor nutrit inform show access rest api use ngfor direct render data ionic version inform cordova cli 640 ionic framework version 200 ionic cli version 221 ionic app lib version 217 ionic app script version 100 iosdeploy version 191 iossim version 506 os maco sierra node version v500 xcode version xcode 821 build version 8c1002 function servic queri rest api javascript getsearchresultssearchstr field get back api base documen let field ' brandiditemnameitemidbrandnamenfcaloriesnftotalfat ' set paramet http request ad queri string let param urlsearchparam new urlsearchparam paramsset ' appid ' thisappid paramsset ' appkey ' thisapikey paramsset ' field ' field construct url ad search term url let url thisbaseurl searchstr execut http get request pass queri tring paramet use map convert result json return caller return thishttpgeturl search param mapr resjson use servic get data javascript string search thisdataservicegetsearchresultsq subscrib process result data consolelog ' search result ' datahit thisitem datahit handl error condit err alerterror search err call complet done process consolelogal good data ionic2 sampl httpsgithubcomaaronksaundersionic2firebasesamplehttpsgithubcomaaronksaundersionic2firebasesampl httpsgithubcomaaronksaundersionic2angularfiresamplehttpsgithubcomaaronksaundersionic2angularfiresampl httpsgithubcomaaronksaunderskinveystarterionic2httpsgithubcomaaronksaunderskinveystarterionic2 httpsgithubcomaaronksaundersionic2nutritionsamplehttpsgithubcomaaronksaundersionic2nutritionsampl,ionic2nutritionsample sample application based ionic2 show use http application youtube channel check video leave suggestion new one subscribe updateshttpswwwyoutubecomcaaronsaundersci example using httpsdevelopernutritionixcomfor nutrition information showing access rest api using ngfor directive rendering data ionic version information cordova cli 640 ionic framework version 200 ionic cli version 221 ionic app lib version 217 ionic app script version 100 iosdeploy version 191 iossim version 506 macos sierra node version v500 xcode version xcode 821 build version 8c1002 function service query rest api javascript getsearchresultssearchstring field get back api based documenation let field ' brandiditemnameitemidbrandnamenfcaloriesnftotalfat ' set parameter http request added query string let params urlsearchparams new urlsearchparams paramsset ' appid ' thisappid paramsset ' appkey ' thisapikey paramsset ' field ' field construct url adding search term url let url thisbaseurl searchstring execute http get request passing query tring parameter use map convert result json returned caller return thishttpgeturl search params mapres resjson use service get data javascript string search thisdataservicegetsearchresultsq subscribe process result data consolelog ' search result ' datahits thisitems datahits handle error condition err alerterror searching err called completely done processing consolelogall good data ionic2 sample httpsgithubcomaaronksaundersionic2firebasesamplehttpsgithubcomaaronksaundersionic2firebasesample httpsgithubcomaaronksaundersionic2angularfiresamplehttpsgithubcomaaronksaundersionic2angularfiresample httpsgithubcomaaronksaunderskinveystarterionic2httpsgithubcomaaronksaunderskinveystarterionic2 httpsgithubcomaaronksaundersionic2nutritionsamplehttpsgithubcomaaronksaundersionic2nutritionsample
Python,"
===================================
Price And Nutrition Tracking System
===================================

Note for Current Users - DB Changes when Upgrading
==================================================

Changes to the database schema have been made recently (2020-04-13)
and when upgrading from older versions you will need to migrate your
database by running './manage.py migrate' - see the ""Schema Changes""
subsection below for more details.

Introduction
============

PANTS is a self-hosted, open-source nutrition tracker and a tool for
nutritional data analysis of ingredients and recipes. It can be run on
your own computer or as a multiuser web service (e.g. for use by a
dietician/trainer/researcher and their clients).

As well as tracking daily calories etc, PANTS is designed to make it
easy to compare and optimize recipes which form a regular part of your
diet; a key feature is the ability for recipes to be components of
other recipes.

For example a dough recipe and a filling recipe can both be components
in a pie recipe; you can clone the pie recipe with alternate fillings
to compare the nutritional values of the alternatives. Any changes to
the dough recipe will be reflected in the data for all of the pies.
These ""meta-recipes"" can also be used to provide an ""average""
breakfast/lunch/snack/etc for meal and diet planning.

PANTS is under active, daily use by the author so updates should be
fairly frequent. On the other hand, the code tends to be quick and
dirty as new things get added because the author wanted to use them
ASAP while cooking his dinner.

It is currently not recommended for non-technical users; basic
familiarity with Django is useful.

.. contents:: Contents:
   :backlinks: none

Use Cases
=========

In particular PANTS is designed for:

- Tracking the calories and other nutrients in your food, especially things cooked frequently.
- Storing a list of recipes, and determining the cost and nutritional values of a recipe. This includes recipes which are used in other recipes (recursively) e.g. a dough recipe and a filling recipe can both be components in a pie recipe.
- Comparing the cost and nutritional values of different ingredients or recipes (e.g. ""What food has the most protein-per-dollar?"", ""Which of these recipes has the least calories but is still high in fibre?"").
- Long term dietary planning - working out which ingredients or recipes you want to include regularly in your diet, based on cost and other factors.

PANTS is *not* ideal for:

- Tracking takeaway/restaraunt meals or prepackaged snack foods (rather than stuff you prepare yourself from basic ingredients)
- Determing the best place to buy a shopping list of items (cost is not designed to be updated regularly or automatically, it is there for long-term planning).
- Comparing the cost of ingredients across different regions.

Overview and Features
=====================

There are 4 basic sections of the system:

Ingredients
   Generic ingredients, like ""Rolled Oats"", ""Green Split Peas"",
   ""Skim Milk"", not any particular brand or store.
   You can compare relative data such as Protein per Joule or Fibre per
   Dollar on the ingredients pages.

Recipes
   A collection of ingredients and/or other recipes, showing the combined
   nutritional value and cost of each serve of the recipe, as well as the relative
   per-calorie and per-dollar values.

Diary
   Record of food intake; compares the total to your target and also
   shows how much each food contributed to your total for the time
   period.

Targets
   Minimum and Maximum nutritional and cost values you are aiming to
   reach each day. As well as daily targets you can also set targets
   for particular meals (e.g. a pre/post workout meal), or special days.

Some example screenshots can be seen at https://github.com/dylanleigh/PriceAndNutritionTrackingSystem/tree/master/screenshots

Other Feature Notes and Tips
----------------------------

Tagging
   Ingredients and recipes can be given multiple tags for easier searching and
   analysis; this makes it much easier to (for example) compare the fibre
   per calorie in different vegetables or the calories per serve of
   different dessert.

   Recipes can also be ""flagged"" to mark them as untested, tested and
   working, requiring further improvement, outdated, etc.

Repurposing Recursive Recipes
   As recipes can include other recipes, this can be used for other
   analysis and planning purposes.

   For example. an ""average breakfast"" meta-recipe which just contains one
   of all the other breakfast recipes; divided by the number of serves
   this provides an average breakfast which can be used for planning.
   This can be combined with other ""typical meal"" meta-recipes to make
   an ""average day"" overview which can be used as a meal plan.

   This can also be used as a sort of ""variables"" in other recipes,
   e.g. if you sometimes use normal flour or gluten free flour, a ""flour""
   recipe can be created which can be used to toggle between them with
   one change which effectively toggles the ingredient in multiple
   recipes at once.

PANTS doesn't make assumptions or guesses
   It is preferable to show no data instead of wrong data. If an ingredient has
   something missing (e.g. no fibre listed, no prices), any
   derived statistics will also be missing (e.g. no fibre-per-kj, or no
   protein-per-$ if there is no price). This also means that recipes
   which use that ingredient will not show a value for the sum of fibre
   in that recipe until all ingredients have that data entered in.

PANTS doesn't assume everyone sleeps at midnight
   Diary shows breakdown of nutrients by both calendar day and 24-hour
   periods, so it can be used by shift workers or those with irregular
   sleep cycles.

Recipes update; Diary doesn't change
   Diary entries are ""crystallized"" (future changes to a recipe do not
   affect past entries). On the other hand, changes to an
   ingredient/recipe immediately show up in any recipes which use them.

Once-off Diary entries
   Diary entries do not have to be linked to a specific
   ingredient/recipe, one off diary entries can be created with manual
   nutritional data e.g. when going out for the night and you can only
   guess how many calories are in dinner.

Per-user and global data
   Ingredients and Recipes added by the admin are visible to all users
   (but not editable by them); Normal users can also enter in their
   own Recipes and Ingredients, which only they have access to
   (sharing may be added in a later version).

Progress/Percentage bars
   Once your default target is set, it will be used to compare against
   ingredients/recipes you view so you can see how much % of your
   daily intake that recipe/ingredient will satisfy. On most pages,
   Green/Yellow/Red bars indicate how much of the daily target's
   minimum/maximum are accounted for; Purple progress bars are used
   to show percentage out of the current total, or amount compared to the
   highest value in a list of recipes/ingredients.

Micronutrients
   All Australian standard nutritional data is stored (e.g. sodium and
   saturated fat) but not everything is shown in all views by default.
   There was support for micronutrients such as individual amino acids
   which was removed as part of a DB schema change but this is planned to
   be readded in a more stable way (see roadmap for details).


Installation
============

It is highly recommended that PANTS is installed in a virtualenv, and
comes with a requirements.txt for pip::

   virtualenv -p python3 pants
   cd pants
   . bin/activate
   git clone https://github.com/dylanleigh/PriceAndNutritionTrackingSystem.git
   cd PriceAndNutritionTrackingSystem
   pip install -r requirements.txt

Requirements
------------

These will be installed automatically via pip:

- Django 2+
- Django-extensions 1.8+
- Django REST Framework
- Django-filter

Setup 1: Secret Key
-------------------

The environment variable ""PANTS_DJANGO_SECRET_KEY"" needs to be set for
PANTS/Django to start.

The exact place to set this will depend on the OS and environment you
are using. For hosted infrastructure such as AWS or Heroku this can be
set in the instance settings; for local installs you can set it as
part of the virtualenv activation script or as a variable on the
account of the user who will be running it::

   echo export PANTS_DJANGO_SECRET_KEY='968af690a7bcca77c9261e395885af77bc661d1c' >> ~/.profile

You can generate an appropriate secret key from the SHA1 of any
randomly chosen phrase or file::

   $ echo blahblahblah | sha1sum
   968af690a7bcca77c9261e395885af77bc661d1c  -
   $ export PANTS_DJANGO_SECRET_KEY='968af690a7bcca77c9261e395885af77bc661d1c'

Warning
   The Django Secret Key is used to generate session tokens and other
   cryptographically important things. Keeping it in an environment
   variable makes it easier to have seperate, secure secrets on different
   installations. If someone knows the secret key it may be possible to
   login as admin users and mess with things, so keep it secret.

Setup 2: Migrations and Admin User
----------------------------------

Finally you will need to run initial migrations and create an admin
user who can log in and create the initial ingredients, recipes etc::

   cd pants
   ./manage.py migrate
   ./manage.py createsuperuser

Starting the Server
-------------------

To run the server locally and access it via a browser::

   ./manage.py runserver

Sample Ingredient Data
----------------------

The author's ingredient data (about 200 ingredients as of 2019) can be
imported from a fixture with this command::

   ./manage.py loaddata fixtures/pants-ingredient-fixture.json

This command should only be run on an empty/new database, to avoid
overwriting any entries you have already created 

Starting data entry
-------------------

You will need to log in as an admin user (at
http://127.0.0.1:8000/adminbackend/ ) to start creating initial
ingredients, and then recipes which use those ingredients (and recipes
which use those recipes...)

The about page will show some basic DB stats, including the count of
ingredients which are missing nutritional data and other potential
issues.

No ingredients/recipes need to be created to start using the diary
(although every entry will have to have all its data added manually if
there are no recipes or ingredients to use).

Adding Non-Super Users
----------------------

TODO this needs to be documented for API consumers.

API
===

This is a work in progress as of 2020-04-13. Documentation will go
here when it's implemented for all major models. It is located at
/api/1/ (i.e. http://127.0.0.1:8000/api/1/ on a local server).

History
=======

PANTS grew out of a spreadsheet I was using in early 2017 to do
nutritional analysis of different foods, looking for the best ratios
of protein and fibre to calories and cost.

I wanted to add recipes which combined different ingredients and this
became so cumbersome I realised it would be easier to do in a DB and
started the project in Django, importing the initial set of
ingredients from the spreadsheet. Soon I also realised since I was
entering in all my recipes here it would also be easier if I used it
as my daily calorie counter and added that as well.

Schema Changes
--------------

For all changes mentioned here, your database must be migrated by
running the following commands::

   git pull
   ./manage.py migrate

No further user input or manual conversion should be required. The
details below are mostly for background.

2020-04-13
   Recipe and Ingredient can now be linked to an ""owner"" (user) - user
   created recipes and ingredients through the API will be owned by
   that user. Only the logged in user can see/edit things they own.

   ""Global"" recipes/ingredients with no owner are visible to everyone,
   and only editable by admin (i.e. no change from previous versions)

2020-04-02
   Each Recipe and Ingredient may now have an ""Introduction"" and
   ""Notes"" - these are freeform text fields that are simply displayed
   at the start/end of the detail page for the recipe or ingredient.

2020-03-20 (v0.93)
   Following on from yesterday's changes, Price has now been fully
   detached from Product. This update also changes Prices to require an
   Ingredient set (during the migration, this was optional to allow
   data to be migrated automatically).

   If there are errors applying this migration it is probably because
   there are Price objects which don't have an Ingredient. The last
   version should have converted all the old ones automatically, and
   converted any new ones created in the admin when they were saved.
   However, if by some chance you have any corrupt prices not linked to
   an ingredient, these will have to be deleted for the migration to
   work.

   The product model still exists, but is now deprecated; it has no
   current purpose except to associate brand names with ingredients.
   If you don't care about that, products can be all safely deleted
   via the admin interface (use the checkbox to ""select all"" and then
   drop-down action box to ""delete selected""). They should not be
   any performance effects from leaving them there, as no calculations
   use products anymore.

2020-03-19 (v0.92)
   Prices are changing from being attached to a Product to directly
   being attached to Ingredient, to simplify both the user interface
   and the code.

   As of this version, Price is attached to both Product and
   Ingredient. Ingredient will be set automatically from the Product.

   Future versions will make Price settable via the Ingredient section
   of the admin interface rather than Product.

2020-03-11
   Recipe Flags added. These differ from Tags in two ways - each
   recipe can have only one flag, but flags are much more visible
   (being shown in lists etc).

   The intended use case is to mark recipes which are OK for general
   use to differentiate them from recipes which aren't working and
   need further changes and testing, or outdated recipes no longer
   recommended. However, they can be used for whatever the admin
   wants.

   Also, tags for Recipe and Ingredient can now have a brief text
   description which is shown in list view when that tag is selected.

2019-09-07 (v0.91)
   Recipe Components now have separate ""servings"" and weight"" to bring
   them in line with the way all other models work (previously,
   ""weight"" was interpreted as number of serves if connected to a
   recipe).

   This fixes various issues, including data entry errors from
   overloading one field to have two meanings and allows a lot of the
   code between ingredient/recipe/diary to be simplified.

   Existing recipes will be converted to this new system by
   recipes/migrations/0018_auto_20190908_0152.py when the migrate
   command is run.

Removed Features
----------------

Products (partially)
   After the nutrient model was merged into Ingredient, Product lost
   it's ability to have separate nutrient data, and it was just a
   redundant way of linking prices to ingredients, which is now done
   directly.

   The product model still exists in the admin, but currently has no
   purpose except to associate brand names with an ingredient.
   It may be used again in the future for storing further data about a
   specific branded product.

Collections
   Never properly implemented; need for this is reduced by heavier
   use of tags, creative use of recursive recipes (e.g. a ""daily meal
   plan"" as a ""recipe""), better frontend comparison tools and CSV
   export to spreadsheet for doing analysis there.

Plots
   Recipes/Ingredients now have a CSV export button, use that to
   create charts externally via a spreadsheet.

Amino Acids
   The original design could handle detailed micronutrient
   stats (including individual amino acids, minerals, EFAs, fibre types)
   but when the nutrients object was merged into ingredient this was
   dropped. It was rarely used, but may be readded when the
   nutrient_data class/cache system is reworked to be less kludgy - see TODOs

Developer Notes
===============

As mentioned earlier the code contains many crufty bits because many
features were added quickly when immediately required.

In particular, sets of ""nutrition data"" are often passed around as a
dict with a few specific sets of keys (specified in settings) and
there is an ongoing project to convert this to a class that manages it
in a sane way, handling all comparisons, additions and per-weight
calculations sensibly. A lot of future work is on hold pending this
tech debt cleanup to be completed.

See the todo list below for more details.

Bits Useful for Other Projects
------------------------------

- Recipe/Ingredient have a very simple but effective CSV export view.
- There are convenient templatetags to do division, combined min/max percentage display and generate a little CSS bar chart (most tabular data uses them, see the screenshots for examples).


Roadmap, Todos and Issues
-------------------------

See https://github.com/dylanleigh/PriceAndNutritionTrackingSystem/blob/master/TODO.rst


Authors
=======

Dylan Leigh 2017-2019


","price and nutrition tracking system


note for current users db changes when upgrading


changes to the database schema have been made recently 20200413
and when upgrading from older versions you will need to migrate your
database by running ' managepy migrate ' see the schema changes
subsection below for more details

introduction


pants is a selfhosted opensource nutrition tracker and a tool for
nutritional data analysis of ingredients and recipes it can be run on
your own computer or as a multiuser web service eg for use by a
dieticiantrainerresearcher and their clients

as well as tracking daily calories etc pants is designed to make it
easy to compare and optimize recipes which form a regular part of your
diet a key feature is the ability for recipes to be components of
other recipes

for example a dough recipe and a filling recipe can both be components
in a pie recipe you can clone the pie recipe with alternate fillings
to compare the nutritional values of the alternatives any changes to
the dough recipe will be reflected in the data for all of the pies
these metarecipes can also be used to provide an average
breakfastlunchsnacketc for meal and diet planning

pants is under active daily use by the author so updates should be
fairly frequent on the other hand the code tends to be quick and
dirty as new things get added because the author wanted to use them
asap while cooking his dinner

it is currently not recommended for nontechnical users basic
familiarity with django is useful

 contents contents
 backlinks none

use cases


in particular pants is designed for

 tracking the calories and other nutrients in your food especially things cooked frequently
 storing a list of recipes and determining the cost and nutritional values of a recipe this includes recipes which are used in other recipes recursively eg a dough recipe and a filling recipe can both be components in a pie recipe
 comparing the cost and nutritional values of different ingredients or recipes eg what food has the most proteinperdollar which of these recipes has the least calories but is still high in fibre
 long term dietary planning working out which ingredients or recipes you want to include regularly in your diet based on cost and other factors

pants is not ideal for

 tracking takeawayrestaraunt meals or prepackaged snack foods rather than stuff you prepare yourself from basic ingredients
 determing the best place to buy a shopping list of items cost is not designed to be updated regularly or automatically it is there for longterm planning
 comparing the cost of ingredients across different regions

overview and features


there are 4 basic sections of the system

ingredients
 generic ingredients like rolled oats green split peas
 skim milk not any particular brand or store
 you can compare relative data such as protein per joule or fibre per
 dollar on the ingredients pages

recipes
 a collection of ingredients andor other recipes showing the combined
 nutritional value and cost of each serve of the recipe as well as the relative
 percalorie and perdollar values

diary
 record of food intake compares the total to your target and also
 shows how much each food contributed to your total for the time
 period

targets
 minimum and maximum nutritional and cost values you are aiming to
 reach each day as well as daily targets you can also set targets
 for particular meals eg a prepost workout meal or special days

some example screenshots can be seen at httpsgithubcomdylanleighpriceandnutritiontrackingsystemtreemasterscreenshots

other feature notes and tips


tagging
 ingredients and recipes can be given multiple tags for easier searching and
 analysis this makes it much easier to for example compare the fibre
 per calorie in different vegetables or the calories per serve of
 different dessert

 recipes can also be flagged to mark them as untested tested and
 working requiring further improvement outdated etc

repurposing recursive recipes
 as recipes can include other recipes this can be used for other
 analysis and planning purposes

 for example an average breakfast metarecipe which just contains one
 of all the other breakfast recipes divided by the number of serves
 this provides an average breakfast which can be used for planning
 this can be combined with other typical meal metarecipes to make
 an average day overview which can be used as a meal plan

 this can also be used as a sort of variables in other recipes
 eg if you sometimes use normal flour or gluten free flour a flour
 recipe can be created which can be used to toggle between them with
 one change which effectively toggles the ingredient in multiple
 recipes at once

pants doesn ' t make assumptions or guesses
 it is preferable to show no data instead of wrong data if an ingredient has
 something missing eg no fibre listed no prices any
 derived statistics will also be missing eg no fibreperkj or no
 proteinper if there is no price this also means that recipes
 which use that ingredient will not show a value for the sum of fibre
 in that recipe until all ingredients have that data entered in

pants doesn ' t assume everyone sleeps at midnight
 diary shows breakdown of nutrients by both calendar day and 24hour
 periods so it can be used by shift workers or those with irregular
 sleep cycles

recipes update diary doesn ' t change
 diary entries are crystallized future changes to a recipe do not
 affect past entries on the other hand changes to an
 ingredientrecipe immediately show up in any recipes which use them

onceoff diary entries
 diary entries do not have to be linked to a specific
 ingredientrecipe one off diary entries can be created with manual
 nutritional data eg when going out for the night and you can only
 guess how many calories are in dinner

peruser and global data
 ingredients and recipes added by the admin are visible to all users
 but not editable by them normal users can also enter in their
 own recipes and ingredients which only they have access to
 sharing may be added in a later version

progresspercentage bars
 once your default target is set it will be used to compare against
 ingredientsrecipes you view so you can see how much of your
 daily intake that recipeingredient will satisfy on most pages
 greenyellowred bars indicate how much of the daily target ' s
 minimummaximum are accounted for purple progress bars are used
 to show percentage out of the current total or amount compared to the
 highest value in a list of recipesingredients

micronutrients
 all australian standard nutritional data is stored eg sodium and
 saturated fat but not everything is shown in all views by default
 there was support for micronutrients such as individual amino acids
 which was removed as part of a db schema change but this is planned to
 be readded in a more stable way see roadmap for details


installation


it is highly recommended that pants is installed in a virtualenv and
comes with a requirementstxt for pip

 virtualenv p python3 pants
 cd pants
 binactivate
 git clone httpsgithubcomdylanleighpriceandnutritiontrackingsystemgit
 cd priceandnutritiontrackingsystem
 pip install r requirementstxt

requirements


these will be installed automatically via pip

 django 2
 djangoextensions 18
 django rest framework
 djangofilter

setup 1 secret key


the environment variable pantsdjangosecretkey needs to be set for
pantsdjango to start

the exact place to set this will depend on the os and environment you
are using for hosted infrastructure such as aws or heroku this can be
set in the instance settings for local installs you can set it as
part of the virtualenv activation script or as a variable on the
account of the user who will be running it

 echo export pantsdjangosecretkey ' 968af690a7bcca77c9261e395885af77bc661d1c ' profile

you can generate an appropriate secret key from the sha1 of any
randomly chosen phrase or file

 echo blahblahblah sha1sum
 968af690a7bcca77c9261e395885af77bc661d1c 
 export pantsdjangosecretkey ' 968af690a7bcca77c9261e395885af77bc661d1c ' 

warning
 the django secret key is used to generate session tokens and other
 cryptographically important things keeping it in an environment
 variable makes it easier to have seperate secure secrets on different
 installations if someone knows the secret key it may be possible to
 login as admin users and mess with things so keep it secret

setup 2 migrations and admin user


finally you will need to run initial migrations and create an admin
user who can log in and create the initial ingredients recipes etc

 cd pants
 managepy migrate
 managepy createsuperuser

starting the server


to run the server locally and access it via a browser

 managepy runserver

sample ingredient data


the author ' s ingredient data about 200 ingredients as of 2019 can be
imported from a fixture with this command

 managepy loaddata fixturespantsingredientfixturejson

this command should only be run on an emptynew database to avoid
overwriting any entries you have already created 

starting data entry


you will need to log in as an admin user at
http1270018000adminbackend to start creating initial
ingredients and then recipes which use those ingredients and recipes
which use those recipes

the about page will show some basic db stats including the count of
ingredients which are missing nutritional data and other potential
issues

no ingredientsrecipes need to be created to start using the diary
although every entry will have to have all its data added manually if
there are no recipes or ingredients to use

adding nonsuper users


todo this needs to be documented for api consumers

api


this is a work in progress as of 20200413 documentation will go
here when it ' s implemented for all major models it is located at
api1 ie http1270018000api1 on a local server

history


pants grew out of a spreadsheet i was using in early 2017 to do
nutritional analysis of different foods looking for the best ratios
of protein and fibre to calories and cost

i wanted to add recipes which combined different ingredients and this
became so cumbersome i realised it would be easier to do in a db and
started the project in django importing the initial set of
ingredients from the spreadsheet soon i also realised since i was
entering in all my recipes here it would also be easier if i used it
as my daily calorie counter and added that as well

schema changes


for all changes mentioned here your database must be migrated by
running the following commands

 git pull
 managepy migrate

no further user input or manual conversion should be required the
details below are mostly for background

20200413
 recipe and ingredient can now be linked to an owner user user
 created recipes and ingredients through the api will be owned by
 that user only the logged in user can seeedit things they own

 global recipesingredients with no owner are visible to everyone
 and only editable by admin ie no change from previous versions

20200402
 each recipe and ingredient may now have an introduction and
 notes these are freeform text fields that are simply displayed
 at the startend of the detail page for the recipe or ingredient

20200320 v093
 following on from yesterday ' s changes price has now been fully
 detached from product this update also changes prices to require an
 ingredient set during the migration this was optional to allow
 data to be migrated automatically

 if there are errors applying this migration it is probably because
 there are price objects which don ' t have an ingredient the last
 version should have converted all the old ones automatically and
 converted any new ones created in the admin when they were saved
 however if by some chance you have any corrupt prices not linked to
 an ingredient these will have to be deleted for the migration to
 work

 the product model still exists but is now deprecated it has no
 current purpose except to associate brand names with ingredients
 if you don ' t care about that products can be all safely deleted
 via the admin interface use the checkbox to select all and then
 dropdown action box to delete selected they should not be
 any performance effects from leaving them there as no calculations
 use products anymore

20200319 v092
 prices are changing from being attached to a product to directly
 being attached to ingredient to simplify both the user interface
 and the code

 as of this version price is attached to both product and
 ingredient ingredient will be set automatically from the product

 future versions will make price settable via the ingredient section
 of the admin interface rather than product

20200311
 recipe flags added these differ from tags in two ways each
 recipe can have only one flag but flags are much more visible
 being shown in lists etc

 the intended use case is to mark recipes which are ok for general
 use to differentiate them from recipes which aren ' t working and
 need further changes and testing or outdated recipes no longer
 recommended however they can be used for whatever the admin
 wants

 also tags for recipe and ingredient can now have a brief text
 description which is shown in list view when that tag is selected

20190907 v091
 recipe components now have separate servings and weight to bring
 them in line with the way all other models work previously
 weight was interpreted as number of serves if connected to a
 recipe

 this fixes various issues including data entry errors from
 overloading one field to have two meanings and allows a lot of the
 code between ingredientrecipediary to be simplified

 existing recipes will be converted to this new system by
 recipesmigrations0018auto201909080152py when the migrate
 command is run

removed features


products partially
 after the nutrient model was merged into ingredient product lost
 it ' s ability to have separate nutrient data and it was just a
 redundant way of linking prices to ingredients which is now done
 directly

 the product model still exists in the admin but currently has no
 purpose except to associate brand names with an ingredient
 it may be used again in the future for storing further data about a
 specific branded product

collections
 never properly implemented need for this is reduced by heavier
 use of tags creative use of recursive recipes eg a daily meal
 plan as a recipe better frontend comparison tools and csv
 export to spreadsheet for doing analysis there

plots
 recipesingredients now have a csv export button use that to
 create charts externally via a spreadsheet

amino acids
 the original design could handle detailed micronutrient
 stats including individual amino acids minerals efas fibre types
 but when the nutrients object was merged into ingredient this was
 dropped it was rarely used but may be readded when the
 nutrientdata classcache system is reworked to be less kludgy see todos

developer notes


as mentioned earlier the code contains many crufty bits because many
features were added quickly when immediately required

in particular sets of nutrition data are often passed around as a
dict with a few specific sets of keys specified in settings and
there is an ongoing project to convert this to a class that manages it
in a sane way handling all comparisons additions and perweight
calculations sensibly a lot of future work is on hold pending this
tech debt cleanup to be completed

see the todo list below for more details

bits useful for other projects


 recipeingredient have a very simple but effective csv export view
 there are convenient templatetags to do division combined minmax percentage display and generate a little css bar chart most tabular data uses them see the screenshots for examples


roadmap todos and issues


see httpsgithubcomdylanleighpriceandnutritiontrackingsystemblobmastertodorst


authors


dylan leigh 20172019",price nutrit track system note current user db chang upgrad chang databas schema made recent 20200413 upgrad older version need migrat databas run ' managepi migrat ' see schema chang subsect detail introduct pant selfhost opensourc nutrit tracker tool nutrit data analysi ingredi recip run comput multius web servic eg use dieticiantrainerresearch client well track daili calori etc pant design make easi compar optim recip form regular part diet key featur abil recip compon recip exampl dough recip fill recip compon pie recip clone pie recip altern fill compar nutrit valu altern ani chang dough recip reflect data pie metarecip also use provid averag breakfastlunchsnacketc meal diet plan pant activ daili use author updat fairli frequent hand code tend quick dirti new thing get ad becaus author want use asap cook hi dinner current recommend nontechn user basic familiar django use content content backlink none use case particular pant design track calori nutrient food especi thing cook frequent store list recip determin cost nutrit valu recip thi includ recip use recip recurs eg dough recip fill recip compon pie recip compar cost nutrit valu differ ingredi recip eg food ha proteinperdollar recip ha least calori still high fibr long term dietari plan work ingredi recip want includ regularli diet base cost factor pant ideal track takeawayrestaraunt meal prepackag snack food rather stuff prepar basic ingredi determ best place buy shop list item cost design updat regularli automat longterm plan compar cost ingredi across differ region overview featur 4 basic section system ingredi gener ingredi like roll oat green split pea skim milk ani particular brand store compar rel data protein per joul fibr per dollar ingredi page recip collect ingredi andor recip show combin nutrit valu cost serv recip well rel percalori perdollar valu diari record food intak compar total target also show much food contribut total time period target minimum maximum nutrit cost valu aim reach day well daili target also set target particular meal eg prepost workout meal special day exampl screenshot seen httpsgithubcomdylanleighpriceandnutritiontrackingsystemtreemasterscreenshot featur note tip tag ingredi recip given multipl tag easier search analysi thi make much easier exampl compar fibr per calori differ veget calori per serv differ dessert recip also flag mark untest test work requir improv outdat etc repurpos recurs recip recip includ recip thi use analysi plan purpos exampl averag breakfast metarecip contain one breakfast recip divid number serv thi provid averag breakfast use plan thi combin typic meal metarecip make averag day overview use meal plan thi also use sort variabl recip eg sometim use normal flour gluten free flour flour recip creat use toggl one chang effect toggl ingredi multipl recip onc pant ' make assumpt guess prefer show data instead wrong data ingredi ha someth miss eg fibr list price ani deriv statist also miss eg fibreperkj proteinp price thi also mean recip use ingredi show valu sum fibr recip ingredi data enter pant ' assum everyon sleep midnight diari show breakdown nutrient calendar day 24hour period use shift worker irregular sleep cycl recip updat diari ' chang diari entri crystal futur chang recip affect past entri hand chang ingredientrecip immedi show ani recip use onceoff diari entri diari entri link specif ingredientrecip one diari entri creat manual nutrit data eg go night onli guess mani calori dinner perus global data ingredi recip ad admin visibl user edit normal user also enter recip ingredi onli access share may ad later version progresspercentag bar onc default target set use compar ingredientsrecip view see much daili intak recipeingredi satisfi page greenyellowr bar indic much daili target ' minimummaximum account purpl progress bar use show percentag current total amount compar highest valu list recipesingredi micronutri australian standard nutrit data store eg sodium satur fat everyth shown view default wa support micronutri individu amino acid wa remov part db schema chang thi plan read stabl way see roadmap detail instal highli recommend pant instal virtualenv come requirementstxt pip virtualenv p python3 pant cd pant binactiv git clone httpsgithubcomdylanleighpriceandnutritiontrackingsystemgit cd priceandnutritiontrackingsystem pip instal r requirementstxt requir instal automat via pip django 2 djangoextens 18 django rest framework djangofilt setup 1 secret key environ variabl pantsdjangosecretkey need set pantsdjango start exact place set thi depend os environ use host infrastructur aw heroku thi set instanc set local instal set part virtualenv activ script variabl account user run echo export pantsdjangosecretkey ' 968af690a7bcca77c9261e395885af77bc661d1c ' profil gener appropri secret key sha1 ani randomli chosen phrase file echo blahblahblah sha1sum 968af690a7bcca77c9261e395885af77bc661d1c export pantsdjangosecretkey ' 968af690a7bcca77c9261e395885af77bc661d1c ' warn django secret key use gener session token cryptograph import thing keep environ variabl make easier seper secur secret differ instal someon know secret key may possibl login admin user mess thing keep secret setup 2 migrat admin user final need run initi migrat creat admin user log creat initi ingredi recip etc cd pant managepi migrat managepi createsuperus start server run server local access via browser managepi runserv sampl ingredi data author ' ingredi data 200 ingredi 2019 import fixtur thi command managepi loaddata fixturespantsingredientfixturejson thi command onli run emptynew databas avoid overwrit ani entri alreadi creat start data entri need log admin user http1270018000adminbackend start creat initi ingredi recip use ingredi recip use recip page show basic db stat includ count ingredi miss nutrit data potenti issu ingredientsrecip need creat start use diari although everi entri data ad manual recip ingredi use ad nonsup user todo thi need document api consum api thi work progress 20200413 document go ' implement major model locat api1 ie http1270018000api1 local server histori pant grew spreadsheet wa use earli 2017 nutrit analysi differ food look best ratio protein fibr calori cost want add recip combin differ ingredi thi becam cumbersom realis would easier db start project django import initi set ingredi spreadsheet soon also realis sinc wa enter recip would also easier use daili calori counter ad well schema chang chang mention databas must migrat run follow command git pull managepi migrat user input manual convers requir detail mostli background 20200413 recip ingredi link owner user user creat recip ingredi api user onli log user seeedit thing global recipesingredi owner visibl everyon onli edit admin ie chang previou version 20200402 recip ingredi may introduct note freeform text field simpli display startend detail page recip ingredi 20200320 v093 follow yesterday ' chang price ha fulli detach product thi updat also chang price requir ingredi set dure migrat thi wa option allow data migrat automat error appli thi migrat probabl becaus price object ' ingredi last version convert old one automat convert ani new one creat admin save howev chanc ani corrupt price link ingredi delet migrat work product model still exist deprec ha current purpos except associ brand name ingredi ' care product safe delet via admin interfac use checkbox select dropdown action box delet select ani perform effect leav calcul use product anymor 20200319 v092 price chang attach product directli attach ingredi simplifi user interfac code thi version price attach product ingredi ingredi set automat product futur version make price settabl via ingredi section admin interfac rather product 20200311 recip flag ad differ tag two way recip onli one flag flag much visibl shown list etc intend use case mark recip ok gener use differenti recip ' work need chang test outdat recip longer recommend howev use whatev admin want also tag recip ingredi brief text descript shown list view tag select 20190907 v091 recip compon separ serv weight bring line way model work previous weight wa interpret number serv connect recip thi fix variou issu includ data entri error overload one field two mean allow lot code ingredientrecipediari simplifi exist recip convert thi new system recipesmigrations0018auto201909080152pi migrat command run remov featur product partial nutrient model wa merg ingredi product lost ' abil separ nutrient data wa redund way link price ingredi done directli product model still exist admin current ha purpos except associ brand name ingredi may use futur store data specif brand product collect never properli implement need thi reduc heavier use tag creativ use recurs recip eg daili meal plan recip better frontend comparison tool csv export spreadsheet analysi plot recipesingredi csv export button use creat chart extern via spreadsheet amino acid origin design could handl detail micronutri stat includ individu amino acid miner efa fibr type nutrient object wa merg ingredi thi wa drop wa rare use may read nutrientdata classcach system rework less kludgi see todo develop note mention earlier code contain mani crufti bit becaus mani featur ad quickli immedi requir particular set nutrit data often pass around dict specif set key specifi set ongo project convert thi class manag sane way handl comparison addit perweight calcul sensibl lot futur work hold pend thi tech debt cleanup complet see todo list detail bit use project recipeingredi veri simpl effect csv export view conveni templatetag divis combin minmax percentag display gener littl css bar chart tabular data use see screenshot exampl roadmap todo issu see httpsgithubcomdylanleighpriceandnutritiontrackingsystemblobmastertodorst author dylan leigh 20172019,price nutrition tracking system note current user db change upgrading change database schema made recently 20200413 upgrading older version need migrate database running ' managepy migrate ' see schema change subsection detail introduction pant selfhosted opensource nutrition tracker tool nutritional data analysis ingredient recipe run computer multiuser web service eg use dieticiantrainerresearcher client well tracking daily calorie etc pant designed make easy compare optimize recipe form regular part diet key feature ability recipe component recipe example dough recipe filling recipe component pie recipe clone pie recipe alternate filling compare nutritional value alternative change dough recipe reflected data pie metarecipes also used provide average breakfastlunchsnacketc meal diet planning pant active daily use author update fairly frequent hand code tends quick dirty new thing get added author wanted use asap cooking dinner currently recommended nontechnical user basic familiarity django useful content content backlinks none use case particular pant designed tracking calorie nutrient food especially thing cooked frequently storing list recipe determining cost nutritional value recipe includes recipe used recipe recursively eg dough recipe filling recipe component pie recipe comparing cost nutritional value different ingredient recipe eg food ha proteinperdollar recipe ha least calorie still high fibre long term dietary planning working ingredient recipe want include regularly diet based cost factor pant ideal tracking takeawayrestaraunt meal prepackaged snack food rather stuff prepare basic ingredient determing best place buy shopping list item cost designed updated regularly automatically longterm planning comparing cost ingredient across different region overview feature 4 basic section system ingredient generic ingredient like rolled oat green split pea skim milk particular brand store compare relative data protein per joule fibre per dollar ingredient page recipe collection ingredient andor recipe showing combined nutritional value cost serve recipe well relative percalorie perdollar value diary record food intake compare total target also show much food contributed total time period target minimum maximum nutritional cost value aiming reach day well daily target also set target particular meal eg prepost workout meal special day example screenshots seen httpsgithubcomdylanleighpriceandnutritiontrackingsystemtreemasterscreenshots feature note tip tagging ingredient recipe given multiple tag easier searching analysis make much easier example compare fibre per calorie different vegetable calorie per serve different dessert recipe also flagged mark untested tested working requiring improvement outdated etc repurposing recursive recipe recipe include recipe used analysis planning purpose example average breakfast metarecipe contains one breakfast recipe divided number serf provides average breakfast used planning combined typical meal metarecipes make average day overview used meal plan also used sort variable recipe eg sometimes use normal flour gluten free flour flour recipe created used toggle one change effectively toggle ingredient multiple recipe pant ' make assumption guess preferable show data instead wrong data ingredient ha something missing eg fibre listed price derived statistic also missing eg fibreperkj proteinper price also mean recipe use ingredient show value sum fibre recipe ingredient data entered pant ' assume everyone sleep midnight diary show breakdown nutrient calendar day 24hour period used shift worker irregular sleep cycle recipe update diary ' change diary entry crystallized future change recipe affect past entry hand change ingredientrecipe immediately show recipe use onceoff diary entry diary entry linked specific ingredientrecipe one diary entry created manual nutritional data eg going night guess many calorie dinner peruser global data ingredient recipe added admin visible user editable normal user also enter recipe ingredient access sharing may added later version progresspercentage bar default target set used compare ingredientsrecipes view see much daily intake recipeingredient satisfy page greenyellowred bar indicate much daily target ' minimummaximum accounted purple progress bar used show percentage current total amount compared highest value list recipesingredients micronutrient australian standard nutritional data stored eg sodium saturated fat everything shown view default wa support micronutrient individual amino acid wa removed part db schema change planned readded stable way see roadmap detail installation highly recommended pant installed virtualenv come requirementstxt pip virtualenv p python3 pant cd pant binactivate git clone httpsgithubcomdylanleighpriceandnutritiontrackingsystemgit cd priceandnutritiontrackingsystem pip install r requirementstxt requirement installed automatically via pip django 2 djangoextensions 18 django rest framework djangofilter setup 1 secret key environment variable pantsdjangosecretkey need set pantsdjango start exact place set depend environment using hosted infrastructure aws heroku set instance setting local installs set part virtualenv activation script variable account user running echo export pantsdjangosecretkey ' 968af690a7bcca77c9261e395885af77bc661d1c ' profile generate appropriate secret key sha1 randomly chosen phrase file echo blahblahblah sha1sum 968af690a7bcca77c9261e395885af77bc661d1c export pantsdjangosecretkey ' 968af690a7bcca77c9261e395885af77bc661d1c ' warning django secret key used generate session token cryptographically important thing keeping environment variable make easier seperate secure secret different installation someone know secret key may possible login admin user mess thing keep secret setup 2 migration admin user finally need run initial migration create admin user log create initial ingredient recipe etc cd pant managepy migrate managepy createsuperuser starting server run server locally access via browser managepy runserver sample ingredient data author ' ingredient data 200 ingredient 2019 imported fixture command managepy loaddata fixturespantsingredientfixturejson command run emptynew database avoid overwriting entry already created starting data entry need log admin user http1270018000adminbackend start creating initial ingredient recipe use ingredient recipe use recipe page show basic db stats including count ingredient missing nutritional data potential issue ingredientsrecipes need created start using diary although every entry data added manually recipe ingredient use adding nonsuper user todo need documented api consumer api work progress 20200413 documentation go ' implemented major model located api1 ie http1270018000api1 local server history pant grew spreadsheet wa using early 2017 nutritional analysis different food looking best ratio protein fibre calorie cost wanted add recipe combined different ingredient became cumbersome realised would easier db started project django importing initial set ingredient spreadsheet soon also realised since wa entering recipe would also easier used daily calorie counter added well schema change change mentioned database must migrated running following command git pull managepy migrate user input manual conversion required detail mostly background 20200413 recipe ingredient linked owner user user created recipe ingredient api owned user logged user seeedit thing global recipesingredients owner visible everyone editable admin ie change previous version 20200402 recipe ingredient may introduction note freeform text field simply displayed startend detail page recipe ingredient 20200320 v093 following yesterday ' change price ha fully detached product update also change price require ingredient set migration wa optional allow data migrated automatically error applying migration probably price object ' ingredient last version converted old one automatically converted new one created admin saved however chance corrupt price linked ingredient deleted migration work product model still exists deprecated ha current purpose except associate brand name ingredient ' care product safely deleted via admin interface use checkbox select dropdown action box delete selected performance effect leaving calculation use product anymore 20200319 v092 price changing attached product directly attached ingredient simplify user interface code version price attached product ingredient ingredient set automatically product future version make price settable via ingredient section admin interface rather product 20200311 recipe flag added differ tag two way recipe one flag flag much visible shown list etc intended use case mark recipe ok general use differentiate recipe ' working need change testing outdated recipe longer recommended however used whatever admin want also tag recipe ingredient brief text description shown list view tag selected 20190907 v091 recipe component separate serving weight bring line way model work previously weight wa interpreted number serf connected recipe fix various issue including data entry error overloading one field two meaning allows lot code ingredientrecipediary simplified existing recipe converted new system recipesmigrations0018auto201909080152py migrate command run removed feature product partially nutrient model wa merged ingredient product lost ' ability separate nutrient data wa redundant way linking price ingredient done directly product model still exists admin currently ha purpose except associate brand name ingredient may used future storing data specific branded product collection never properly implemented need reduced heavier use tag creative use recursive recipe eg daily meal plan recipe better frontend comparison tool csv export spreadsheet analysis plot recipesingredients csv export button use create chart externally via spreadsheet amino acid original design could handle detailed micronutrient stats including individual amino acid mineral efas fibre type nutrient object wa merged ingredient wa dropped wa rarely used may readded nutrientdata classcache system reworked le kludgy see todos developer note mentioned earlier code contains many crufty bit many feature added quickly immediately required particular set nutrition data often passed around dict specific set key specified setting ongoing project convert class manages sane way handling comparison addition perweight calculation sensibly lot future work hold pending tech debt cleanup completed see todo list detail bit useful project recipeingredient simple effective csv export view convenient templatetags division combined minmax percentage display generate little cs bar chart tabular data us see screenshots example roadmap todos issue see httpsgithubcomdylanleighpriceandnutritiontrackingsystemblobmastertodorst author dylan leigh 20172019
Python,"<div align=""center"">

# Nutrition5k: A Comprehensive Nutrition Dataset

<p align=""center"">
	<img src=""res/example_plate.jpg"" width=""400px"">
	<img src=""res/scan.gif"" width=""400px"">
</p>

<p align=""center"">
	<a href=""https://arxiv.org/pdf/2103.03375.pdf""><b>Paper</b></a> •
	<a href=""#download-data""><b>Download Data</b></a> •
	<a href=""#dataset-contents""><b>Dataset Contents</b></a> •
	<a href=""#license--contact""><b>License & Contact</b></a>
</p>

</div>

<b>Nutrition5k</b> is a dataset of visual and nutritional data for ~5k realistic plates of food captured from Google cafeterias using a custom scanning rig. We are releasing this dataset alongside our recent <a href=""https://arxiv.org/abs/2103.03375"">CVPR 2021 paper</a> to help promote research in visual nutrition understanding. Please see the paper for more details on the dataset and follow-up experiments.

### Key Features
<ul>
	<li>Scans data for 5,006 plates of food, each containing:
		<ul>
			<li>4 rotating side-angle videos</li>
			<li>Overhead RGB-D images <i>(when available)</i></li>
			<li>Fine-grained list of ingredients</li>
			<li>Per-ingredient mass</li>
			<li>Total dish mass and calories</li>
			<li>Fat, protein, and carbohydrate macronutrient masses</li>
		</ul></li>
	<li>Official train/test split</li>
	<li>Nutrition regression eval scripts</li>
</ul>

<i>→ [Also, see our related <a href=""https://tfhub.dev/google/seefood/segmenter/mobile_food_segmenter_V1/1"">Mobile Food Segmentation model on TensorFlow Hub</a>]</i>

### Download Data
All Nutrition5k data can be downloaded directly from our [Google Cloud Storage bucket](https://console.cloud.google.com/storage/browser/nutrition5k_dataset), or from the .tar.gz download link below.
<ul>
	<li><a href=""https://storage.cloud.google.com/nutrition5k_dataset/nutrition5k_dataset.tar.gz"">nutrition5k_dataset.tar.gz</a> (181.4 GB)
</ul>

From the Cloud Storage bucket directory, you can also browse through the dataset folders and download specific files using the `gsutil cp` command:
```
gsutil -m cp -r ""gs://nutrition5k_dataset/nutrition5k_dataset/{FILE_OR_DIR_PATH}"" .
```

See [here](https://cloud.google.com/storage/docs/gsutil) for instructions on installing the `gsutil` tool.

### Examples

<p align=""center"">
	<img src=""res/plate_1.jpg"">
	<img src=""res/plate_2.jpg"">
	<img src=""res/plate_3.jpg"">
	<img src=""res/plate_4.jpg"">
	<i><b>Example side-angle and overhead frames, with nutrition labels.</b></i>
</p>

<!--### Dish Ingredient Label
<img src=""res/ingredients_table.png"" width=""200px"">
<img src=""res/example_plate.jpg"" width=""400px"">
-->

<p align=""center"">
	<img src=""res/incremental.jpg"">
	<i><b>Example of the incremental scanning procedure.</b></i>
</p>



## Dataset contents

#### Side-Angle Videos
Video recordings were captured using 4 separate Raspberry Pi cameras (labeled A-D) at alternating 30 degree and 60 degree viewing angles. The cameras are positioned 90 degrees apart and sweep 90 degrees during video capture so that the dish is captured from all sides.
Video files are found in `imagery/side_angles/` and are organized by dish id. To extract all 2D image frames from a video, use ffmpeg as shown below:
```
ffmpeg -i input.mp4 output_%03d.jpeg
```

The models included in the Nutrition5k paper were trained and evaluated on every fifth frame sampled from each video, and we include two scripts to help with this. `scripts/extract_frames.sh` walks through each dish_id directory, extracts each frame from all four videos, and outputs the frames to a newly created `dish_ID/frames/` directory. `scripts/extract_frames_sampled.sh` accepts a command line argument to extract only every nth frame from each video.

```
cp scripts/extract_frames*.sh imagery/side_angles
cd imagery/side_angles
sh extract_frames.sh
sh extract_frames_sampled.sh 5
```

#### Overhead RGB-D Images
The `imagery/realsense_overhead/` directory contains RGB, raw depth, and colorized depth images organized by dish ID. Raw depth images are encoded as 16-bit integer images with depth units of 10,000 (i.e. 1 meter = 10,000 units). The colorized depth images provide a human-readable visualization of the depth map, with closer objects in blue and further objects in red. All depth values are rounded to a maximum of 0.4m (4,000 depth units), which exceeds the height of our food scanning rig.

#### Ingredient Metadata
The ingredient metadata CSV (`metadata/ingredient_metadata.csv`) contains a list of all ingredients covered in the dataset's dishes, their unique IDs, and per-gram nutritional information sourced from the USDA Food and Nutrient Database. Ingredient IDs take the following form: `ingr_[ingredient number padded to 10 digits]`.

#### Dish Metadata
The dish metadata CSVs (`metadata/dish_metadata_cafe1.csv` and `metadata/dish_metadata_cafe2.csv`) contain all nutrition metadata at the dish-level, as well as per-ingredient mass and macronutrients. For each dish ID `dish_[10 digit timestamp]`, there is a CSV entry containing the following fields: 

<i>dish_id, total_calories, total_mass, total_fat, total_carb, total_protein, num_ingrs, (ingr_1_id, ingr_1_name, ingr_1_grams, ingr_1_calories, ingr_1_fat, ingr_1_carb, ingr_1_protein, ...)</i>

with the last 8 fields are repeated for every ingredient present in the dish.

#### Train/Test Splits
We include dish IDs for the training and testing splits used in our experiments in the `dish_ids/splits/` directory. All incremental scans that compose a unique plate are held within the same split, to avoid overlap between the train and test splits. See Section 3.6 of our paper for more details on incremental scanning.

#### Evaluation Script
To help evaluate nutrition prediction methods, we provide `scripts/compute_eval_statistics.py`. This script can be used to calculate absolute and percentage mean average error from a CSV of per-dish nutrition values. This tool can be used to generate regression results that can be directly compared to those reported in our paper. See the header file for usage instructions.

## Dataset Bias Disclaimer
The dataset does not cover all food cuisines, as it was only collected in a few select cafeterias in California, USA. Nutrition5k does not claim to completely solve the food understanding problem, but rather aims to provide a unique level of detailed annotations and depth data to further advance the space.

## License & Contact
We release all Nutrition5k data under the <a href=""https://creativecommons.org/licenses/by/4.0/"">Creative Commons V4.0</a> license. You are free to share and adapt this data for any purpose, even commercially. If you found this dataset useful, please consider citing our [CVPR 2021 paper](https://arxiv.org/pdf/2103.03375.pdf).
```
@inproceedings{thames2021nutrition5k,
  title={Nutrition5k: Towards Automatic Nutritional Understanding of Generic Food},
  author={Thames, Quin and Karpur, Arjun and Norris, Wade and Xia, Fangting and Panait, Liviu and Weyand, Tobias and Sim, Jack},
  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},
  pages={8903--8911},
  year={2021}
}
```

If you have any questions about the Nutrition5k dataset or paper, please send an email to the authors at <a href=""mailto:nutrition5k@google.com"">nutrition5k@google.com</a>.


Thank you to Ben Goldberger, Caitlin O'Brien, and the Google LAX/PLV Cafeteria teams for their contributions!
","div aligncenter

 nutrition5k a comprehensive nutrition dataset

p aligncenter
 &#9; img srcresexampleplatejpg width400px
 &#9; img srcresscangif width400px
p

p aligncenter
 &#9; a hrefhttpsarxivorgpdf210303375pdfbpaperba 
 &#9; a hrefdownloaddatabdownload databa 
 &#9; a hrefdatasetcontentsbdataset contentsba 
 &#9; a hreflicensecontactblicense contactba
p

div

bnutrition5kb is a dataset of visual and nutritional data for 5k realistic plates of food captured from google cafeterias using a custom scanning rig we are releasing this dataset alongside our recent a hrefhttpsarxivorgabs210303375cvpr 2021 papera to help promote research in visual nutrition understanding please see the paper for more details on the dataset and followup experiments

 key features
ul
 &#9; liscans data for 5006 plates of food each containing
 &#9; &#9; ul
 &#9; &#9; &#9; li4 rotating sideangle videosli
 &#9; &#9; &#9; lioverhead rgbd images iwhen availableili
 &#9; &#9; &#9; lifinegrained list of ingredientsli
 &#9; &#9; &#9; liperingredient massli
 &#9; &#9; &#9; litotal dish mass and caloriesli
 &#9; &#9; &#9; lifat protein and carbohydrate macronutrient massesli
 &#9; &#9; ulli
 &#9; liofficial traintest splitli
 &#9; linutrition regression eval scriptsli
ul

i also see our related a hrefhttpstfhubdevgoogleseefoodsegmentermobilefoodsegmenterv11mobile food segmentation model on tensorflow hubai

 download data
all nutrition5k data can be downloaded directly from our google cloud storage buckethttpsconsolecloudgooglecomstoragebrowsernutrition5kdataset or from the targz download link below
ul
 &#9; lia hrefhttpsstoragecloudgooglecomnutrition5kdatasetnutrition5kdatasettargznutrition5kdatasettargza 1814 gb
ul

from the cloud storage bucket directory you can also browse through the dataset folders and download specific files using the gsutil cp command

gsutil m cp r gsnutrition5kdatasetnutrition5kdatasetfileordirpath 


see herehttpscloudgooglecomstoragedocsgsutil for instructions on installing the gsutil tool

 examples

p aligncenter
 &#9; img srcresplate1jpg
 &#9; img srcresplate2jpg
 &#9; img srcresplate3jpg
 &#9; img srcresplate4jpg
 &#9; ibexample sideangle and overhead frames with nutrition labelsbi
p

 dish ingredient label
img srcresingredientstablepng width200px
img srcresexampleplatejpg width400px


p aligncenter
 &#9; img srcresincrementaljpg
 &#9; ibexample of the incremental scanning procedurebi
p



 dataset contents

 sideangle videos
video recordings were captured using 4 separate raspberry pi cameras labeled ad at alternating 30 degree and 60 degree viewing angles the cameras are positioned 90 degrees apart and sweep 90 degrees during video capture so that the dish is captured from all sides
video files are found in imagerysideangles and are organized by dish id to extract all 2d image frames from a video use ffmpeg as shown below

ffmpeg i inputmp4 output03djpeg


the models included in the nutrition5k paper were trained and evaluated on every fifth frame sampled from each video and we include two scripts to help with this scriptsextractframessh walks through each dishid directory extracts each frame from all four videos and outputs the frames to a newly created dishidframes directory scriptsextractframessampledsh accepts a command line argument to extract only every nth frame from each video


cp scriptsextractframessh imagerysideangles
cd imagerysideangles
sh extractframessh
sh extractframessampledsh 5


 overhead rgbd images
the imageryrealsenseoverhead directory contains rgb raw depth and colorized depth images organized by dish id raw depth images are encoded as 16bit integer images with depth units of 10000 ie 1 meter 10000 units the colorized depth images provide a humanreadable visualization of the depth map with closer objects in blue and further objects in red all depth values are rounded to a maximum of 04m 4000 depth units which exceeds the height of our food scanning rig

 ingredient metadata
the ingredient metadata csv metadataingredientmetadatacsv contains a list of all ingredients covered in the dataset ' s dishes their unique ids and pergram nutritional information sourced from the usda food and nutrient database ingredient ids take the following form ingringredient number padded to 10 digits

 dish metadata
the dish metadata csvs metadatadishmetadatacafe1csv and metadatadishmetadatacafe2csv contain all nutrition metadata at the dishlevel as well as peringredient mass and macronutrients for each dish id dish10 digit timestamp there is a csv entry containing the following fields 

idishid totalcalories totalmass totalfat totalcarb totalprotein numingrs ingr1id ingr1name ingr1grams ingr1calories ingr1fat ingr1carb ingr1protein i

with the last 8 fields are repeated for every ingredient present in the dish

 traintest splits
we include dish ids for the training and testing splits used in our experiments in the dishidssplits directory all incremental scans that compose a unique plate are held within the same split to avoid overlap between the train and test splits see section 36 of our paper for more details on incremental scanning

 evaluation script
to help evaluate nutrition prediction methods we provide scriptscomputeevalstatisticspy this script can be used to calculate absolute and percentage mean average error from a csv of perdish nutrition values this tool can be used to generate regression results that can be directly compared to those reported in our paper see the header file for usage instructions

 dataset bias disclaimer
the dataset does not cover all food cuisines as it was only collected in a few select cafeterias in california usa nutrition5k does not claim to completely solve the food understanding problem but rather aims to provide a unique level of detailed annotations and depth data to further advance the space

 license contact
we release all nutrition5k data under the a hrefhttpscreativecommonsorglicensesby40creative commons v40a license you are free to share and adapt this data for any purpose even commercially if you found this dataset useful please consider citing our cvpr 2021 paperhttpsarxivorgpdf210303375pdf

inproceedingsthames2021nutrition5k
 titlenutrition5k towards automatic nutritional understanding of generic food
 authorthames quin and karpur arjun and norris wade and xia fangting and panait liviu and weyand tobias and sim jack
 booktitleproceedings of the ieeecvf conference on computer vision and pattern recognition
 pages89038911
 year2021



if you have any questions about the nutrition5k dataset or paper please send an email to the authors at a hrefmailtonutrition5kgooglecomnutrition5kgooglecoma


thank you to ben goldberger caitlin o ' brien and the google laxplv cafeteria teams for their contributions",div aligncent nutrition5k comprehens nutrit dataset p aligncent &#9; img srcresexampleplatejpg width400px &#9; img srcresscangif width400px p p aligncent &#9; hrefhttpsarxivorgpdf210303375pdfbpaperba &#9; hrefdownloaddatabdownload databa &#9; hrefdatasetcontentsbdataset contentsba &#9; hreflicensecontactblicens contactba p div bnutrition5kb dataset visual nutrit data 5k realist plate food captur googl cafeteria use custom scan rig releas thi dataset alongsid recent hrefhttpsarxivorgabs210303375cvpr 2021 papera help promot research visual nutrit understand pleas see paper detail dataset followup experi key featur ul &#9; liscan data 5006 plate food contain &#9; &#9; ul &#9; &#9; &#9; li4 rotat sideangl videosli &#9; &#9; &#9; lioverhead rgbd imag iwhen availableili &#9; &#9; &#9; lifinegrain list ingredientsli &#9; &#9; &#9; liperingredi massli &#9; &#9; &#9; litot dish mass caloriesli &#9; &#9; &#9; lifat protein carbohydr macronutri massesli &#9; &#9; ulli &#9; lioffici traintest splitli &#9; linutrit regress eval scriptsli ul also see relat hrefhttpstfhubdevgoogleseefoodsegmentermobilefoodsegmenterv11mobil food segment model tensorflow hubai download data nutrition5k data download directli googl cloud storag buckethttpsconsolecloudgooglecomstoragebrowsernutrition5kdataset targz download link ul &#9; lia hrefhttpsstoragecloudgooglecomnutrition5kdatasetnutrition5kdatasettargznutrition5kdatasettargza 1814 gb ul cloud storag bucket directori also brows dataset folder download specif file use gsutil cp command gsutil cp r gsnutrition5kdatasetnutrition5kdatasetfileordirpath see herehttpscloudgooglecomstoragedocsgsutil instruct instal gsutil tool exampl p aligncent &#9; img srcresplate1jpg &#9; img srcresplate2jpg &#9; img srcresplate3jpg &#9; img srcresplate4jpg &#9; ibexampl sideangl overhead frame nutrit labelsbi p dish ingredi label img srcresingredientstablepng width200px img srcresexampleplatejpg width400px p aligncent &#9; img srcresincrementaljpg &#9; ibexampl increment scan procedurebi p dataset content sideangl video video record captur use 4 separ raspberri pi camera label ad altern 30 degre 60 degre view angl camera posit 90 degre apart sweep 90 degre dure video captur dish captur side video file found imagerysideangl organ dish id extract 2d imag frame video use ffmpeg shown ffmpeg inputmp4 output03djpeg model includ nutrition5k paper train evalu everi fifth frame sampl video includ two script help thi scriptsextractframessh walk dishid directori extract frame four video output frame newli creat dishidfram directori scriptsextractframessampledsh accept command line argument extract onli everi nth frame video cp scriptsextractframessh imagerysideangl cd imagerysideangl sh extractframessh sh extractframessampledsh 5 overhead rgbd imag imageryrealsenseoverhead directori contain rgb raw depth color depth imag organ dish id raw depth imag encod 16bit integ imag depth unit 10000 ie 1 meter 10000 unit color depth imag provid humanread visual depth map closer object blue object red depth valu round maximum 04m 4000 depth unit exce height food scan rig ingredi metadata ingredi metadata csv metadataingredientmetadatacsv contain list ingredi cover dataset ' dish uniqu id pergram nutrit inform sourc usda food nutrient databas ingredi id take follow form ingringredi number pad 10 digit dish metadata dish metadata csv metadatadishmetadatacafe1csv metadatadishmetadatacafe2csv contain nutrit metadata dishlevel well peringredi mass macronutri dish id dish10 digit timestamp csv entri contain follow field idishid totalcalori totalmass totalfat totalcarb totalprotein numingr ingr1id ingr1nam ingr1gram ingr1calori ingr1fat ingr1carb ingr1protein last 8 field repeat everi ingredi present dish traintest split includ dish id train test split use experi dishidssplit directori increment scan compos uniqu plate held within split avoid overlap train test split see section 36 paper detail increment scan evalu script help evalu nutrit predict method provid scriptscomputeevalstatisticspi thi script use calcul absolut percentag mean averag error csv perdish nutrit valu thi tool use gener regress result directli compar report paper see header file usag instruct dataset bia disclaim dataset doe cover food cuisin wa onli collect select cafeteria california usa nutrition5k doe claim complet solv food understand problem rather aim provid uniqu level detail annot depth data advanc space licens contact releas nutrition5k data hrefhttpscreativecommonsorglicensesby40cr common v40a licens free share adapt thi data ani purpos even commerci found thi dataset use pleas consid cite cvpr 2021 paperhttpsarxivorgpdf210303375pdf inproceedingsthames2021nutrition5k titlenutrition5k toward automat nutrit understand gener food authortham quin karpur arjun norri wade xia fangt panait liviu weyand tobia sim jack booktitleproceed ieeecvf confer comput vision pattern recognit pages89038911 year2021 ani question nutrition5k dataset paper pleas send email author hrefmailtonutrition5kgooglecomnutrition5kgooglecoma thank ben goldberg caitlin ' brien googl laxplv cafeteria team contribut,div aligncenter nutrition5k comprehensive nutrition dataset p aligncenter &#9; img srcresexampleplatejpg width400px &#9; img srcresscangif width400px p p aligncenter &#9; hrefhttpsarxivorgpdf210303375pdfbpaperba &#9; hrefdownloaddatabdownload databa &#9; hrefdatasetcontentsbdataset contentsba &#9; hreflicensecontactblicense contactba p div bnutrition5kb dataset visual nutritional data 5k realistic plate food captured google cafeteria using custom scanning rig releasing dataset alongside recent hrefhttpsarxivorgabs210303375cvpr 2021 papera help promote research visual nutrition understanding please see paper detail dataset followup experiment key feature ul &#9; liscans data 5006 plate food containing &#9; &#9; ul &#9; &#9; &#9; li4 rotating sideangle videosli &#9; &#9; &#9; lioverhead rgbd image iwhen availableili &#9; &#9; &#9; lifinegrained list ingredientsli &#9; &#9; &#9; liperingredient massli &#9; &#9; &#9; litotal dish mass caloriesli &#9; &#9; &#9; lifat protein carbohydrate macronutrient massesli &#9; &#9; ulli &#9; liofficial traintest splitli &#9; linutrition regression eval scriptsli ul also see related hrefhttpstfhubdevgoogleseefoodsegmentermobilefoodsegmenterv11mobile food segmentation model tensorflow hubai download data nutrition5k data downloaded directly google cloud storage buckethttpsconsolecloudgooglecomstoragebrowsernutrition5kdataset targz download link ul &#9; lia hrefhttpsstoragecloudgooglecomnutrition5kdatasetnutrition5kdatasettargznutrition5kdatasettargza 1814 gb ul cloud storage bucket directory also browse dataset folder download specific file using gsutil cp command gsutil cp r gsnutrition5kdatasetnutrition5kdatasetfileordirpath see herehttpscloudgooglecomstoragedocsgsutil instruction installing gsutil tool example p aligncenter &#9; img srcresplate1jpg &#9; img srcresplate2jpg &#9; img srcresplate3jpg &#9; img srcresplate4jpg &#9; ibexample sideangle overhead frame nutrition labelsbi p dish ingredient label img srcresingredientstablepng width200px img srcresexampleplatejpg width400px p aligncenter &#9; img srcresincrementaljpg &#9; ibexample incremental scanning procedurebi p dataset content sideangle video video recording captured using 4 separate raspberry pi camera labeled ad alternating 30 degree 60 degree viewing angle camera positioned 90 degree apart sweep 90 degree video capture dish captured side video file found imagerysideangles organized dish id extract 2d image frame video use ffmpeg shown ffmpeg inputmp4 output03djpeg model included nutrition5k paper trained evaluated every fifth frame sampled video include two script help scriptsextractframessh walk dishid directory extract frame four video output frame newly created dishidframes directory scriptsextractframessampledsh accepts command line argument extract every nth frame video cp scriptsextractframessh imagerysideangles cd imagerysideangles sh extractframessh sh extractframessampledsh 5 overhead rgbd image imageryrealsenseoverhead directory contains rgb raw depth colorized depth image organized dish id raw depth image encoded 16bit integer image depth unit 10000 ie 1 meter 10000 unit colorized depth image provide humanreadable visualization depth map closer object blue object red depth value rounded maximum 04m 4000 depth unit exceeds height food scanning rig ingredient metadata ingredient metadata csv metadataingredientmetadatacsv contains list ingredient covered dataset ' dish unique id pergram nutritional information sourced usda food nutrient database ingredient id take following form ingringredient number padded 10 digit dish metadata dish metadata csvs metadatadishmetadatacafe1csv metadatadishmetadatacafe2csv contain nutrition metadata dishlevel well peringredient mass macronutrients dish id dish10 digit timestamp csv entry containing following field idishid totalcalories totalmass totalfat totalcarb totalprotein numingrs ingr1id ingr1name ingr1grams ingr1calories ingr1fat ingr1carb ingr1protein last 8 field repeated every ingredient present dish traintest split include dish id training testing split used experiment dishidssplits directory incremental scan compose unique plate held within split avoid overlap train test split see section 36 paper detail incremental scanning evaluation script help evaluate nutrition prediction method provide scriptscomputeevalstatisticspy script used calculate absolute percentage mean average error csv perdish nutrition value tool used generate regression result directly compared reported paper see header file usage instruction dataset bias disclaimer dataset doe cover food cuisine wa collected select cafeteria california usa nutrition5k doe claim completely solve food understanding problem rather aim provide unique level detailed annotation depth data advance space license contact release nutrition5k data hrefhttpscreativecommonsorglicensesby40creative common v40a license free share adapt data purpose even commercially found dataset useful please consider citing cvpr 2021 paperhttpsarxivorgpdf210303375pdf inproceedingsthames2021nutrition5k titlenutrition5k towards automatic nutritional understanding generic food authorthames quin karpur arjun norris wade xia fangting panait liviu weyand tobias sim jack booktitleproceedings ieeecvf conference computer vision pattern recognition pages89038911 year2021 question nutrition5k dataset paper please send email author hrefmailtonutrition5kgooglecomnutrition5kgooglecoma thank ben goldberger caitlin ' brien google laxplv cafeteria team contribution
Dart,"# Flutter Food Store UI

## [Watch it on YouTube](https://youtu.be/eJatCOp4K6w)

In this video we will create two screens for ecommerce app using #flutter. In Home screen there will be items grid and category selector. In Details screen we display selected item details. We using #Hero widget to implement #animation.

#### [Design Credits](https://www.uplabs.com/posts/food-nutrition-app-challenge)

### Preview

![App UI](/preview.png)","flutter food store ui

 watch it on youtubehttpsyoutubeejatcop4k6w

in this video we will create two screens for ecommerce app using flutter in home screen there will be items grid and category selector in details screen we display selected item details we using hero widget to implement animation

 design creditshttpswwwuplabscompostsfoodnutritionappchallenge

 preview

app uipreviewpng",flutter food store ui watch youtubehttpsyoutubeejatcop4k6w thi video creat two screen ecommerc app use flutter home screen item grid categori selector detail screen display select item detail use hero widget implement anim design creditshttpswwwuplabscompostsfoodnutritionappchalleng preview app uipreviewpng,flutter food store ui watch youtubehttpsyoutubeejatcop4k6w video create two screen ecommerce app using flutter home screen item grid category selector detail screen display selected item detail using hero widget implement animation design creditshttpswwwuplabscompostsfoodnutritionappchallenge preview app uipreviewpng
PHP,"# kcal – the personal food nutrition journal

[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0)
[![CI Status](https://github.com/kcal-app/kcal/actions/workflows/ci.yml/badge.svg)](https://github.com/kcal-app/kcal/actions/workflows/ci.yml)
[![Coverage Status](https://coveralls.io/repos/github/kcal-app/kcal/badge.svg?branch=main)](https://coveralls.io/github/kcal-app/kcal?branch=main)

Track nutritional information about foods and recipes, set goals, and record a food
journal to help along the way. Kcal is a *personal* system that focuses on direct
control of inputs (as opposed to unwieldy user generated datasets) and a minimal,
easy to use recipe presentation for preparing meals.

## Demo

A [demo of kcal](http://demo.kcal.cooking) is available on Heroku. Login credentials are:

- Username: `kcal`
- Password: `kcal`

The demo instance resets every hour, on the hour.

## Screenshots

![kcal mobile screenshot](screenshots/mobile.png)
![kcal desktop screenshot](screenshots/desktop.png)

## Functionality

Kcal's primary functionality includes three main content categories -- journal,
recipes, and foods -- and two per-user configurations -- goals and meals. Users
can customize meals (up to eight per day) for meal planning, set multiple
goals for tracking calories and macros (fat, carbohydrates, protein), enter food
data with calories and macros, create recipes based on foods and other recipes,
and record foods and recipes in a journal tracked against goals.

### Foods

Foods are shared between all users.

Foods are the basis for recipes and calorie and macro calculations throughout the
app. They can be added directly to journal entries and included in recipes that
roll-up nutritional data per serving.

Food servings can be recorded using U.S. measure units (teaspoon, tablespoon, cup)
and use a weight basis of grams. These units and weights are commonly used in the
United States and required by law for most packaged foods. Kcal tries to make data
entry as easy as possible by organization field order and units to match nutritional
label configurations.

Food data does not (currently) make use of any API or service for retrieving
information about food. While this may change in the future, there are a couple
of reason this feature has been left out of kcal:

 - There is a very large volume of data in most food databases such that organizing,
   categorizing, and searching for the right food can be daunting.

 - Food databases that allow and include input from large groups of users can be
   inaccurate and counter-productive for users with calorie and/or macro goals.
   
 - Kcal's self-hostable nature is in part for privacy-conscious users so limiting
   interactions with third-party services is desirable (though adding APIs as an
   optional enhancement is not a major concern here).

Foods are taggable and tags can be used to filter and search for foods quickly.

![kcal foods edit and show screenshot](screenshots/foods.png)

### Recipes

Recipes are shared between all users. They (currently) cannot be shared externally,
but a feature enhancement to support optional, per-recipe public link creation is
planned.

Configurable recipe metadata includes servings, weight, volume, timing, image,
description, ingredients, and steps.

The recipe view is meant to be as uncluttered as possible, to support browser
""reader mode"", and to still provide nutritional metadata at a glance.

Recipes are taggable and tags can be used to filter and search for recipes quickly.

![kcal foods edit and show screenshot](screenshots/recipes.png)

### Journal entries

Journal entries are private. Each user has and can only see their own entries.

Planning and tracking calories and macros is the primary focus of journal entries.
The journal section aggregates this information by day and by meal.

Recipes and foods can be added to journal entries in various quantities and configurations
(depending on the associated serving data). Manual entries can also be used to record
data for foods and recipes *not* in the kcal's database.

Journal entries are not editable. The calorie and macro information for each entry is
recorded with the entry. This allows for recoding and maintaining journal entry
data even as foods and recipes are updated.

![kcal journal entries edit and show screenshot](screenshots/journal-entries.png)

### Goals

Goals are private. Each user can create and see only their own goals.

Goals reflect daily calories and macros and are therefore closely related to journal
entries.

Goals can be configured as ""default"" for specific days of the week but can also
be overridden for individual days in the journal section.

There is no limit to the number of goals a user can create.

![kcal goals edit and show screenshot](screenshots/goals.png)

### Meals

Meals are private. Each user can rename, arrange, and enable or disabled their
own meals.

Meals are used to aggregate data within a day in the journal section and can be
used for both meal planning and goal tracking.

There is a pre-configured maximum of eight meals for each user.

![kcal meals edit and show screenshot](screenshots/meals.png)

## Use cases

Kcal's primary focus is tracking nutrition (recipe management is the most important
secondary focus), so it should be a useful tool for anyone looking to implement a
specific diet. Below are some (very) broad diet types and information about how
kcal can be helpful. Kcal intentionally **does not** provide any specific dieting
guidance or recommend any particular diet or type of diet. Individual users are
expected to research and make their own plans and goals -- kcal is here to help
record and organize the data.

### Hypocaloric diets

Hypocaloric diets use [calorie restriction](https://en.wikipedia.org/wiki/Calorie_restriction)
for weight loss or other dietary management. Kcal users can create low calorie
(relative to personal regular calorie) intake goals and use the detailed nutritional
data of food and recipes and to plan meals and record caloric intake using journal
entries.

### Hypercaloric diets

Hypercaloric diets are used for weight gain and can be especially useful for building
muscle in weight training. Kcal users can create calorie goals that exceed expected
calorie burn on a day-to-day basis. For the weight training example users can create
a goal for training days and separate, lower goal for rest days. The goals can be
automated based on the day of the week and journal entries can be used to ensure
that a proper macro balance is maintained. More meals may also be helpful on a
hypercaloric diet and kcal supports up to eight meals per day.

### Plant based diets (vegetarian, vegan, etc.)

Diets that exclude animal-based products may require special attention to ensure
a proper balance of nutrients (particularly when transitioning). Kcal's goals and
food nutritional data can help to make sure that appropriate fat, carbohydrate,
and protein needs are met.

### Low-X diets

Any diet that focuses on lowering a particular nutrient can be trackable with kcal.
In addition to the macronutrients (fat, carbohydrates, and protein) foods support
cholesterol and sodium data as well. Support for other common nutrients like
saturated fats, trans fats, fiber, sugar, etc. may also be available in future
iterations.

## Deployment

Docker is the recommended deployment method. See [kcal-app/kcal-docker](https://github.com/kcal-app/kcal-docker).

General requirements for any deployment are:

 - PHP 8.x with Composer 2.x and PHP extensions: `bcmath`, `curl`, `gd`, `intl`,
   `mbstring`, `xml`, `zip`.
 - Web server/proxy (Apache, nginx, etc.)
 - Database (MySQL/MariaDB, PostgreSQL, etc.)

Optional but useful additions are:

 - [Search driver](#search-mag) (Algolia, Elasticsearch, and database supported)
 - Redis
 - [Media Storage](#media-storage) (local or AWS S3 supported)

### Docker

There is a [`Dockerfile`](Dockerfile) and automated build process to create builds
at [kcalapp/kcal](https://hub.docker.com/repository/docker/kcalapp/kcal) on Docker Hub.
See the [kcal-app/kcal-docker](https://github.com/kcal-app/kcal-docker) repository
for a Docker Compose based template and instructions.

### Heroku

[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)

The default username and password for a Heroku deployment is `kcal`/`kcal`.

#### Using Heroku CLI

For a manual deploy using Heroku CLI, execute the following after initial deployment:

    heroku run php artisan migrate
    heroku run php artisan user:add
    heroku config:set APP_KEY=$(php artisan --no-ansi key:generate --show)

#### Media storage

Heroku uses an ephemeral disk. In order to maintain recipe and/or user images between
app restarts AWS can be used. See [Media Storage - AWS S3](#aws-s3) for additional
guidance.

#### Search drivers

See the [Search](#search-mag) section for information about supported drivers. Additional
environment variable configuration is necessary when using any search driver other
than the default (""null"").

#### Redis Add-on

The [Heroku Redis](https://elements.heroku.com/addons/heroku-redis) add-on can be
added to the app and will work without any configuration changes. It is left out
of the default build only because it takes a very long time to provision.

### Manual

This deployment process has been tested with an Ubuntu 20.04 LTS instance with
2GB of memory which should be enough to host the app for a few regular users.
The memory is primarily needed for Elasticsearch -- See the [Search](#search-mag) 
section for other options if lower memory support is needed.

1. Add [PHP 8.x repository](https://launchpad.net/~ondrej/+archive/ubuntu/php).

       sudo apt-get install software-properties-common
       sudo add-apt-repository ppa:ondrej/php

1. Add [Elasticsearch 7.x repository](https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html).

       wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
       echo ""deb https://artifacts.elastic.co/packages/7.x/apt stable main"" | sudo tee /etc/apt/sources.list.d/elastic-7.x.list

1. Update available packages.

       sudo apt-get update

1. Install dependencies.

       sudo apt-get install elasticsearch mysql-server-8.0 nginx-full php8.0 php8.0-bcmath php8.0-cli php8.0-curl php8.0-gd php8.0-intl php8.0-mbstring php8.0-mysql php8.0-redis php8.0-xml php8.0-zip redis php8.0-fpm

1. Start Elasticsearch and configure to run at start up.

       sudo systemctl start elasticsearch
       sudo systemctl enable elasticsearch

1. Install Composer.

    :rotating_light: This command runs code from a remote location as root.
    See [Download Composer](https://getcomposer.org/download/) for alternative install options.

       curl -s https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin/ --filename=composer

1. Clone the app repository.

       cd /var/www
       sudo mkdir kcal
       sudo chown $USER:`id -gn $USER` kcal
       cd kcal
       git clone https://github.com/kcal-app/kcal.git .

1. Configure nginx to serve the app public files.

       sudo vim /etc/nginx/conf.d/kcal.conf
       <edit config, see example below>
       sudo service nginx restart

    Example config:

       server {
           listen 80;
           server_name kcal.example.com;
           root /var/www/kcal/public;
           
           add_header X-Frame-Options ""SAMEORIGIN"";
           add_header X-Content-Type-Options ""nosniff"";
           
           index index.php;
           
           charset utf-8;
           
           location / {
              try_files $uri $uri/ /index.php?$query_string;
           }
           
           location = /favicon.ico { access_log off; log_not_found off; }
           location = /robots.txt  { access_log off; log_not_found off; }
           
           error_page 404 /index.php;
           
           location ~ \.php$ {
              fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
              fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
              include fastcgi_params;
           }
           
           location ~ /\.(?!well-known).* {
              deny all;
           }
       }

1. Create database user.

       sudo mysql -u root
       CREATE DATABASE `kcal`;
       CREATE USER 'kcal'@'localhost' IDENTIFIED BY RANDOM PASSWORD;
       GRANT ALL ON `kcal`.* TO 'kcal'@'localhost';
       FLUSH PRIVILEGES;

    :lock: Save the generated password output by the `CREATE USER` statement.

1. Install dependencies and generate an app key to use in the next step.

       composer install --optimize-autoloader --no-dev
       php artisan --no-ansi key:generate --show

1. Copy environment config file and adjust as desired.

       cp .env.example .env

    At a minimum:
     - Set `APP_KEY` to the value generated in the previous step.
     - Set `APP_URL` to match the host configured in nginx configuration.
     - Set the `DATABASE_` values to the configured credentials.

1. Run initial app installation/bootstrap commands.

       php artisan migrate
       php artisan elastic:migrate
       php artisan config:cache
       php artisan route:cache
       php artisan view:cache
       php artisan user:add --admin

1. Allow web server to access required directories.

       sudo chown -R $USER:www-data {storage,public}
       sudo chmod g+s {storage,public}

1. Visit the `APP_URL` and log in!

## Configuration

### Media Storage

Recipes and users can have associated media (images) that by default are stored
on a local disk under the path `{app}/public/media`. If a local disk solution is
not feasible, an AWS S3 bucket can be used instead.

#### AWS S3

Use the general guidance below to create an AWS S3 bucket and IAM user for media
storage in AWS S3.

1. Create a bucket that allows objects to be configured with public access.

1. Create an IAM user with access to the bucket.

    Use this example policy to grant necessary permissions to a specific bucket:

       {
           ""Version"": ""2012-10-17"",
           ""Statement"": [
              {
                 ""Sid"": ""VisualEditor0"",
                 ""Effect"": ""Allow"",
                 ""Action"": [
                     ""s3:GetBucketPublicAccessBlock"",
                     ""s3:GetBucketPolicyStatus"",
                     ""s3:GetAccountPublicAccessBlock"",
                     ""s3:ListAllMyBuckets"",
                     ""s3:GetBucketAcl"",
                     ""s3:GetBucketLocation""
                 ],
                 ""Resource"": ""*""
              },
              {
                 ""Sid"": ""VisualEditor1"",
                 ""Effect"": ""Allow"",
                 ""Action"": ""s3:ListBucket"",
                 ""Resource"": ""arn:aws:s3:::REPLACE_WITH_S3_BUCKET_NAME""
              },
              {
                 ""Sid"": ""VisualEditor2"",
                 ""Effect"": ""Allow"",
                 ""Action"": [""s3:*Object"", ""s3:*ObjectAcl*""],
                 ""Resource"": ""arn:aws:s3:::REPLACE_WITH_S3_BUCKET_NAME/*""
              }
           ]
       }

1. Set necessary environment variables (via `.env` or some other mechanism).

       MEDIA_DISK=s3-public
       AWS_ACCESS_KEY_ID=REPLACE_WITH_IAM_KEY
       AWS_SECRET_ACCESS_KEY=REPLACE_WITH_IAM_SECRET
       AWS_DEFAULT_REGION=REPLACE_WITH_S3_BUCKET_NAME
       AWS_BUCKET=REPLACE_WITH_S3_BUCKET_REGION

### Search :mag:

The ""ingredient"" (food or recipe) search for journal entries and recipe ingredients
supports three different backends using the `SCOUT_DRIVER` environment variable.
In all cases, always ensure that the `SCOUT_DRIVER` environment variable is only
set once in kcal's `.env` file.

Currently, the food and recipe *list* searches do not take advantage of these
search drivers. Support for those searches will be added if the Laravel JSON:API
adds support for Scout (see: laravel-json-api/laravel#32).

### Algolia (`algolia`)

1. [Create and/or log in](https://www.algolia.com/users/sign_in) to an Algolia account.

1. Create an application for kcal.

1. Navigate to the application's ""API Keys"" section.

1. Using the **Application ID** and **Admin API Key** values, update kcal's `.env` file:

       SCOUT_DRIVER=algolia
       ALGOLIA_APP_ID=<APPLICATION_ID>
       ALGOLIA_SECRET=<ADMIN_API_KEY>

### ElasticSearch (`elastic`)

1. Determine the ElasticSearch service host and port.

1. Update kcal's `.env` file.

       SCOUT_DRIVER=elastic
       ELASTIC_HOST=<HOST:PORT>
       ELASTIC_PORT=<PORT>

   Note: The `ELASTIC_PORT` variable is a convenience option specifically for
   Docker Compose configurations and is not strictly required.
   
1. Run Elastic's migrations.

       php artisan elastic:migrate

### Fallback (`null`)

The fallback driver is a simple `WHERE ... LIKE` clause search on a couple of key
fields. Results will not be ordered by relevance, and some fields will not be
searched (e.g. the tags fields). Using one of the other options is highly recommended.

Set `SCOUT_DRIVER=null` in kcal's `.env` file to use the fallback driver.

## Development

### Laravel Sail

#### Prerequisites

- [Composer](https://getcomposer.org/download/)
- [Docker](https://docs.docker.com/get-docker/)
- [Docker compose](https://docs.docker.com/compose/install/)

#### Steps

1. Clone the repository.

       git clone https://github.com/kcal-app/kcal.git
       cd kcal

1. Install development dependencies.

       composer install

1. Create a local `.env` file.

       cp .env.local.example .env

1. Generate an app key.

       php artisan key:generate

    Verify that the `APP_KEY` variable has been set in `.env`. If has not, run
    `php artisan key:generate --show` and copy the key and append it to the
    `APP_KEY=` line manually.

1. Run it! :sailboat:

       vendor/bin/sail up

1. (On first run) Run migrations.

       vendor/bin/sail artisan migrate
       vendor/bin/sail artisan elastic:migrate

1. (On first run) Seed the database.

       vendor/bin/sail artisan db:seed

    The default username and password is `kcal` / `kcal`.

Navigate to [http://127.0.0.1:8080](http://127.0.0.1:8080) to log in!

Create a `docker-compose.override.yml` file to override any of the default settings
provided for this environment.

### Custom console commands

#### `dev:cache-clear`

Executes the various cache clearing artisan commands:

- `cache:clear`
- `config:clear`
- `route:clear`
- `view:clear`

#### `dev:reset`

Resets and seeds the database by executing the following artisan commands:

- `db:wipe`
- `migrate`
- `db:seed`

### Testing

Ensure that Sail is running (primarily to provide ElasticSearch):

    vendor/bin/sail up -d

Execute tests.

    vendor/bin/sail artisan dev:cache-clear
    vendor/bin/sail artisan test --parallel --recreate-databases
","kcal the personal food nutrition journal

license mpl 20httpsimgshieldsiobadgelicensempl2020brightgreensvghttpsopensourceorglicensesmpl20
ci statushttpsgithubcomkcalappkcalactionsworkflowsciymlbadgesvghttpsgithubcomkcalappkcalactionsworkflowsciyml
coverage statushttpscoverallsioreposgithubkcalappkcalbadgesvgbranchmainhttpscoverallsiogithubkcalappkcalbranchmain

track nutritional information about foods and recipes set goals and record a food
journal to help along the way kcal is a personal system that focuses on direct
control of inputs as opposed to unwieldy user generated datasets and a minimal
easy to use recipe presentation for preparing meals

 demo

a demo of kcalhttpdemokcalcooking is available on heroku login credentials are

 username kcal
 password kcal

the demo instance resets every hour on the hour

 screenshots

kcal mobile screenshotscreenshotsmobilepng
kcal desktop screenshotscreenshotsdesktoppng

 functionality

kcal ' s primary functionality includes three main content categories journal
recipes and foods and two peruser configurations goals and meals users
can customize meals up to eight per day for meal planning set multiple
goals for tracking calories and macros fat carbohydrates protein enter food
data with calories and macros create recipes based on foods and other recipes
and record foods and recipes in a journal tracked against goals

 foods

foods are shared between all users

foods are the basis for recipes and calorie and macro calculations throughout the
app they can be added directly to journal entries and included in recipes that
rollup nutritional data per serving

food servings can be recorded using us measure units teaspoon tablespoon cup
and use a weight basis of grams these units and weights are commonly used in the
united states and required by law for most packaged foods kcal tries to make data
entry as easy as possible by organization field order and units to match nutritional
label configurations

food data does not currently make use of any api or service for retrieving
information about food while this may change in the future there are a couple
of reason this feature has been left out of kcal

 there is a very large volume of data in most food databases such that organizing
 categorizing and searching for the right food can be daunting

 food databases that allow and include input from large groups of users can be
 inaccurate and counterproductive for users with calorie andor macro goals
 
 kcal ' s selfhostable nature is in part for privacyconscious users so limiting
 interactions with thirdparty services is desirable though adding apis as an
 optional enhancement is not a major concern here

foods are taggable and tags can be used to filter and search for foods quickly

kcal foods edit and show screenshotscreenshotsfoodspng

 recipes

recipes are shared between all users they currently cannot be shared externally
but a feature enhancement to support optional perrecipe public link creation is
planned

configurable recipe metadata includes servings weight volume timing image
description ingredients and steps

the recipe view is meant to be as uncluttered as possible to support browser
reader mode and to still provide nutritional metadata at a glance

recipes are taggable and tags can be used to filter and search for recipes quickly

kcal foods edit and show screenshotscreenshotsrecipespng

 journal entries

journal entries are private each user has and can only see their own entries

planning and tracking calories and macros is the primary focus of journal entries
the journal section aggregates this information by day and by meal

recipes and foods can be added to journal entries in various quantities and configurations
depending on the associated serving data manual entries can also be used to record
data for foods and recipes not in the kcal ' s database

journal entries are not editable the calorie and macro information for each entry is
recorded with the entry this allows for recoding and maintaining journal entry
data even as foods and recipes are updated

kcal journal entries edit and show screenshotscreenshotsjournalentriespng

 goals

goals are private each user can create and see only their own goals

goals reflect daily calories and macros and are therefore closely related to journal
entries

goals can be configured as default for specific days of the week but can also
be overridden for individual days in the journal section

there is no limit to the number of goals a user can create

kcal goals edit and show screenshotscreenshotsgoalspng

 meals

meals are private each user can rename arrange and enable or disabled their
own meals

meals are used to aggregate data within a day in the journal section and can be
used for both meal planning and goal tracking

there is a preconfigured maximum of eight meals for each user

kcal meals edit and show screenshotscreenshotsmealspng

 use cases

kcal ' s primary focus is tracking nutrition recipe management is the most important
secondary focus so it should be a useful tool for anyone looking to implement a
specific diet below are some very broad diet types and information about how
kcal can be helpful kcal intentionally does not provide any specific dieting
guidance or recommend any particular diet or type of diet individual users are
expected to research and make their own plans and goals kcal is here to help
record and organize the data

 hypocaloric diets

hypocaloric diets use calorie restrictionhttpsenwikipediaorgwikicalorierestriction
for weight loss or other dietary management kcal users can create low calorie
relative to personal regular calorie intake goals and use the detailed nutritional
data of food and recipes and to plan meals and record caloric intake using journal
entries

 hypercaloric diets

hypercaloric diets are used for weight gain and can be especially useful for building
muscle in weight training kcal users can create calorie goals that exceed expected
calorie burn on a daytoday basis for the weight training example users can create
a goal for training days and separate lower goal for rest days the goals can be
automated based on the day of the week and journal entries can be used to ensure
that a proper macro balance is maintained more meals may also be helpful on a
hypercaloric diet and kcal supports up to eight meals per day

 plant based diets vegetarian vegan etc

diets that exclude animalbased products may require special attention to ensure
a proper balance of nutrients particularly when transitioning kcal ' s goals and
food nutritional data can help to make sure that appropriate fat carbohydrate
and protein needs are met

 lowx diets

any diet that focuses on lowering a particular nutrient can be trackable with kcal
in addition to the macronutrients fat carbohydrates and protein foods support
cholesterol and sodium data as well support for other common nutrients like
saturated fats trans fats fiber sugar etc may also be available in future
iterations

 deployment

docker is the recommended deployment method see kcalappkcaldockerhttpsgithubcomkcalappkcaldocker

general requirements for any deployment are

 php 8x with composer 2x and php extensions bcmath curl gd intl
 mbstring xml zip
 web serverproxy apache nginx etc
 database mysqlmariadb postgresql etc

optional but useful additions are

 search driversearchmag algolia elasticsearch and database supported
 redis
 media storagemediastorage local or aws s3 supported

 docker

there is a dockerfiledockerfile and automated build process to create builds
at kcalappkcalhttpshubdockercomrepositorydockerkcalappkcal on docker hub
see the kcalappkcaldockerhttpsgithubcomkcalappkcaldocker repository
for a docker compose based template and instructions

 heroku

deployhttpswwwherokucdncomdeploybuttonsvghttpsherokucomdeploy

the default username and password for a heroku deployment is kcalkcal

 using heroku cli

for a manual deploy using heroku cli execute the following after initial deployment

 heroku run php artisan migrate
 heroku run php artisan useradd
 heroku configset appkeyphp artisan noansi keygenerate show

 media storage

heroku uses an ephemeral disk in order to maintain recipe andor user images between
app restarts aws can be used see media storage aws s3awss3 for additional
guidance

 search drivers

see the searchsearchmag section for information about supported drivers additional
environment variable configuration is necessary when using any search driver other
than the default null

 redis addon

the heroku redishttpselementsherokucomaddonsherokuredis addon can be
added to the app and will work without any configuration changes it is left out
of the default build only because it takes a very long time to provision

 manual

this deployment process has been tested with an ubuntu 2004 lts instance with
2gb of memory which should be enough to host the app for a few regular users
the memory is primarily needed for elasticsearch see the searchsearchmag 
section for other options if lower memory support is needed

1 add php 8x repositoryhttpslaunchpadnetondrejarchiveubuntuphp

 sudo aptget install softwarepropertiescommon
 sudo addaptrepository ppaondrejphp

1 add elasticsearch 7x repositoryhttpswwwelasticcoguideenelasticsearchreferencecurrentdebhtml

 wget qo httpsartifactselasticcogpgkeyelasticsearch sudo aptkey add 
 echo deb httpsartifactselasticcopackages7xapt stable main sudo tee etcaptsourceslistdelastic7xlist

1 update available packages

 sudo aptget update

1 install dependencies

 sudo aptget install elasticsearch mysqlserver80 nginxfull php80 php80bcmath php80cli php80curl php80gd php80intl php80mbstring php80mysql php80redis php80xml php80zip redis php80fpm

1 start elasticsearch and configure to run at start up

 sudo systemctl start elasticsearch
 sudo systemctl enable elasticsearch

1 install composer

 rotatinglight this command runs code from a remote location as root
 see download composerhttpsgetcomposerorgdownload for alternative install options

 curl s httpsgetcomposerorginstaller sudo php installdirusrlocalbin filenamecomposer

1 clone the app repository

 cd varwww
 sudo mkdir kcal
 sudo chown userid gn user kcal
 cd kcal
 git clone httpsgithubcomkcalappkcalgit 

1 configure nginx to serve the app public files

 sudo vim etcnginxconfdkcalconf
 edit config see example below
 sudo service nginx restart

 example config

 server 
 listen 80
 servername kcalexamplecom
 root varwwwkcalpublic
 
 addheader xframeoptions sameorigin
 addheader xcontenttypeoptions nosniff
 
 index indexphp
 
 charset utf8
 
 location 
 tryfiles uri uri indexphpquerystring
 
 
 location faviconico accesslog off lognotfound off 
 location robotstxt accesslog off lognotfound off 
 
 errorpage 404 indexphp
 
 location php 
 fastcgipass unixvarrunphpphp80fpmsock
 fastcgiparam scriptfilename realpathrootfastcgiscriptname
 include fastcgiparams
 
 
 location wellknown 
 deny all
 
 

1 create database user

 sudo mysql u root
 create database kcal
 create user ' kcal ' ' localhost ' identified by random password
 grant all on kcal to ' kcal ' ' localhost ' 
 flush privileges

 lock save the generated password output by the create user statement

1 install dependencies and generate an app key to use in the next step

 composer install optimizeautoloader nodev
 php artisan noansi keygenerate show

1 copy environment config file and adjust as desired

 cp envexample env

 at a minimum
 set appkey to the value generated in the previous step
 set appurl to match the host configured in nginx configuration
 set the database values to the configured credentials

1 run initial app installationbootstrap commands

 php artisan migrate
 php artisan elasticmigrate
 php artisan configcache
 php artisan routecache
 php artisan viewcache
 php artisan useradd admin

1 allow web server to access required directories

 sudo chown r userwwwdata storagepublic
 sudo chmod gs storagepublic

1 visit the appurl and log in

 configuration

 media storage

recipes and users can have associated media images that by default are stored
on a local disk under the path apppublicmedia if a local disk solution is
not feasible an aws s3 bucket can be used instead

 aws s3

use the general guidance below to create an aws s3 bucket and iam user for media
storage in aws s3

1 create a bucket that allows objects to be configured with public access

1 create an iam user with access to the bucket

 use this example policy to grant necessary permissions to a specific bucket

 
 version 20121017
 statement 
 
 sid visualeditor0
 effect allow
 action 
 s3getbucketpublicaccessblock
 s3getbucketpolicystatus
 s3getaccountpublicaccessblock
 s3listallmybuckets
 s3getbucketacl
 s3getbucketlocation
 
 resource 
 
 
 sid visualeditor1
 effect allow
 action s3listbucket
 resource arnawss3replacewiths3bucketname
 
 
 sid visualeditor2
 effect allow
 action s3object s3objectacl
 resource arnawss3replacewiths3bucketname
 
 
 

1 set necessary environment variables via env or some other mechanism

 mediadisks3public
 awsaccesskeyidreplacewithiamkey
 awssecretaccesskeyreplacewithiamsecret
 awsdefaultregionreplacewiths3bucketname
 awsbucketreplacewiths3bucketregion

 search mag

the ingredient food or recipe search for journal entries and recipe ingredients
supports three different backends using the scoutdriver environment variable
in all cases always ensure that the scoutdriver environment variable is only
set once in kcal ' s env file

currently the food and recipe list searches do not take advantage of these
search drivers support for those searches will be added if the laravel jsonapi
adds support for scout see laraveljsonapilaravel32

 algolia algolia

1 create andor log inhttpswwwalgoliacomuserssignin to an algolia account

1 create an application for kcal

1 navigate to the application ' s api keys section

1 using the application id and admin api key values update kcal ' s env file

 scoutdriveralgolia
 algoliaappidapplicationid
 algoliasecretadminapikey

 elasticsearch elastic

1 determine the elasticsearch service host and port

1 update kcal ' s env file

 scoutdriverelastic
 elastichosthostport
 elasticportport

 note the elasticport variable is a convenience option specifically for
 docker compose configurations and is not strictly required
 
1 run elastic ' s migrations

 php artisan elasticmigrate

 fallback null

the fallback driver is a simple where like clause search on a couple of key
fields results will not be ordered by relevance and some fields will not be
searched eg the tags fields using one of the other options is highly recommended

set scoutdrivernull in kcal ' s env file to use the fallback driver

 development

 laravel sail

 prerequisites

 composerhttpsgetcomposerorgdownload
 dockerhttpsdocsdockercomgetdocker
 docker composehttpsdocsdockercomcomposeinstall

 steps

1 clone the repository

 git clone httpsgithubcomkcalappkcalgit
 cd kcal

1 install development dependencies

 composer install

1 create a local env file

 cp envlocalexample env

1 generate an app key

 php artisan keygenerate

 verify that the appkey variable has been set in env if has not run
 php artisan keygenerate show and copy the key and append it to the
 appkey line manually

1 run it sailboat

 vendorbinsail up

1 on first run run migrations

 vendorbinsail artisan migrate
 vendorbinsail artisan elasticmigrate

1 on first run seed the database

 vendorbinsail artisan dbseed

 the default username and password is kcal kcal

navigate to http1270018080http1270018080 to log in

create a dockercomposeoverrideyml file to override any of the default settings
provided for this environment

 custom console commands

 devcacheclear

executes the various cache clearing artisan commands

 cacheclear
 configclear
 routeclear
 viewclear

 devreset

resets and seeds the database by executing the following artisan commands

 dbwipe
 migrate
 dbseed

 testing

ensure that sail is running primarily to provide elasticsearch

 vendorbinsail up d

execute tests

 vendorbinsail artisan devcacheclear
 vendorbinsail artisan test parallel recreatedatabases",kcal person food nutrit journal licens mpl 20httpsimgshieldsiobadgelicensempl2020brightgreensvghttpsopensourceorglicensesmpl20 ci statushttpsgithubcomkcalappkcalactionsworkflowsciymlbadgesvghttpsgithubcomkcalappkcalactionsworkflowsciyml coverag statushttpscoverallsioreposgithubkcalappkcalbadgesvgbranchmainhttpscoverallsiogithubkcalappkcalbranchmain track nutrit inform food recip set goal record food journal help along way kcal person system focus direct control input oppos unwieldi user gener dataset minim easi use recip present prepar meal demo demo kcalhttpdemokcalcook avail heroku login credenti usernam kcal password kcal demo instanc reset everi hour hour screenshot kcal mobil screenshotscreenshotsmobilepng kcal desktop screenshotscreenshotsdesktoppng function kcal ' primari function includ three main content categori journal recip food two perus configur goal meal user custom meal eight per day meal plan set multipl goal track calori macro fat carbohydr protein enter food data calori macro creat recip base food recip record food recip journal track goal food food share user food basi recip calori macro calcul throughout app ad directli journal entri includ recip rollup nutrit data per serv food serv record use us measur unit teaspoon tablespoon cup use weight basi gram unit weight commonli use unit state requir law packag food kcal tri make data entri easi possibl organ field order unit match nutrit label configur food data doe current make use ani api servic retriev inform food thi may chang futur coupl reason thi featur ha left kcal veri larg volum data food databas organ categor search right food daunt food databas allow includ input larg group user inaccur counterproduct user calori andor macro goal kcal ' selfhost natur part privacyconsci user limit interact thirdparti servic desir though ad api option enhanc major concern food taggabl tag use filter search food quickli kcal food edit show screenshotscreenshotsfoodspng recip recip share user current cannot share extern featur enhanc support option perrecip public link creation plan configur recip metadata includ serv weight volum time imag descript ingredi step recip view meant unclutt possibl support browser reader mode still provid nutrit metadata glanc recip taggabl tag use filter search recip quickli kcal food edit show screenshotscreenshotsrecipespng journal entri journal entri privat user ha onli see entri plan track calori macro primari focu journal entri journal section aggreg thi inform day meal recip food ad journal entri variou quantiti configur depend associ serv data manual entri also use record data food recip kcal ' databas journal entri edit calori macro inform entri record entri thi allow recod maintain journal entri data even food recip updat kcal journal entri edit show screenshotscreenshotsjournalentriespng goal goal privat user creat see onli goal goal reflect daili calori macro therefor close relat journal entri goal configur default specif day week also overridden individu day journal section limit number goal user creat kcal goal edit show screenshotscreenshotsgoalspng meal meal privat user renam arrang enabl disabl meal meal use aggreg data within day journal section use meal plan goal track preconfigur maximum eight meal user kcal meal edit show screenshotscreenshotsmealspng use case kcal ' primari focu track nutrit recip manag import secondari focu use tool anyon look implement specif diet veri broad diet type inform kcal help kcal intent doe provid ani specif diet guidanc recommend ani particular diet type diet individu user expect research make plan goal kcal help record organ data hypocalor diet hypocalor diet use calori restrictionhttpsenwikipediaorgwikicalorierestrict weight loss dietari manag kcal user creat low calori rel person regular calori intak goal use detail nutrit data food recip plan meal record calor intak use journal entri hypercalor diet hypercalor diet use weight gain especi use build muscl weight train kcal user creat calori goal exceed expect calori burn daytoday basi weight train exampl user creat goal train day separ lower goal rest day goal autom base day week journal entri use ensur proper macro balanc maintain meal may also help hypercalor diet kcal support eight meal per day plant base diet vegetarian vegan etc diet exclud animalbas product may requir special attent ensur proper balanc nutrient particularli transit kcal ' goal food nutrit data help make sure appropri fat carbohydr protein need met lowx diet ani diet focus lower particular nutrient trackabl kcal addit macronutri fat carbohydr protein food support cholesterol sodium data well support common nutrient like satur fat tran fat fiber sugar etc may also avail futur iter deploy docker recommend deploy method see kcalappkcaldockerhttpsgithubcomkcalappkcaldock gener requir ani deploy php 8x compos 2x php extens bcmath curl gd intl mbstring xml zip web serverproxi apach nginx etc databas mysqlmariadb postgresql etc option use addit search driversearchmag algolia elasticsearch databas support redi media storagemediastorag local aw s3 support docker dockerfiledockerfil autom build process creat build kcalappkcalhttpshubdockercomrepositorydockerkcalappkc docker hub see kcalappkcaldockerhttpsgithubcomkcalappkcaldock repositori docker compos base templat instruct heroku deployhttpswwwherokucdncomdeploybuttonsvghttpsherokucomdeploy default usernam password heroku deploy kcalkcal use heroku cli manual deploy use heroku cli execut follow initi deploy heroku run php artisan migrat heroku run php artisan useradd heroku configset appkeyphp artisan noansi keygener show media storag heroku use ephemer disk order maintain recip andor user imag app restart aw use see media storag aw s3awss3 addit guidanc search driver see searchsearchmag section inform support driver addit environ variabl configur necessari use ani search driver default null redi addon heroku redishttpselementsherokucomaddonsherokuredi addon ad app work without ani configur chang left default build onli becaus take veri long time provis manual thi deploy process ha test ubuntu 2004 lt instanc 2gb memori enough host app regular user memori primarili need elasticsearch see searchsearchmag section option lower memori support need 1 add php 8x repositoryhttpslaunchpadnetondrejarchiveubuntuphp sudo aptget instal softwarepropertiescommon sudo addaptrepositori ppaondrejphp 1 add elasticsearch 7x repositoryhttpswwwelasticcoguideenelasticsearchreferencecurrentdebhtml wget qo httpsartifactselasticcogpgkeyelasticsearch sudo aptkey add echo deb httpsartifactselasticcopackages7xapt stabl main sudo tee etcaptsourceslistdelastic7xlist 1 updat avail packag sudo aptget updat 1 instal depend sudo aptget instal elasticsearch mysqlserver80 nginxful php80 php80bcmath php80cli php80curl php80gd php80intl php80mbstring php80mysql php80redi php80xml php80zip redi php80fpm 1 start elasticsearch configur run start sudo systemctl start elasticsearch sudo systemctl enabl elasticsearch 1 instal compos rotatinglight thi command run code remot locat root see download composerhttpsgetcomposerorgdownload altern instal option curl httpsgetcomposerorginstal sudo php installdirusrlocalbin filenamecompos 1 clone app repositori cd varwww sudo mkdir kcal sudo chown userid gn user kcal cd kcal git clone httpsgithubcomkcalappkcalgit 1 configur nginx serv app public file sudo vim etcnginxconfdkcalconf edit config see exampl sudo servic nginx restart exampl config server listen 80 servernam kcalexamplecom root varwwwkcalpubl addhead xframeopt sameorigin addhead xcontenttypeopt nosniff index indexphp charset utf8 locat tryfil uri uri indexphpquerystr locat faviconico accesslog lognotfound locat robotstxt accesslog lognotfound errorpag 404 indexphp locat php fastcgipass unixvarrunphpphp80fpmsock fastcgiparam scriptfilenam realpathrootfastcgiscriptnam includ fastcgiparam locat wellknown deni 1 creat databas user sudo mysql u root creat databas kcal creat user ' kcal ' ' localhost ' identifi random password grant kcal ' kcal ' ' localhost ' flush privileg lock save gener password output creat user statement 1 instal depend gener app key use next step compos instal optimizeautoload nodev php artisan noansi keygener show 1 copi environ config file adjust desir cp envexampl env minimum set appkey valu gener previou step set appurl match host configur nginx configur set databas valu configur credenti 1 run initi app installationbootstrap command php artisan migrat php artisan elasticmigr php artisan configcach php artisan routecach php artisan viewcach php artisan useradd admin 1 allow web server access requir directori sudo chown r userwwwdata storagepubl sudo chmod gs storagepubl 1 visit appurl log configur media storag recip user associ media imag default store local disk path apppublicmedia local disk solut feasibl aw s3 bucket use instead aw s3 use gener guidanc creat aw s3 bucket iam user media storag aw s3 1 creat bucket allow object configur public access 1 creat iam user access bucket use thi exampl polici grant necessari permiss specif bucket version 20121017 statement sid visualeditor0 effect allow action s3getbucketpublicaccessblock s3getbucketpolicystatu s3getaccountpublicaccessblock s3listallmybucket s3getbucketacl s3getbucketloc resourc sid visualeditor1 effect allow action s3listbucket resourc arnawss3replacewiths3bucketnam sid visualeditor2 effect allow action s3object s3objectacl resourc arnawss3replacewiths3bucketnam 1 set necessari environ variabl via env mechan mediadisks3publ awsaccesskeyidreplacewithiamkey awssecretaccesskeyreplacewithiamsecret awsdefaultregionreplacewiths3bucketnam awsbucketreplacewiths3bucketregion search mag ingredi food recip search journal entri recip ingredi support three differ backend use scoutdriv environ variabl case alway ensur scoutdriv environ variabl onli set onc kcal ' env file current food recip list search take advantag search driver support search ad laravel jsonapi add support scout see laraveljsonapilaravel32 algolia algolia 1 creat andor log inhttpswwwalgoliacomuserssignin algolia account 1 creat applic kcal 1 navig applic ' api key section 1 use applic id admin api key valu updat kcal ' env file scoutdriveralgolia algoliaappidapplicationid algoliasecretadminapikey elasticsearch elast 1 determin elasticsearch servic host port 1 updat kcal ' env file scoutdriverelast elastichosthostport elasticportport note elasticport variabl conveni option specif docker compos configur strictli requir 1 run elast ' migrat php artisan elasticmigr fallback null fallback driver simpl like claus search coupl key field result order relev field search eg tag field use one option highli recommend set scoutdrivernul kcal ' env file use fallback driver develop laravel sail prerequisit composerhttpsgetcomposerorgdownload dockerhttpsdocsdockercomgetdock docker composehttpsdocsdockercomcomposeinstal step 1 clone repositori git clone httpsgithubcomkcalappkcalgit cd kcal 1 instal develop depend compos instal 1 creat local env file cp envlocalexampl env 1 gener app key php artisan keygener verifi appkey variabl ha set env ha run php artisan keygener show copi key append appkey line manual 1 run sailboat vendorbinsail 1 first run run migrat vendorbinsail artisan migrat vendorbinsail artisan elasticmigr 1 first run seed databas vendorbinsail artisan dbseed default usernam password kcal kcal navig http1270018080http1270018080 log creat dockercomposeoverrideyml file overrid ani default set provid thi environ custom consol command devcacheclear execut variou cach clear artisan command cacheclear configclear routeclear viewclear devreset reset seed databas execut follow artisan command dbwipe migrat dbseed test ensur sail run primarili provid elasticsearch vendorbinsail execut test vendorbinsail artisan devcacheclear vendorbinsail artisan test parallel recreatedatabas,kcal personal food nutrition journal license mpl 20httpsimgshieldsiobadgelicensempl2020brightgreensvghttpsopensourceorglicensesmpl20 ci statushttpsgithubcomkcalappkcalactionsworkflowsciymlbadgesvghttpsgithubcomkcalappkcalactionsworkflowsciyml coverage statushttpscoverallsioreposgithubkcalappkcalbadgesvgbranchmainhttpscoverallsiogithubkcalappkcalbranchmain track nutritional information food recipe set goal record food journal help along way kcal personal system focus direct control input opposed unwieldy user generated datasets minimal easy use recipe presentation preparing meal demo demo kcalhttpdemokcalcooking available heroku login credential username kcal password kcal demo instance reset every hour hour screenshots kcal mobile screenshotscreenshotsmobilepng kcal desktop screenshotscreenshotsdesktoppng functionality kcal ' primary functionality includes three main content category journal recipe food two peruser configuration goal meal user customize meal eight per day meal planning set multiple goal tracking calorie macro fat carbohydrate protein enter food data calorie macro create recipe based food recipe record food recipe journal tracked goal food food shared user food basis recipe calorie macro calculation throughout app added directly journal entry included recipe rollup nutritional data per serving food serving recorded using u measure unit teaspoon tablespoon cup use weight basis gram unit weight commonly used united state required law packaged food kcal try make data entry easy possible organization field order unit match nutritional label configuration food data doe currently make use api service retrieving information food may change future couple reason feature ha left kcal large volume data food database organizing categorizing searching right food daunting food database allow include input large group user inaccurate counterproductive user calorie andor macro goal kcal ' selfhostable nature part privacyconscious user limiting interaction thirdparty service desirable though adding apis optional enhancement major concern food taggable tag used filter search food quickly kcal food edit show screenshotscreenshotsfoodspng recipe recipe shared user currently cannot shared externally feature enhancement support optional perrecipe public link creation planned configurable recipe metadata includes serving weight volume timing image description ingredient step recipe view meant uncluttered possible support browser reader mode still provide nutritional metadata glance recipe taggable tag used filter search recipe quickly kcal food edit show screenshotscreenshotsrecipespng journal entry journal entry private user ha see entry planning tracking calorie macro primary focus journal entry journal section aggregate information day meal recipe food added journal entry various quantity configuration depending associated serving data manual entry also used record data food recipe kcal ' database journal entry editable calorie macro information entry recorded entry allows recoding maintaining journal entry data even food recipe updated kcal journal entry edit show screenshotscreenshotsjournalentriespng goal goal private user create see goal goal reflect daily calorie macro therefore closely related journal entry goal configured default specific day week also overridden individual day journal section limit number goal user create kcal goal edit show screenshotscreenshotsgoalspng meal meal private user rename arrange enable disabled meal meal used aggregate data within day journal section used meal planning goal tracking preconfigured maximum eight meal user kcal meal edit show screenshotscreenshotsmealspng use case kcal ' primary focus tracking nutrition recipe management important secondary focus useful tool anyone looking implement specific diet broad diet type information kcal helpful kcal intentionally doe provide specific dieting guidance recommend particular diet type diet individual user expected research make plan goal kcal help record organize data hypocaloric diet hypocaloric diet use calorie restrictionhttpsenwikipediaorgwikicalorierestriction weight loss dietary management kcal user create low calorie relative personal regular calorie intake goal use detailed nutritional data food recipe plan meal record caloric intake using journal entry hypercaloric diet hypercaloric diet used weight gain especially useful building muscle weight training kcal user create calorie goal exceed expected calorie burn daytoday basis weight training example user create goal training day separate lower goal rest day goal automated based day week journal entry used ensure proper macro balance maintained meal may also helpful hypercaloric diet kcal support eight meal per day plant based diet vegetarian vegan etc diet exclude animalbased product may require special attention ensure proper balance nutrient particularly transitioning kcal ' goal food nutritional data help make sure appropriate fat carbohydrate protein need met lowx diet diet focus lowering particular nutrient trackable kcal addition macronutrients fat carbohydrate protein food support cholesterol sodium data well support common nutrient like saturated fat trans fat fiber sugar etc may also available future iteration deployment docker recommended deployment method see kcalappkcaldockerhttpsgithubcomkcalappkcaldocker general requirement deployment php 8x composer 2x php extension bcmath curl gd intl mbstring xml zip web serverproxy apache nginx etc database mysqlmariadb postgresql etc optional useful addition search driversearchmag algolia elasticsearch database supported redis medium storagemediastorage local aws s3 supported docker dockerfiledockerfile automated build process create build kcalappkcalhttpshubdockercomrepositorydockerkcalappkcal docker hub see kcalappkcaldockerhttpsgithubcomkcalappkcaldocker repository docker compose based template instruction heroku deployhttpswwwherokucdncomdeploybuttonsvghttpsherokucomdeploy default username password heroku deployment kcalkcal using heroku cli manual deploy using heroku cli execute following initial deployment heroku run php artisan migrate heroku run php artisan useradd heroku configset appkeyphp artisan noansi keygenerate show medium storage heroku us ephemeral disk order maintain recipe andor user image app restarts aws used see medium storage aws s3awss3 additional guidance search driver see searchsearchmag section information supported driver additional environment variable configuration necessary using search driver default null redis addon heroku redishttpselementsherokucomaddonsherokuredis addon added app work without configuration change left default build take long time provision manual deployment process ha tested ubuntu 2004 lts instance 2gb memory enough host app regular user memory primarily needed elasticsearch see searchsearchmag section option lower memory support needed 1 add php 8x repositoryhttpslaunchpadnetondrejarchiveubuntuphp sudo aptget install softwarepropertiescommon sudo addaptrepository ppaondrejphp 1 add elasticsearch 7x repositoryhttpswwwelasticcoguideenelasticsearchreferencecurrentdebhtml wget qo httpsartifactselasticcogpgkeyelasticsearch sudo aptkey add echo deb httpsartifactselasticcopackages7xapt stable main sudo tee etcaptsourceslistdelastic7xlist 1 update available package sudo aptget update 1 install dependency sudo aptget install elasticsearch mysqlserver80 nginxfull php80 php80bcmath php80cli php80curl php80gd php80intl php80mbstring php80mysql php80redis php80xml php80zip redis php80fpm 1 start elasticsearch configure run start sudo systemctl start elasticsearch sudo systemctl enable elasticsearch 1 install composer rotatinglight command run code remote location root see download composerhttpsgetcomposerorgdownload alternative install option curl httpsgetcomposerorginstaller sudo php installdirusrlocalbin filenamecomposer 1 clone app repository cd varwww sudo mkdir kcal sudo chown userid gn user kcal cd kcal git clone httpsgithubcomkcalappkcalgit 1 configure nginx serve app public file sudo vim etcnginxconfdkcalconf edit config see example sudo service nginx restart example config server listen 80 servername kcalexamplecom root varwwwkcalpublic addheader xframeoptions sameorigin addheader xcontenttypeoptions nosniff index indexphp charset utf8 location tryfiles uri uri indexphpquerystring location faviconico accesslog lognotfound location robotstxt accesslog lognotfound errorpage 404 indexphp location php fastcgipass unixvarrunphpphp80fpmsock fastcgiparam scriptfilename realpathrootfastcgiscriptname include fastcgiparams location wellknown deny 1 create database user sudo mysql u root create database kcal create user ' kcal ' ' localhost ' identified random password grant kcal ' kcal ' ' localhost ' flush privilege lock save generated password output create user statement 1 install dependency generate app key use next step composer install optimizeautoloader nodev php artisan noansi keygenerate show 1 copy environment config file adjust desired cp envexample env minimum set appkey value generated previous step set appurl match host configured nginx configuration set database value configured credential 1 run initial app installationbootstrap command php artisan migrate php artisan elasticmigrate php artisan configcache php artisan routecache php artisan viewcache php artisan useradd admin 1 allow web server access required directory sudo chown r userwwwdata storagepublic sudo chmod g storagepublic 1 visit appurl log configuration medium storage recipe user associated medium image default stored local disk path apppublicmedia local disk solution feasible aws s3 bucket used instead aws s3 use general guidance create aws s3 bucket iam user medium storage aws s3 1 create bucket allows object configured public access 1 create iam user access bucket use example policy grant necessary permission specific bucket version 20121017 statement sid visualeditor0 effect allow action s3getbucketpublicaccessblock s3getbucketpolicystatus s3getaccountpublicaccessblock s3listallmybuckets s3getbucketacl s3getbucketlocation resource sid visualeditor1 effect allow action s3listbucket resource arnawss3replacewiths3bucketname sid visualeditor2 effect allow action s3object s3objectacl resource arnawss3replacewiths3bucketname 1 set necessary environment variable via env mechanism mediadisks3public awsaccesskeyidreplacewithiamkey awssecretaccesskeyreplacewithiamsecret awsdefaultregionreplacewiths3bucketname awsbucketreplacewiths3bucketregion search mag ingredient food recipe search journal entry recipe ingredient support three different backends using scoutdriver environment variable case always ensure scoutdriver environment variable set kcal ' env file currently food recipe list search take advantage search driver support search added laravel jsonapi add support scout see laraveljsonapilaravel32 algolia algolia 1 create andor log inhttpswwwalgoliacomuserssignin algolia account 1 create application kcal 1 navigate application ' api key section 1 using application id admin api key value update kcal ' env file scoutdriveralgolia algoliaappidapplicationid algoliasecretadminapikey elasticsearch elastic 1 determine elasticsearch service host port 1 update kcal ' env file scoutdriverelastic elastichosthostport elasticportport note elasticport variable convenience option specifically docker compose configuration strictly required 1 run elastic ' migration php artisan elasticmigrate fallback null fallback driver simple like clause search couple key field result ordered relevance field searched eg tag field using one option highly recommended set scoutdrivernull kcal ' env file use fallback driver development laravel sail prerequisite composerhttpsgetcomposerorgdownload dockerhttpsdocsdockercomgetdocker docker composehttpsdocsdockercomcomposeinstall step 1 clone repository git clone httpsgithubcomkcalappkcalgit cd kcal 1 install development dependency composer install 1 create local env file cp envlocalexample env 1 generate app key php artisan keygenerate verify appkey variable ha set env ha run php artisan keygenerate show copy key append appkey line manually 1 run sailboat vendorbinsail 1 first run run migration vendorbinsail artisan migrate vendorbinsail artisan elasticmigrate 1 first run seed database vendorbinsail artisan dbseed default username password kcal kcal navigate http1270018080http1270018080 log create dockercomposeoverrideyml file override default setting provided environment custom console command devcacheclear executes various cache clearing artisan command cacheclear configclear routeclear viewclear devreset reset seed database executing following artisan command dbwipe migrate dbseed testing ensure sail running primarily provide elasticsearch vendorbinsail execute test vendorbinsail artisan devcacheclear vendorbinsail artisan test parallel recreatedatabases
Python,"python-nutritionix
==================

Nutritionix API Python wrapper

![Nutritionix API Credit](https://d3jpl91pxevbkh.cloudfront.net/nutritionix/image/upload/v1363458498/attribution_jqfdgy.png)


Installing
==========

`pip install nutritionix`

Dependencies
------------

Requires [Requests](http://docs.python-requests.org/en/latest/).


Config
======

You'll need an api key and app id which is tied to a developer account at
https://developer.nutritionix.com

You may provide these parameters in your code or with the environment variables
`NIX_APP_ID` &amp; `NIX_API_KEY`


Usage
=====

#### Instantiate ####

First, instantiate the API wrapper object

    from nutritionix import Nutritionix
    nix = Nutritionix(app_id=""123456789"", api_key=""XXXYYYZZZ"")

Or if you have configured the environment variables, simply

    from nutritionix import Nutritionix
    nix = Nutritionix()

#### Define request ####

Defining a request is simply chaining a method to the API wrapper instance

    pizza = nix.search(""pizza"")

That will return a new wrapper object which will perform a search for pizza.

#### Retrieve results ####

We can retrieve the parsed JSON results easily by using the json method

    results = pizza.json()

All of this could also be written more concisely as

    nix.search('pizza').json()

#### Using parameters ####

Of course adding parameters is easy- just pass them as keyword arguments
to the method

    nix.search('pizza', results=""0:1"").json()

#### Using NXQL ####

And making use of NXQL is also straight forward by using a call to search with
no arguments and calling the nxql method with your desired query expressed as
keyword arguments (filters, queries, or query)

    nix.search().nxql(
        filters={
            ""nf_calories"": {
                ""lte"": 500
            }
        },
        fields=[""item_name"", ""item_id"", ""nf_calories""]
    ).json()


Examples
========

### Search ###

    >>> nix.search(""big mac"", results=""0:1"").json()
    {u'hits': [{u'_id': u'513fc9e73fe3ffd40300109f',
                u'_index': u'nixProductionV9',
                u'_score': 1.1813704,
                u'_type': u'item',
                u'fields': {u'brand_name': u""McDonald's"",
                            u'item_id': u'513fc9e73fe3ffd40300109f',
                            u'item_name': u'Big Mac'}}],
     u'max_score': 1.1813704,
     u'total_hits': 1050}

### Items ###

    >>> nix.item(id=""513fc9e73fe3ffd40300109f"").json()
    {u'allergen_contains_eggs': None,
     u'allergen_contains_fish': None,
     u'allergen_contains_gluten': None,
     u'allergen_contains_milk': None,
     u'allergen_contains_peanuts': None,
     u'allergen_contains_shellfish': None,
     u'allergen_contains_soybeans': None,
     u'allergen_contains_tree_nuts': None,
     u'allergen_contains_wheat': None,
     u'brand_id': u'513fbc1283aa2dc80c000053',
     u'brand_name': u""McDonald's"",
     u'item_description': u'7.6 oz (215 g)',
     u'item_id': u'513fc9e73fe3ffd40300109f',
     u'item_name': u'Big Mac',
     u'leg_loc_id': 114,
     u'nf_calcium_dv': 25,
     u'nf_calories': 550,
     u'nf_calories_from_fat': 260,
     u'nf_cholesterol': 75,
     u'nf_dietary_fiber': 3,
     u'nf_ingredient_statement': u'100% Beef Patty...',
     u'nf_iron_dv': 25,
     u'nf_monounsaturated_fat': None,
     u'nf_polyunsaturated_fat': None,
     u'nf_protein': 25,
     u'nf_refuse_pct': None,
     u'nf_saturated_fat': 10,
     u'nf_serving_size_qty': 1,
     u'nf_serving_size_unit': u'Burger',
     u'nf_serving_weight_grams': 215,
     u'nf_servings_per_container': None,
     u'nf_sodium': 970,
     u'nf_sugars': 9,
     u'nf_total_carbohydrate': 46,
     u'nf_total_fat': 29,
     u'nf_trans_fatty_acid': 1,
     u'nf_vitamin_a_dv': 4,
     u'nf_vitamin_c_dv': 2,
     u'nf_water_grams': None,
     u'old_api_id': None,
     u'updated_at': u'2013-06-28T17:53:50.000Z'}

### Brand Search ###

    >>> nix.brand().search(query=""mcdonalds"").json()
    {u'hits': [{u'_id': u'513fbc1283aa2dc80c000053',
     u'_index': u'nixproductionv13',
     u'_score': 7.1310086,
     u'_type': u'brand',
     u'fields': {u'_id': u'513fbc1283aa2dc80c000053',
     u'name': u""McDonald's"",
     u'type': 1,
     u'website': u'http://www.mcdonalds.com'}}],
     u'max_score': 7.1310086,
     u'total': 1}

### Brands ###

    >>> nix.brand(""513fbc1283aa2dc80c000053"").json()
    {u'brand_id': u'513fbc1283aa2dc80c000053',
     u'created_at': u'2011-07-01 08:45:47',
     u'name': u""McDonald's"",
     u'old_api_id': u'0PewL8juRBSozVk',
     u'type': 1,
     u'updated_at': u'2013-06-26T11:36:25.468Z',
     u'website': u'http://www.mcdonalds.com'}


","pythonnutritionix


nutritionix api python wrapper

nutritionix api credithttpsd3jpl91pxevbkhcloudfrontnetnutritioniximageuploadv1363458498attributionjqfdgypng


installing


pip install nutritionix

dependencies


requires requestshttpdocspythonrequestsorgenlatest


config


you ' ll need an api key and app id which is tied to a developer account at
httpsdevelopernutritionixcom

you may provide these parameters in your code or with the environment variables
nixappid amp nixapikey


usage


 instantiate 

first instantiate the api wrapper object

 from nutritionix import nutritionix
 nix nutritionixappid123456789 apikeyxxxyyyzzz

or if you have configured the environment variables simply

 from nutritionix import nutritionix
 nix nutritionix

 define request 

defining a request is simply chaining a method to the api wrapper instance

 pizza nixsearchpizza

that will return a new wrapper object which will perform a search for pizza

 retrieve results 

we can retrieve the parsed json results easily by using the json method

 results pizzajson

all of this could also be written more concisely as

 nixsearch ' pizza ' json

 using parameters 

of course adding parameters is easy just pass them as keyword arguments
to the method

 nixsearch ' pizza ' results01json

 using nxql 

and making use of nxql is also straight forward by using a call to search with
no arguments and calling the nxql method with your desired query expressed as
keyword arguments filters queries or query

 nixsearchnxql
 filters
 nfcalories 
 lte 500
 
 
 fieldsitemname itemid nfcalories
 json


examples


 search 

 nixsearchbig mac results01json
 u ' hits ' u ' id ' u ' 513fc9e73fe3ffd40300109f ' 
 u ' index ' u ' nixproductionv9 ' 
 u ' score ' 11813704
 u ' type ' u ' item ' 
 u ' fields ' u ' brandname ' umcdonald ' s
 u ' itemid ' u ' 513fc9e73fe3ffd40300109f ' 
 u ' itemname ' u ' big mac ' 
 u ' maxscore ' 11813704
 u ' totalhits ' 1050

 items 

 nixitemid513fc9e73fe3ffd40300109fjson
 u ' allergencontainseggs ' none
 u ' allergencontainsfish ' none
 u ' allergencontainsgluten ' none
 u ' allergencontainsmilk ' none
 u ' allergencontainspeanuts ' none
 u ' allergencontainsshellfish ' none
 u ' allergencontainssoybeans ' none
 u ' allergencontainstreenuts ' none
 u ' allergencontainswheat ' none
 u ' brandid ' u ' 513fbc1283aa2dc80c000053 ' 
 u ' brandname ' umcdonald ' s
 u ' itemdescription ' u ' 76 oz 215 g ' 
 u ' itemid ' u ' 513fc9e73fe3ffd40300109f ' 
 u ' itemname ' u ' big mac ' 
 u ' leglocid ' 114
 u ' nfcalciumdv ' 25
 u ' nfcalories ' 550
 u ' nfcaloriesfromfat ' 260
 u ' nfcholesterol ' 75
 u ' nfdietaryfiber ' 3
 u ' nfingredientstatement ' u ' 100 beef patty ' 
 u ' nfirondv ' 25
 u ' nfmonounsaturatedfat ' none
 u ' nfpolyunsaturatedfat ' none
 u ' nfprotein ' 25
 u ' nfrefusepct ' none
 u ' nfsaturatedfat ' 10
 u ' nfservingsizeqty ' 1
 u ' nfservingsizeunit ' u ' burger ' 
 u ' nfservingweightgrams ' 215
 u ' nfservingspercontainer ' none
 u ' nfsodium ' 970
 u ' nfsugars ' 9
 u ' nftotalcarbohydrate ' 46
 u ' nftotalfat ' 29
 u ' nftransfattyacid ' 1
 u ' nfvitaminadv ' 4
 u ' nfvitamincdv ' 2
 u ' nfwatergrams ' none
 u ' oldapiid ' none
 u ' updatedat ' u ' 20130628t175350000z ' 

 brand search 

 nixbrandsearchquerymcdonaldsjson
 u ' hits ' u ' id ' u ' 513fbc1283aa2dc80c000053 ' 
 u ' index ' u ' nixproductionv13 ' 
 u ' score ' 71310086
 u ' type ' u ' brand ' 
 u ' fields ' u ' id ' u ' 513fbc1283aa2dc80c000053 ' 
 u ' name ' umcdonald ' s
 u ' type ' 1
 u ' website ' u ' httpwwwmcdonaldscom ' 
 u ' maxscore ' 71310086
 u ' total ' 1

 brands 

 nixbrand513fbc1283aa2dc80c000053json
 u ' brandid ' u ' 513fbc1283aa2dc80c000053 ' 
 u ' createdat ' u ' 20110701 084547 ' 
 u ' name ' umcdonald ' s
 u ' oldapiid ' u ' 0pewl8jurbsozvk ' 
 u ' type ' 1
 u ' updatedat ' u ' 20130626t113625468z ' 
 u ' website ' u ' httpwwwmcdonaldscom '",pythonnutritionix nutritionix api python wrapper nutritionix api credithttpsd3jpl91pxevbkhcloudfrontnetnutritioniximageuploadv1363458498attributionjqfdgypng instal pip instal nutritionix depend requir requestshttpdocspythonrequestsorgenlatest config ' need api key app id tie develop account httpsdevelopernutritionixcom may provid paramet code environ variabl nixappid amp nixapikey usag instanti first instanti api wrapper object nutritionix import nutritionix nix nutritionixappid123456789 apikeyxxxyyyzzz configur environ variabl simpli nutritionix import nutritionix nix nutritionix defin request defin request simpli chain method api wrapper instanc pizza nixsearchpizza return new wrapper object perform search pizza retriev result retriev pars json result easili use json method result pizzajson thi could also written concis nixsearch ' pizza ' json use paramet cours ad paramet easi pass keyword argument method nixsearch ' pizza ' results01json use nxql make use nxql also straight forward use call search argument call nxql method desir queri express keyword argument filter queri queri nixsearchnxql filter nfcalori lte 500 fieldsitemnam itemid nfcalori json exampl search nixsearchbig mac results01json u ' hit ' u ' id ' u ' 513fc9e73fe3ffd40300109f ' u ' index ' u ' nixproductionv9 ' u ' score ' 11813704 u ' type ' u ' item ' u ' field ' u ' brandnam ' umcdonald ' u ' itemid ' u ' 513fc9e73fe3ffd40300109f ' u ' itemnam ' u ' big mac ' u ' maxscor ' 11813704 u ' totalhit ' 1050 item nixitemid513fc9e73fe3ffd40300109fjson u ' allergencontainsegg ' none u ' allergencontainsfish ' none u ' allergencontainsgluten ' none u ' allergencontainsmilk ' none u ' allergencontainspeanut ' none u ' allergencontainsshellfish ' none u ' allergencontainssoybean ' none u ' allergencontainstreenut ' none u ' allergencontainswheat ' none u ' brandid ' u ' 513fbc1283aa2dc80c000053 ' u ' brandnam ' umcdonald ' u ' itemdescript ' u ' 76 oz 215 g ' u ' itemid ' u ' 513fc9e73fe3ffd40300109f ' u ' itemnam ' u ' big mac ' u ' leglocid ' 114 u ' nfcalciumdv ' 25 u ' nfcalori ' 550 u ' nfcaloriesfromfat ' 260 u ' nfcholesterol ' 75 u ' nfdietaryfib ' 3 u ' nfingredientstat ' u ' 100 beef patti ' u ' nfirondv ' 25 u ' nfmonounsaturatedfat ' none u ' nfpolyunsaturatedfat ' none u ' nfprotein ' 25 u ' nfrefusepct ' none u ' nfsaturatedfat ' 10 u ' nfservingsizeqti ' 1 u ' nfservingsizeunit ' u ' burger ' u ' nfservingweightgram ' 215 u ' nfservingspercontain ' none u ' nfsodium ' 970 u ' nfsugar ' 9 u ' nftotalcarbohydr ' 46 u ' nftotalfat ' 29 u ' nftransfattyacid ' 1 u ' nfvitaminadv ' 4 u ' nfvitamincdv ' 2 u ' nfwatergram ' none u ' oldapiid ' none u ' updatedat ' u ' 20130628t175350000z ' brand search nixbrandsearchquerymcdonaldsjson u ' hit ' u ' id ' u ' 513fbc1283aa2dc80c000053 ' u ' index ' u ' nixproductionv13 ' u ' score ' 71310086 u ' type ' u ' brand ' u ' field ' u ' id ' u ' 513fbc1283aa2dc80c000053 ' u ' name ' umcdonald ' u ' type ' 1 u ' websit ' u ' httpwwwmcdonaldscom ' u ' maxscor ' 71310086 u ' total ' 1 brand nixbrand513fbc1283aa2dc80c000053json u ' brandid ' u ' 513fbc1283aa2dc80c000053 ' u ' createdat ' u ' 20110701 084547 ' u ' name ' umcdonald ' u ' oldapiid ' u ' 0pewl8jurbsozvk ' u ' type ' 1 u ' updatedat ' u ' 20130626t113625468z ' u ' websit ' u ' httpwwwmcdonaldscom ',pythonnutritionix nutritionix api python wrapper nutritionix api credithttpsd3jpl91pxevbkhcloudfrontnetnutritioniximageuploadv1363458498attributionjqfdgypng installing pip install nutritionix dependency requires requestshttpdocspythonrequestsorgenlatest config ' need api key app id tied developer account httpsdevelopernutritionixcom may provide parameter code environment variable nixappid amp nixapikey usage instantiate first instantiate api wrapper object nutritionix import nutritionix nix nutritionixappid123456789 apikeyxxxyyyzzz configured environment variable simply nutritionix import nutritionix nix nutritionix define request defining request simply chaining method api wrapper instance pizza nixsearchpizza return new wrapper object perform search pizza retrieve result retrieve parsed json result easily using json method result pizzajson could also written concisely nixsearch ' pizza ' json using parameter course adding parameter easy pas keyword argument method nixsearch ' pizza ' results01json using nxql making use nxql also straight forward using call search argument calling nxql method desired query expressed keyword argument filter query query nixsearchnxql filter nfcalories lte 500 fieldsitemname itemid nfcalories json example search nixsearchbig mac results01json u ' hit ' u ' id ' u ' 513fc9e73fe3ffd40300109f ' u ' index ' u ' nixproductionv9 ' u ' score ' 11813704 u ' type ' u ' item ' u ' field ' u ' brandname ' umcdonald ' u ' itemid ' u ' 513fc9e73fe3ffd40300109f ' u ' itemname ' u ' big mac ' u ' maxscore ' 11813704 u ' totalhits ' 1050 item nixitemid513fc9e73fe3ffd40300109fjson u ' allergencontainseggs ' none u ' allergencontainsfish ' none u ' allergencontainsgluten ' none u ' allergencontainsmilk ' none u ' allergencontainspeanuts ' none u ' allergencontainsshellfish ' none u ' allergencontainssoybeans ' none u ' allergencontainstreenuts ' none u ' allergencontainswheat ' none u ' brandid ' u ' 513fbc1283aa2dc80c000053 ' u ' brandname ' umcdonald ' u ' itemdescription ' u ' 76 oz 215 g ' u ' itemid ' u ' 513fc9e73fe3ffd40300109f ' u ' itemname ' u ' big mac ' u ' leglocid ' 114 u ' nfcalciumdv ' 25 u ' nfcalories ' 550 u ' nfcaloriesfromfat ' 260 u ' nfcholesterol ' 75 u ' nfdietaryfiber ' 3 u ' nfingredientstatement ' u ' 100 beef patty ' u ' nfirondv ' 25 u ' nfmonounsaturatedfat ' none u ' nfpolyunsaturatedfat ' none u ' nfprotein ' 25 u ' nfrefusepct ' none u ' nfsaturatedfat ' 10 u ' nfservingsizeqty ' 1 u ' nfservingsizeunit ' u ' burger ' u ' nfservingweightgrams ' 215 u ' nfservingspercontainer ' none u ' nfsodium ' 970 u ' nfsugars ' 9 u ' nftotalcarbohydrate ' 46 u ' nftotalfat ' 29 u ' nftransfattyacid ' 1 u ' nfvitaminadv ' 4 u ' nfvitamincdv ' 2 u ' nfwatergrams ' none u ' oldapiid ' none u ' updatedat ' u ' 20130628t175350000z ' brand search nixbrandsearchquerymcdonaldsjson u ' hit ' u ' id ' u ' 513fbc1283aa2dc80c000053 ' u ' index ' u ' nixproductionv13 ' u ' score ' 71310086 u ' type ' u ' brand ' u ' field ' u ' id ' u ' 513fbc1283aa2dc80c000053 ' u ' name ' umcdonald ' u ' type ' 1 u ' website ' u ' httpwwwmcdonaldscom ' u ' maxscore ' 71310086 u ' total ' 1 brand nixbrand513fbc1283aa2dc80c000053json u ' brandid ' u ' 513fbc1283aa2dc80c000053 ' u ' createdat ' u ' 20110701 084547 ' u ' name ' umcdonald ' u ' oldapiid ' u ' 0pewl8jurbsozvk ' u ' type ' 1 u ' updatedat ' u ' 20130626t113625468z ' u ' website ' u ' httpwwwmcdonaldscom '
C#,"# Nutritionix Client Library for .NET
===========

This is a .NET client for the [Nutritionix](http://www.nutritionix.com/) API. It is also available as a NuGet package.

[Nutritionix NuGet Package](https://nuget.org/packages/Nutritionix)  
[Nutritionix.Sample NuGet Package](https://nuget.org/packages/Nutritionix.Sample)

## Use
```csharp
using Nutritionix;

namespace MyApp
{
    public class FooBar
    {
        private const string myApiId = ""xxx"";
        private const string myApiKey = ""abc123"";

        public NutritionixSearchResult[] Search(string query)
        {
            var nutritionix = new NutritionixClient();
            nutritionix.Initialize(myApiId, myApiKey);

            var request = new NutritionixSearchRequest { Query = query };
            NutritionixSearchResponse response = nutritionix.SearchItems(request);

            return response.Results;
        }

        public NutritionixItem Retrieve(string id)
        {
            var nutritionix = new NutritionixClient();
            nutritionix.Initialize(myApiId, myApiKey);

            return nutritionix.RetrieveItem(id);
        }
    }
}
```
","nutritionix client library for net


this is a net client for the nutritionixhttpwwwnutritionixcom api it is also available as a nuget package

nutritionix nuget packagehttpsnugetorgpackagesnutritionix 
nutritionixsample nuget packagehttpsnugetorgpackagesnutritionixsample

 use
csharp
using nutritionix

namespace myapp

 public class foobar
 
 private const string myapiid xxx
 private const string myapikey abc123

 public nutritionixsearchresult searchstring query
 
 var nutritionix new nutritionixclient
 nutritionixinitializemyapiid myapikey

 var request new nutritionixsearchrequest query query 
 nutritionixsearchresponse response nutritionixsearchitemsrequest

 return responseresults
 

 public nutritionixitem retrievestring id
 
 var nutritionix new nutritionixclient
 nutritionixinitializemyapiid myapikey

 return nutritionixretrieveitemid",nutritionix client librari net thi net client nutritionixhttpwwwnutritionixcom api also avail nuget packag nutritionix nuget packagehttpsnugetorgpackagesnutritionix nutritionixsampl nuget packagehttpsnugetorgpackagesnutritionixsampl use csharp use nutritionix namespac myapp public class foobar privat const string myapiid xxx privat const string myapikey abc123 public nutritionixsearchresult searchstr queri var nutritionix new nutritionixcli nutritionixinitializemyapiid myapikey var request new nutritionixsearchrequest queri queri nutritionixsearchrespons respons nutritionixsearchitemsrequest return responseresult public nutritionixitem retrievestr id var nutritionix new nutritionixcli nutritionixinitializemyapiid myapikey return nutritionixretrieveitemid,nutritionix client library net net client nutritionixhttpwwwnutritionixcom api also available nuget package nutritionix nuget packagehttpsnugetorgpackagesnutritionix nutritionixsample nuget packagehttpsnugetorgpackagesnutritionixsample use csharp using nutritionix namespace myapp public class foobar private const string myapiid xxx private const string myapikey abc123 public nutritionixsearchresult searchstring query var nutritionix new nutritionixclient nutritionixinitializemyapiid myapikey var request new nutritionixsearchrequest query query nutritionixsearchresponse response nutritionixsearchitemsrequest return responseresults public nutritionixitem retrievestring id var nutritionix new nutritionixclient nutritionixinitializemyapiid myapikey return nutritionixretrieveitemid
JavaScript,"# healthTracker

We designed this simple health application to help you track your personal health, fitness, and nutrition goals. Once you've created your account, you can easily log your weight, water consumption, nutrition goals and fitness activities. You're on your way to a healthier you!

## Usage

Create an account, and then login to get started!

### Prerequisites

To run this app on your local machine, make sure you have [MongoDB](https://www.mongodb.com/download-center#community) and [Node.js](https://nodejs.org/en/download/) installed.

### Installing

First, clone this repository to your local machine, and then install the dependencies using:

```
npm install
```

In a separate terminal start Mongo:

```
mongod
```


Then start the server:

```
npm start
```

And go to the [browser](http://localhost:3000) to view the application!


## Built With

* [React](https://reactjs.org/) - Frontend Framework
* [Node.js](https://nodejs.org/en/) - Javascript Runtime Environment
* [Express](https://expressjs.com/) - Web Framework
* [MongoDB](https://www.mongodb.com/) - Database
* [Passport](https://http://www.passportjs.org/) - Authentication
* [bcrypt-nodejs](https://www.npmjs.com/package/bcrypt-nodejs) - Password Hashing
* [Charts.js](https://www.chartjs.org/) - Charts
* [Material-UI](https://http://material-ui.com/) - Styling
* [Heroku](https://http://heroku.com/) - Hosting


## Authors

* **Lucas Jensen** - *Frontend and Design* - [Gitub](https://github.com/lucasjensen56)
* **Josh Hedstrom** - *Frontend and Authentication* - [Gitub](https://github.com/joshhedstrom)
* **Lucas Werner** - *Backend* - [Gitub](https://github.com/lwerner27)
* **Jason Robinson** - *Backend and Authentication* - [Gitub](https://github.com/jasonrobnson)
* **Ben Tommerdahl** - *Routes* - [Gitub](https://github.com/btommer2017)

## License

This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details
","healthtracker

we designed this simple health application to help you track your personal health fitness and nutrition goals once you ' ve created your account you can easily log your weight water consumption nutrition goals and fitness activities you ' re on your way to a healthier you

 usage

create an account and then login to get started

 prerequisites

to run this app on your local machine make sure you have mongodbhttpswwwmongodbcomdownloadcentercommunity and nodejshttpsnodejsorgendownload installed

 installing

first clone this repository to your local machine and then install the dependencies using


npm install


in a separate terminal start mongo


mongod



then start the server


npm start


and go to the browserhttplocalhost3000 to view the application


 built with

 reacthttpsreactjsorg frontend framework
 nodejshttpsnodejsorgen javascript runtime environment
 expresshttpsexpressjscom web framework
 mongodbhttpswwwmongodbcom database
 passporthttpshttpwwwpassportjsorg authentication
 bcryptnodejshttpswwwnpmjscompackagebcryptnodejs password hashing
 chartsjshttpswwwchartjsorg charts
 materialuihttpshttpmaterialuicom styling
 herokuhttpshttpherokucom hosting


 authors

 lucas jensen frontend and design gitubhttpsgithubcomlucasjensen56
 josh hedstrom frontend and authentication gitubhttpsgithubcomjoshhedstrom
 lucas werner backend gitubhttpsgithubcomlwerner27
 jason robinson backend and authentication gitubhttpsgithubcomjasonrobnson
 ben tommerdahl routes gitubhttpsgithubcombtommer2017

 license

this project is licensed under the mit license see the licensemdlicensemd file for details",healthtrack design thi simpl health applic help track person health fit nutrit goal onc ' creat account easili log weight water consumpt nutrit goal fit activ ' way healthier usag creat account login get start prerequisit run thi app local machin make sure mongodbhttpswwwmongodbcomdownloadcentercommun nodejshttpsnodejsorgendownload instal instal first clone thi repositori local machin instal depend use npm instal separ termin start mongo mongod start server npm start go browserhttplocalhost3000 view applic built reacthttpsreactjsorg frontend framework nodejshttpsnodejsorgen javascript runtim environ expresshttpsexpressjscom web framework mongodbhttpswwwmongodbcom databas passporthttpshttpwwwpassportjsorg authent bcryptnodejshttpswwwnpmjscompackagebcryptnodej password hash chartsjshttpswwwchartjsorg chart materialuihttpshttpmaterialuicom style herokuhttpshttpherokucom host author luca jensen frontend design gitubhttpsgithubcomlucasjensen56 josh hedstrom frontend authent gitubhttpsgithubcomjoshhedstrom luca werner backend gitubhttpsgithubcomlwerner27 jason robinson backend authent gitubhttpsgithubcomjasonrobnson ben tommerdahl rout gitubhttpsgithubcombtommer2017 licens thi project licens mit licens see licensemdlicensemd file detail,healthtracker designed simple health application help track personal health fitness nutrition goal ' created account easily log weight water consumption nutrition goal fitness activity ' way healthier usage create account login get started prerequisite run app local machine make sure mongodbhttpswwwmongodbcomdownloadcentercommunity nodejshttpsnodejsorgendownload installed installing first clone repository local machine install dependency using npm install separate terminal start mongo mongod start server npm start go browserhttplocalhost3000 view application built reacthttpsreactjsorg frontend framework nodejshttpsnodejsorgen javascript runtime environment expresshttpsexpressjscom web framework mongodbhttpswwwmongodbcom database passporthttpshttpwwwpassportjsorg authentication bcryptnodejshttpswwwnpmjscompackagebcryptnodejs password hashing chartsjshttpswwwchartjsorg chart materialuihttpshttpmaterialuicom styling herokuhttpshttpherokucom hosting author lucas jensen frontend design gitubhttpsgithubcomlucasjensen56 josh hedstrom frontend authentication gitubhttpsgithubcomjoshhedstrom lucas werner backend gitubhttpsgithubcomlwerner27 jason robinson backend authentication gitubhttpsgithubcomjasonrobnson ben tommerdahl route gitubhttpsgithubcombtommer2017 license project licensed mit license see licensemdlicensemd file detail
JavaScript,"# Nutrition Facts


### About
A NodeJs wrapper of the [USDA Food Composition Database API (NDB API)](https://ndb.nal.usda.gov/ndb/doc/index).


### Install Nutrition Facts
```Javascript
npm install nutrition-facts --save
```

### API Documentation and API Keys
[Please refer to the NDB Documentation website](https://ndb.nal.usda.gov/ndb/doc/index)

### Script Example
See [Demo Script](https://github.com/eliash91/nutrition-facts/blob/master/demo/demo.js)
```Javascript
import NutritionFacts from 'nutrition-facts'
   
const NF = new NutritionFacts(process.env.USDA_NDB_API_KEY);
  
NF.searchFoods({
    q: 'salted butter',
    ds: 'Standard Reference'
}).then(results => {
    
    // Returns search results
    let mySelectedItem = results.list.item[0]
    
    // Items are returned as a FoodItem instance
    // allowing you to call 'getNutrition' directly on the instance.
    mySelectedItem.getNutrition()
        .then(nutritionReport => {
            console.log(nutritionReport)
        }).catch(err => {
            console.log(err)
        })
        
}).catch(err => {
    console.log(err)
})

// Alternatively, if you know the NDBNO off-hand
// you can call 'getNutrition' from the NF instance.

NF.getNutrition('01001','b')
    .then(nutritionReport => {
        console.log(nutritionReport)
    }).catch(err => {
        console.log(err)
    })
```

####License
MIT License
Copyright (c) 2017 Elias Hussary

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","nutrition facts


 about
a nodejs wrapper of the usda food composition database api ndb apihttpsndbnalusdagovndbdocindex


 install nutrition facts
javascript
npm install nutritionfacts save


 api documentation and api keys
please refer to the ndb documentation websitehttpsndbnalusdagovndbdocindex

 script example
see demo scripthttpsgithubcomeliash91nutritionfactsblobmasterdemodemojs
javascript
import nutritionfacts from ' nutritionfacts ' 
 
const nf new nutritionfactsprocessenvusdandbapikey
 
nfsearchfoods
 q ' salted butter ' 
 ds ' standard reference ' 
thenresults 
 
 returns search results
 let myselecteditem resultslistitem0
 
 items are returned as a fooditem instance
 allowing you to call ' getnutrition ' directly on the instance
 myselecteditemgetnutrition
 thennutritionreport 
 consolelognutritionreport
 catcherr 
 consolelogerr
 
 
catcherr 
 consolelogerr


 alternatively if you know the ndbno offhand
 you can call ' getnutrition ' from the nf instance

nfgetnutrition ' 01001 ' ' b ' 
 thennutritionreport 
 consolelognutritionreport
 catcherr 
 consolelogerr
 


license
mit license
copyright c 2017 elias hussary

permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense andor sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions

the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software

the software is provided as is without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software",nutrit fact nodej wrapper usda food composit databas api ndb apihttpsndbnalusdagovndbdocindex instal nutrit fact javascript npm instal nutritionfact save api document api key pleas refer ndb document websitehttpsndbnalusdagovndbdocindex script exampl see demo scripthttpsgithubcomeliash91nutritionfactsblobmasterdemodemoj javascript import nutritionfact ' nutritionfact ' const nf new nutritionfactsprocessenvusdandbapikey nfsearchfood q ' salt butter ' ds ' standard refer ' thenresult return search result let myselecteditem resultslistitem0 item return fooditem instanc allow call ' getnutrit ' directli instanc myselecteditemgetnutrit thennutritionreport consolelognutritionreport catcherr consolelogerr catcherr consolelogerr altern know ndbno offhand call ' getnutrit ' nf instanc nfgetnutrit ' 01001 ' ' b ' thennutritionreport consolelognutritionreport catcherr consolelogerr licens mit licens copyright c 2017 elia hussari permiss herebi grant free charg ani person obtain copi thi softwar associ document file softwar deal softwar without restrict includ without limit right use copi modifi merg publish distribut sublicens andor sell copi softwar permit person softwar furnish subject follow condit abov copyright notic thi permiss notic shall includ copi substanti portion softwar softwar provid without warranti ani kind express impli includ limit warranti merchant fit particular purpos noninfring event shall author copyright holder liabl ani claim damag liabil whether action contract tort otherwis aris connect softwar use deal softwar,nutrition fact nodejs wrapper usda food composition database api ndb apihttpsndbnalusdagovndbdocindex install nutrition fact javascript npm install nutritionfacts save api documentation api key please refer ndb documentation websitehttpsndbnalusdagovndbdocindex script example see demo scripthttpsgithubcomeliash91nutritionfactsblobmasterdemodemojs javascript import nutritionfacts ' nutritionfacts ' const nf new nutritionfactsprocessenvusdandbapikey nfsearchfoods q ' salted butter ' ' standard reference ' thenresults return search result let myselecteditem resultslistitem0 item returned fooditem instance allowing call ' getnutrition ' directly instance myselecteditemgetnutrition thennutritionreport consolelognutritionreport catcherr consolelogerr catcherr consolelogerr alternatively know ndbno offhand call ' getnutrition ' nf instance nfgetnutrition ' 01001 ' ' b ' thennutritionreport consolelognutritionreport catcherr consolelogerr license mit license copyright c 2017 elia hussary permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
Python,"# Nutritional AI

This is Sakib and Ming's Nutritional AI App that uses Flask/SQLAlchemy. 

Graduate Course Report avaiable for viewing [here](https://goo.gl/K7K3ye).

## Overview

This app incorporates a custom-built machine learning algorithm to suggest what recipes a user should eat. The user may specify the number of suggested recipes, the protein and the specific cuisine. Many scripts (stored in /scripts) were used to scrape food/recipe data from online, clean it in various stages (see /outfiles), and structure it to mold to our database models. Routes were built to expose user services on API endpoints:

* Get suggestions for recipes, based on user history and preferences for foods
* Select a recipe for consumption, which are learned into your preferences
* Get a minimal set of stores to buy the ingredients for a particular recipe from

These services are designed to feed into each other, and are integrated into the Slackbots which communicate with each other to provide a seamless natural language interface for this service flow.

The design of the bots is loosely coupled, so that it is as easy as possible for anyone to add their own bots which do specific tasks and integrate them into the service flow. The goal is for a master bot to enable bot-service discovery for automatic bot-to-bot communication.

## Setup

After going into the directory, these are the steps to get the app up and running locally:

#### Step 1. Create a Virtual Environment and Install Dependencies

Create a new Virtual Environment for the project and source it.  If you don't have Virtual Environment yet, you can find installation [instructions here](https://virtualenv.readthedocs.org/en/latest/).

```
$ virtualenv venv
$ source venv/bin/activate
```

Next we need to install the project dependencies, which are listed in `pip.req`. If you have issues, try install MySQL python dev libs.

```
(venv) $ pip install -r pip.req
```

#### Step 2. Set up the Database

Enter the MySQL shell and create a flask app user and database running locally. If you don't have MySQL yet, you can find installation [instructions here](http://dev.mysql.com/doc/refman/5.7/en/installing.html).

```
mysql> create database nai;
mysql> create user 'nai'@'localhost' identified by 'nai';
mysql> grant all privileges on nai.* to 'nai'@'localhost';
```

Now apply the models defined in the flask app as such:

```
(venv) $ ./migrate.py db init
(venv) $ ./migrate.py db migrate
(venv) $ ./migrate.py db upgrade
```

For most table changes, edit nai/models.py, and run the above migrate and upgrade commands again.

If you happen to change a foreign key, or delete the migrations folder, run the above init, migrate and upgrade commands again.

#### Step 3. Run the Server

Now we're ready to start our server which is as simple as:

```
(venv) $ ./run.py
```

Optional: If we want to expose this to a public facing URL, we can use [ngrok](https://ngrok.com/):

```
(venv) $ ./ngrok http 5000
```

## Credit

Built by Sakib Jalal & Ming Tai Ha at Rutgers University, kept under the MIT License.

ALL STORES SELL ITEMS IN 100g PACKAGES, NO EXCEPTIONS
","nutritional ai

this is sakib and ming ' s nutritional ai app that uses flasksqlalchemy 

graduate course report avaiable for viewing herehttpsgooglk7k3ye

 overview

this app incorporates a custombuilt machine learning algorithm to suggest what recipes a user should eat the user may specify the number of suggested recipes the protein and the specific cuisine many scripts stored in scripts were used to scrape foodrecipe data from online clean it in various stages see outfiles and structure it to mold to our database models routes were built to expose user services on api endpoints

 get suggestions for recipes based on user history and preferences for foods
 select a recipe for consumption which are learned into your preferences
 get a minimal set of stores to buy the ingredients for a particular recipe from

these services are designed to feed into each other and are integrated into the slackbots which communicate with each other to provide a seamless natural language interface for this service flow

the design of the bots is loosely coupled so that it is as easy as possible for anyone to add their own bots which do specific tasks and integrate them into the service flow the goal is for a master bot to enable botservice discovery for automatic bottobot communication

 setup

after going into the directory these are the steps to get the app up and running locally

 step 1 create a virtual environment and install dependencies

create a new virtual environment for the project and source it if you don ' t have virtual environment yet you can find installation instructions herehttpsvirtualenvreadthedocsorgenlatest


 virtualenv venv
 source venvbinactivate


next we need to install the project dependencies which are listed in pipreq if you have issues try install mysql python dev libs


venv pip install r pipreq


 step 2 set up the database

enter the mysql shell and create a flask app user and database running locally if you don ' t have mysql yet you can find installation instructions herehttpdevmysqlcomdocrefman57eninstallinghtml


mysql create database nai
mysql create user ' nai ' ' localhost ' identified by ' nai ' 
mysql grant all privileges on nai to ' nai ' ' localhost ' 


now apply the models defined in the flask app as such


venv migratepy db init
venv migratepy db migrate
venv migratepy db upgrade


for most table changes edit naimodelspy and run the above migrate and upgrade commands again

if you happen to change a foreign key or delete the migrations folder run the above init migrate and upgrade commands again

 step 3 run the server

now we ' re ready to start our server which is as simple as


venv runpy


optional if we want to expose this to a public facing url we can use ngrokhttpsngrokcom


venv ngrok http 5000


 credit

built by sakib jalal ming tai ha at rutgers university kept under the mit license

all stores sell items in 100g packages no exceptions",nutrit ai thi sakib ming ' nutrit ai app use flasksqlalchemi graduat cours report avaiabl view herehttpsgooglk7k3y overview thi app incorpor custombuilt machin learn algorithm suggest recip user eat user may specifi number suggest recip protein specif cuisin mani script store script use scrape foodrecip data onlin clean variou stage see outfil structur mold databas model rout built expos user servic api endpoint get suggest recip base user histori prefer food select recip consumpt learn prefer get minim set store buy ingredi particular recip servic design feed integr slackbot commun provid seamless natur languag interfac thi servic flow design bot loos coupl easi possibl anyon add bot specif task integr servic flow goal master bot enabl botservic discoveri automat bottobot commun setup go directori step get app run local step 1 creat virtual environ instal depend creat new virtual environ project sourc ' virtual environ yet find instal instruct herehttpsvirtualenvreadthedocsorgenlatest virtualenv venv sourc venvbinactiv next need instal project depend list pipreq issu tri instal mysql python dev lib venv pip instal r pipreq step 2 set databas enter mysql shell creat flask app user databas run local ' mysql yet find instal instruct herehttpdevmysqlcomdocrefman57eninstallinghtml mysql creat databas nai mysql creat user ' nai ' ' localhost ' identifi ' nai ' mysql grant privileg nai ' nai ' ' localhost ' appli model defin flask app venv migratepi db init venv migratepi db migrat venv migratepi db upgrad tabl chang edit naimodelspi run abov migrat upgrad command happen chang foreign key delet migrat folder run abov init migrat upgrad command step 3 run server ' readi start server simpl venv runpi option want expos thi public face url use ngrokhttpsngrokcom venv ngrok http 5000 credit built sakib jalal ming tai ha rutger univers kept mit licens store sell item 100g packag except,nutritional ai sakib ming ' nutritional ai app us flasksqlalchemy graduate course report avaiable viewing herehttpsgooglk7k3ye overview app incorporates custombuilt machine learning algorithm suggest recipe user eat user may specify number suggested recipe protein specific cuisine many script stored script used scrape foodrecipe data online clean various stage see outfiles structure mold database model route built expose user service api endpoint get suggestion recipe based user history preference food select recipe consumption learned preference get minimal set store buy ingredient particular recipe service designed feed integrated slackbots communicate provide seamless natural language interface service flow design bot loosely coupled easy possible anyone add bot specific task integrate service flow goal master bot enable botservice discovery automatic bottobot communication setup going directory step get app running locally step 1 create virtual environment install dependency create new virtual environment project source ' virtual environment yet find installation instruction herehttpsvirtualenvreadthedocsorgenlatest virtualenv venv source venvbinactivate next need install project dependency listed pipreq issue try install mysql python dev libs venv pip install r pipreq step 2 set database enter mysql shell create flask app user database running locally ' mysql yet find installation instruction herehttpdevmysqlcomdocrefman57eninstallinghtml mysql create database nai mysql create user ' nai ' ' localhost ' identified ' nai ' mysql grant privilege nai ' nai ' ' localhost ' apply model defined flask app venv migratepy db init venv migratepy db migrate venv migratepy db upgrade table change edit naimodelspy run migrate upgrade command happen change foreign key delete migration folder run init migrate upgrade command step 3 run server ' ready start server simple venv runpy optional want expose public facing url use ngrokhttpsngrokcom venv ngrok http 5000 credit built sakib jalal ming tai ha rutgers university kept mit license store sell item 100g package exception
Java,"# nutrition

Este é um repositório criado com a intencão de auxiliar o pessoal inscrito em meu canal no Youtube.
","nutrition

este e um repositorio criado com a intencao de auxiliar o pessoal inscrito em meu canal no youtube",nutrit est e um repositorio criado com intencao de auxiliar pessoal inscrito em meu canal youtub,nutrition este e um repositorio criado com intencao de auxiliar pessoal inscrito em meu canal youtube
TypeScript,"<p align=""center"">
   <a href=""https://calories-in.com"" target=""_blank"">
    <img src=""devices-preview.png"" alt=""Devices preview"" />
  </a>
</p>
<h1 align=""center"">Calories-In</h1>

<div align=""center"">

  <h3>A web-based meal plan editor for people who prepare all of their food.</h3>
  
<br />

Live version: https://calories-in.com

Demo video: https://tella.video/calories-in-4onp

</div>

## Background

The idea was born out of my experience of trying to find a better alternative to Google Sheets for calculating the macros of my meal plans. I wanted to be able to do this on desktop as it's more convenient but nothing really felt fast and simple enough.

A huge inspiration for me has been [excalidraw.com](http://excalidraw.com).

## Notable libraries

- [Chakra UI](https://chakra-ui.com/)
- [React Beautiful Dnd](https://github.com/atlassian/react-beautiful-dnd)
- [React-pdf](https://react-pdf.org/)
- [Comlink-loader](https://github.com/GoogleChromeLabs/comlink-loader)
- [React window](https://github.com/bvaughn/react-window)
- [Fuse.js](https://fusejs.io/)
- [Framer Motion](https://www.framer.com/motion/)
- [Feather icons](https://feathericons.com/)

## Available Scripts

In the project directory, you can run:

### `yarn start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

### `yarn build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.
","p aligncenter
 a hrefhttpscaloriesincom targetblank
 img srcdevicespreviewpng altdevices preview 
 a
p
h1 aligncentercaloriesinh1

div aligncenter

 h3a webbased meal plan editor for people who prepare all of their foodh3
 
br 

live version httpscaloriesincom

demo video httpstellavideocaloriesin4onp

div

 background

the idea was born out of my experience of trying to find a better alternative to google sheets for calculating the macros of my meal plans i wanted to be able to do this on desktop as it ' s more convenient but nothing really felt fast and simple enough

a huge inspiration for me has been excalidrawcomhttpexcalidrawcom

 notable libraries

 chakra uihttpschakrauicom
 react beautiful dndhttpsgithubcomatlassianreactbeautifuldnd
 reactpdfhttpsreactpdforg
 comlinkloaderhttpsgithubcomgooglechromelabscomlinkloader
 react windowhttpsgithubcombvaughnreactwindow
 fusejshttpsfusejsio
 framer motionhttpswwwframercommotion
 feather iconshttpsfeathericonscom

 available scripts

in the project directory you can run

 yarn start

runs the app in the development mode
open httplocalhost3000httplocalhost3000 to view it in the browser

 yarn build

builds the app for production to the build folder
it correctly bundles react in production mode and optimizes the build for the best performance",p aligncent hrefhttpscaloriesincom targetblank img srcdevicespreviewpng altdevic preview p h1 aligncentercaloriesinh1 div aligncent h3a webbas meal plan editor peopl prepar foodh3 br live version httpscaloriesincom demo video httpstellavideocaloriesin4onp div background idea wa born experi tri find better altern googl sheet calcul macro meal plan want abl thi desktop ' conveni noth realli felt fast simpl enough huge inspir ha excalidrawcomhttpexcalidrawcom notabl librari chakra uihttpschakrauicom react beauti dndhttpsgithubcomatlassianreactbeautifuldnd reactpdfhttpsreactpdforg comlinkloaderhttpsgithubcomgooglechromelabscomlinkload react windowhttpsgithubcombvaughnreactwindow fusejshttpsfusejsio framer motionhttpswwwframercommot feather iconshttpsfeathericonscom avail script project directori run yarn start run app develop mode open httplocalhost3000httplocalhost3000 view browser yarn build build app product build folder correctli bundl react product mode optim build best perform,p aligncenter hrefhttpscaloriesincom targetblank img srcdevicespreviewpng altdevices preview p h1 aligncentercaloriesinh1 div aligncenter h3a webbased meal plan editor people prepare foodh3 br live version httpscaloriesincom demo video httpstellavideocaloriesin4onp div background idea wa born experience trying find better alternative google sheet calculating macro meal plan wanted able desktop ' convenient nothing really felt fast simple enough huge inspiration ha excalidrawcomhttpexcalidrawcom notable library chakra uihttpschakrauicom react beautiful dndhttpsgithubcomatlassianreactbeautifuldnd reactpdfhttpsreactpdforg comlinkloaderhttpsgithubcomgooglechromelabscomlinkloader react windowhttpsgithubcombvaughnreactwindow fusejshttpsfusejsio framer motionhttpswwwframercommotion feather iconshttpsfeathericonscom available script project directory run yarn start run app development mode open httplocalhost3000httplocalhost3000 view browser yarn build build app production build folder correctly bundle react production mode optimizes build best performance
JavaScript,"# Developing a Viber chatbot with DialogFlow (API.AI) and Node.js

In this example we are building a simple Viber chatbot using [DialogFlow](https://dialogflow.com/) and Node.js. The final chatbot will generate nutrition responses for users based on the inputs they provide. The bot uses the data.gov [nutrition facts API](https://ndb.nal.usda.gov/ndb/) as its source.

## Setup instructions

### Prerequisites
 1. [DialogFlow account](https://dialogflow.com)
 2. [Viber bot account](https://developers.viber.com)
 3. [Data.gov API key](https://api.data.gov/signup/)

See the developer guide at [developers.viber.com](https://developers.viber.com/docs/general/get-started/#get-started-with-bots/) for more details.

# Deploy to:
[![Deploy to Heroku](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)

### Steps
 1. Create a new agent in [DialogFlow](https://dialogflow.com/).
 1. Click on the project gear icon (![gear icon](img/API_AI_Project_Gear.png)) to see the project settings. 
 1. Select ""Export and Import"". 
 
	![](img/API_AI_Import.png)
	
 1. Select **""Restore from zip""**. Follow the directions to restore.
 1. Select the `ViberSampleAgent.zip` file in this repository.
 1. [Optional] Set your [Data.gov API key](https://api.data.gov/signup/) in the environment variable:
	 1. Copy the sample environment variable `cp .env.sample .env`. 
	 1. Edit `.env` with your Data.gov API key.
 1. Deploy this app to your preferred hosting environment.
 1. Set the **""Fulfillment""** webhook URL to the deployment url. For instance on Heroku it will look like this `https://[App Name].herokuapp.com/hook`.
 1. Enable Viber in the DialogFlow **""Integrations""** panel.
 1. For both `meal.info` and  `nutrition.info` **intents** check both ""Use webhook"" and ""Use webhook for slot-filling"" in the ""Fulfillment"" section, and save the intent. 

	![](img/API_AI_Webhook.png)

## References and how to report bugs
If you find any issues with this sample, please open a bug [here](../../issues/new) on GitHub.

## Terms
Your use of this sample is subject to, and by using or downloading the sample files you agree to comply with, the [Viber API Terms of Service](https://developers.viber.com/docs/general/api-terms-of-service/).
","developing a viber chatbot with dialogflow apiai and nodejs

in this example we are building a simple viber chatbot using dialogflowhttpsdialogflowcom and nodejs the final chatbot will generate nutrition responses for users based on the inputs they provide the bot uses the datagov nutrition facts apihttpsndbnalusdagovndb as its source

 setup instructions

 prerequisites
 1 dialogflow accounthttpsdialogflowcom
 2 viber bot accounthttpsdevelopersvibercom
 3 datagov api keyhttpsapidatagovsignup

see the developer guide at developersvibercomhttpsdevelopersvibercomdocsgeneralgetstartedgetstartedwithbots for more details

 deploy to
deploy to herokuhttpswwwherokucdncomdeploybuttonsvghttpsherokucomdeploy

 steps
 1 create a new agent in dialogflowhttpsdialogflowcom
 1 click on the project gear icon gear iconimgapiaiprojectgearpng to see the project settings 
 1 select export and import 
 
 &#9; imgapiaiimportpng
 &#9; 
 1 select restore from zip follow the directions to restore
 1 select the vibersampleagentzip file in this repository
 1 optional set your datagov api keyhttpsapidatagovsignup in the environment variable
 &#9; 1 copy the sample environment variable cp envsample env 
 &#9; 1 edit env with your datagov api key
 1 deploy this app to your preferred hosting environment
 1 set the fulfillment webhook url to the deployment url for instance on heroku it will look like this httpsapp nameherokuappcomhook
 1 enable viber in the dialogflow integrations panel
 1 for both mealinfo and nutritioninfo intents check both use webhook and use webhook for slotfilling in the fulfillment section and save the intent 

 &#9; imgapiaiwebhookpng

 references and how to report bugs
if you find any issues with this sample please open a bug hereissuesnew on github

 terms
your use of this sample is subject to and by using or downloading the sample files you agree to comply with the viber api terms of servicehttpsdevelopersvibercomdocsgeneralapitermsofservice",develop viber chatbot dialogflow apiai nodej thi exampl build simpl viber chatbot use dialogflowhttpsdialogflowcom nodej final chatbot gener nutrit respons user base input provid bot use datagov nutrit fact apihttpsndbnalusdagovndb sourc setup instruct prerequisit 1 dialogflow accounthttpsdialogflowcom 2 viber bot accounthttpsdevelopersvibercom 3 datagov api keyhttpsapidatagovsignup see develop guid developersvibercomhttpsdevelopersvibercomdocsgeneralgetstartedgetstartedwithbot detail deploy deploy herokuhttpswwwherokucdncomdeploybuttonsvghttpsherokucomdeploy step 1 creat new agent dialogflowhttpsdialogflowcom 1 click project gear icon gear iconimgapiaiprojectgearpng see project set 1 select export import &#9; imgapiaiimportpng &#9; 1 select restor zip follow direct restor 1 select vibersampleagentzip file thi repositori 1 option set datagov api keyhttpsapidatagovsignup environ variabl &#9; 1 copi sampl environ variabl cp envsampl env &#9; 1 edit env datagov api key 1 deploy thi app prefer host environ 1 set fulfil webhook url deploy url instanc heroku look like thi httpsapp nameherokuappcomhook 1 enabl viber dialogflow integr panel 1 mealinfo nutritioninfo intent check use webhook use webhook slotfil fulfil section save intent &#9; imgapiaiwebhookpng refer report bug find ani issu thi sampl pleas open bug hereissuesnew github term use thi sampl subject use download sampl file agre compli viber api term servicehttpsdevelopersvibercomdocsgeneralapitermsofservic,developing viber chatbot dialogflow apiai nodejs example building simple viber chatbot using dialogflowhttpsdialogflowcom nodejs final chatbot generate nutrition response user based input provide bot us datagov nutrition fact apihttpsndbnalusdagovndb source setup instruction prerequisite 1 dialogflow accounthttpsdialogflowcom 2 viber bot accounthttpsdevelopersvibercom 3 datagov api keyhttpsapidatagovsignup see developer guide developersvibercomhttpsdevelopersvibercomdocsgeneralgetstartedgetstartedwithbots detail deploy deploy herokuhttpswwwherokucdncomdeploybuttonsvghttpsherokucomdeploy step 1 create new agent dialogflowhttpsdialogflowcom 1 click project gear icon gear iconimgapiaiprojectgearpng see project setting 1 select export import &#9; imgapiaiimportpng &#9; 1 select restore zip follow direction restore 1 select vibersampleagentzip file repository 1 optional set datagov api keyhttpsapidatagovsignup environment variable &#9; 1 copy sample environment variable cp envsample env &#9; 1 edit env datagov api key 1 deploy app preferred hosting environment 1 set fulfillment webhook url deployment url instance heroku look like httpsapp nameherokuappcomhook 1 enable viber dialogflow integration panel 1 mealinfo nutritioninfo intent check use webhook use webhook slotfilling fulfillment section save intent &#9; imgapiaiwebhookpng reference report bug find issue sample please open bug hereissuesnew github term use sample subject using downloading sample file agree comply viber api term servicehttpsdevelopersvibercomdocsgeneralapitermsofservice
Python,"What is this?
=============
A series of four nutrition games: *Name That Food*; *How Many Calories?*; *How Much to Eat?*; and *Is This a Balanced Meal?*

How to use?
===========

Nutrition is not part of the Sugar desktop, but can be added.  Please refer to;

* [How to Get Sugar on sugarlabs.org](https://sugarlabs.org/),
* [How to use Sugar](https://help.sugarlabs.org/),
* [How to use Nutrition](https://help.sugarlabs.org/nutrition.html)

How to upgrade?
===============

On Sugar desktop systems;
* use [My Settings](https://help.sugarlabs.org/my_settings.html), [Software Update](https://help.sugarlabs.org/my_settings.html#software-update), or;
* use Browse to open [activities.sugarlabs.org](https://activities.sugarlabs.org/), search for `Nutrition`, then download.
","what is this

a series of four nutrition games name that food how many calories how much to eat and is this a balanced meal

how to use


nutrition is not part of the sugar desktop but can be added please refer to

 how to get sugar on sugarlabsorghttpssugarlabsorg
 how to use sugarhttpshelpsugarlabsorg
 how to use nutritionhttpshelpsugarlabsorgnutritionhtml

how to upgrade


on sugar desktop systems
 use my settingshttpshelpsugarlabsorgmysettingshtml software updatehttpshelpsugarlabsorgmysettingshtmlsoftwareupdate or
 use browse to open activitiessugarlabsorghttpsactivitiessugarlabsorg search for nutrition then download",thi seri four nutrit game name food mani calori much eat thi balanc meal use nutrit part sugar desktop ad pleas refer get sugar sugarlabsorghttpssugarlabsorg use sugarhttpshelpsugarlabsorg use nutritionhttpshelpsugarlabsorgnutritionhtml upgrad sugar desktop system use settingshttpshelpsugarlabsorgmysettingshtml softwar updatehttpshelpsugarlabsorgmysettingshtmlsoftwareupd use brows open activitiessugarlabsorghttpsactivitiessugarlabsorg search nutrit download,series four nutrition game name food many calorie much eat balanced meal use nutrition part sugar desktop added please refer get sugar sugarlabsorghttpssugarlabsorg use sugarhttpshelpsugarlabsorg use nutritionhttpshelpsugarlabsorgnutritionhtml upgrade sugar desktop system use settingshttpshelpsugarlabsorgmysettingshtml software updatehttpshelpsugarlabsorgmysettingshtmlsoftwareupdate use browse open activitiessugarlabsorghttpsactivitiessugarlabsorg search nutrition download
Python,"<p align=""center"">
    <img src=""img/qrcode.jpg"" width=""200px"">
</p>

<p align=""center""><span style=""font-size:50px"">iNutrition - 基于大数据挖掘的饮食推荐小程序</span>
</p>

- 基于 `Machine Learning` 的一款饮食推荐 `Mini Program`
- 如果觉得不错 给个 `Star` 支持一下 🤓

## 视频演示
- [Bilibili](https://www.bilibili.com/video/av83549884)
## 功能介绍
- 身体记录：记录身体数据，作为饮食推荐的依据，并给出健康评分。支持智能设备云同步
- 创建菜谱：自主搭配食材建立菜谱，动态对菜谱评分。使得用户在烹饪时拥有更大的自由度
- 食谱评分：过大数据挖掘和人工智能算法为个人饮食评分，数据库采用中国健康与营养调查横跨30年近2000万条数据。算法核心采用LightGBM，通过机器学习挖掘个人身体数据与饮食记录之间的关系。
- 食谱推荐：基于协同过滤推荐算法，综合地域、个人偏好、健康评分为个人推荐饮食。产品核心功能聚焦食谱评分与推荐，同时拥有丰富的用户交互体验。
- 饮食记录：一键添加菜谱到日记本，为每日食谱打卡。记录每一天的膳食，并根据膳食记录为用户评分。同时，用户的饮食数据也作为模型更新优化的依据。
- 线上商城：提供营养餐厅/轻食外卖/菜市场等接口，让用户节约用餐时间。线上健康商城售卖饮食健康相关的商品。小程序主要盈利点。
## 算法模型
![](./img/model.jpg)
## 声明
- 该项目为中国研究生智慧城市技术与创意设计大赛全国总决赛参赛作品。
- 本人负责前端开发、服务器开发、服务器部署和演示视频创作工作。 
- 该项目已于微信正式上线，但目前后端服务器处于关闭状态。","p aligncenter
 img srcimgqrcodejpg width200px
p

p aligncenterspan stylefontsize50pxinutrition span
p

 machine learning mini program
 star 

 
 bilibilihttpswwwbilibilicomvideoav83549884
 
 
 
 302000lightgbm
 
 
 
 
imgmodeljpg",p aligncent img srcimgqrcodejpg width200px p p aligncenterspan stylefontsize50pxinutrit span p machin learn mini program star bilibilihttpswwwbilibilicomvideoav83549884 302000lightgbm imgmodeljpg,p aligncenter img srcimgqrcodejpg width200px p p aligncenterspan stylefontsize50pxinutrition span p machine learning mini program star bilibilihttpswwwbilibilicomvideoav83549884 302000lightgbm imgmodeljpg
Python,"<h1 align=""center"">nutrigo</h1>
<p align=""center"">Calculate nutrition for your favourite recipe!</p>
<p align=""center"">
  <img alt=""Coveralls github branch"" src=""https://img.shields.io/coveralls/github/MakuZo/nutrigo/1.0.0-dev"">
<img alt=""Travis (.com)"" src=""https://img.shields.io/travis/com/MakuZo/nutrigo/1.0.0-dev.svg"">
</p>
<p align=""center"">Try live <a href=""https://nutrigo.makuzo.usermd.net"">here</a></p>
<p align=""center"">
<img align=""center"" width=""70%"" height=""70%"" src=""https://i.imgur.com/7zhqcxq.jpg""></img>
</p>

## Overview

Nutrigo uses basic parsing techniques and USDA's Food Database to calculate nutrition for recipes.
Nevertheless it provides good results for well-structured and uncomplicated recipes (ingredient list).

## Installing

nutrigo requires [Python](https://www.python.org/) 3.6+ to run.

Install the dependencies using [Pipenv](https://github.com/pypa/pipenv), download corpora and run the server.

```sh
$ pipenv install --dev
$ python3 -m textblob.download_corpora
$ python3 manage.py runserver
```

## Usage

Open your web browser, type ```localhost:8000``` and enter recipe url.

## Running with Docker Compose

```sh
$ docker-compose build nutrigo
$ docker-compose up nutrigo
```

## Supported websites
--Note that parsing third-party websites is only possible by using API Endpoint /api/calculate-from-url

So far the only supported websites are:
Yummly.com, KwestiaSmaku.com

Adding support for a recipe website is very simple. See recipe.py for examples.

## Running the tests

```sh
$ pytest
```

## Contribution

Feel free to contribute to the project by creating pull requests!

## Built With

* [Django](https://www.djangoproject.com/) - Python Web framework
* [Django REST framework](https://www.django-rest-framework.org/) - Django REST framework

## License

This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details
","h1 aligncenternutrigoh1
p aligncentercalculate nutrition for your favourite recipep
p aligncenter
 img altcoveralls github branch srchttpsimgshieldsiocoverallsgithubmakuzonutrigo100dev
img alttravis com srchttpsimgshieldsiotraviscommakuzonutrigo100devsvg
p
p aligncentertry live a hrefhttpsnutrigomakuzousermdnethereap
p aligncenter
img aligncenter width70 height70 srchttpsiimgurcom7zhqcxqjpgimg
p

 overview

nutrigo uses basic parsing techniques and usda ' s food database to calculate nutrition for recipes
nevertheless it provides good results for wellstructured and uncomplicated recipes ingredient list

 installing

nutrigo requires pythonhttpswwwpythonorg 36 to run

install the dependencies using pipenvhttpsgithubcompypapipenv download corpora and run the server

sh
 pipenv install dev
 python3 m textblobdownloadcorpora
 python3 managepy runserver


 usage

open your web browser type localhost8000 and enter recipe url

 running with docker compose

sh
 dockercompose build nutrigo
 dockercompose up nutrigo


 supported websites
note that parsing thirdparty websites is only possible by using api endpoint apicalculatefromurl

so far the only supported websites are
yummlycom kwestiasmakucom

adding support for a recipe website is very simple see recipepy for examples

 running the tests

sh
 pytest


 contribution

feel free to contribute to the project by creating pull requests

 built with

 djangohttpswwwdjangoprojectcom python web framework
 django rest frameworkhttpswwwdjangorestframeworkorg django rest framework

 license

this project is licensed under the mit license see the licensemdlicensemd file for details",h1 aligncenternutrigoh1 p aligncentercalcul nutrit favourit recipep p aligncent img altcoveral github branch srchttpsimgshieldsiocoverallsgithubmakuzonutrigo100dev img alttravi com srchttpsimgshieldsiotraviscommakuzonutrigo100devsvg p p aligncentertri live hrefhttpsnutrigomakuzousermdnethereap p aligncent img aligncent width70 height70 srchttpsiimgurcom7zhqcxqjpgimg p overview nutrigo use basic pars techniqu usda ' food databas calcul nutrit recip nevertheless provid good result wellstructur uncompl recip ingredi list instal nutrigo requir pythonhttpswwwpythonorg 36 run instal depend use pipenvhttpsgithubcompypapipenv download corpora run server sh pipenv instal dev python3 textblobdownloadcorpora python3 managepi runserv usag open web browser type localhost8000 enter recip url run docker compos sh dockercompos build nutrigo dockercompos nutrigo support websit note pars thirdparti websit onli possibl use api endpoint apicalculatefromurl far onli support websit yummlycom kwestiasmakucom ad support recip websit veri simpl see recipepi exampl run test sh pytest contribut feel free contribut project creat pull request built djangohttpswwwdjangoprojectcom python web framework django rest frameworkhttpswwwdjangorestframeworkorg django rest framework licens thi project licens mit licens see licensemdlicensemd file detail,h1 aligncenternutrigoh1 p aligncentercalculate nutrition favourite recipep p aligncenter img altcoveralls github branch srchttpsimgshieldsiocoverallsgithubmakuzonutrigo100dev img alttravis com srchttpsimgshieldsiotraviscommakuzonutrigo100devsvg p p aligncentertry live hrefhttpsnutrigomakuzousermdnethereap p aligncenter img aligncenter width70 height70 srchttpsiimgurcom7zhqcxqjpgimg p overview nutrigo us basic parsing technique usda ' food database calculate nutrition recipe nevertheless provides good result wellstructured uncomplicated recipe ingredient list installing nutrigo requires pythonhttpswwwpythonorg 36 run install dependency using pipenvhttpsgithubcompypapipenv download corpus run server sh pipenv install dev python3 textblobdownloadcorpora python3 managepy runserver usage open web browser type localhost8000 enter recipe url running docker compose sh dockercompose build nutrigo dockercompose nutrigo supported website note parsing thirdparty website possible using api endpoint apicalculatefromurl far supported website yummlycom kwestiasmakucom adding support recipe website simple see recipepy example running test sh pytest contribution feel free contribute project creating pull request built djangohttpswwwdjangoprojectcom python web framework django rest frameworkhttpswwwdjangorestframeworkorg django rest framework license project licensed mit license see licensemdlicensemd file detail
R,"# Nutrient Calculator

Purpose of app: calculate nutrition data for food and recipes, and visualizing % daily nutrient values.
Data Source: Canadian Nutrient File 2015 (as [R package](https://github.com/yihanwu/CAnutrients))

Nutrition calculators are frequently used to estimate nutritional content of food and recipes. 
Online free nutrition calculators based on Canadian nutrient data are rare beyond [Dietitians of Canada](https://www.eatracker.ca/recipe_analyzer.aspx),
 a basic nutrient calculator reporting values only. The alternatives for calculating nutrition are 
pricy proprietary nutrient calculator software and food analysis labs.

Nutrient Calculator is built as a shiny dashboard where users can easily search and add multiple ingredients from the CNF database, 
calculate overall nutrient data such as calories and sodium, and see nutrient amounts as percentage recommended daily values. 
Total calorie count, nutrients amounts which surpass 100% and 50% daily value are highlighted in valueboxes at the top. 
Macronutrients, minerals and vitamins are visualized on separated bar graphs. 

[Shinyapps](https://yihanw.shinyapps.io/Recipe_Nutrition/)

[RCloud Instance](https://rstudio.cloud/project/256494)

[Github Repository](https://github.com/yihanwu/Nutrient_Calculator)

## Search for a variety of ingredients and foods, see in-depth nutrient data. 

![Search and select ingredients](https://github.com/yihanwu/Nutrient_Calculator/blob/master/shiny-gif1.gif)

## Add and remove ingredients to calculate overall nutrition values.

![Add and remove an ingredient](https://github.com/yihanwu/Nutrient_Calculator/blob/master/shiny-gif3.gif)

## Use serving amounts in recipe 

![Change serving amount](https://github.com/yihanwu/Nutrient_Calculator/blob/master/shiny-gif2.gif)
","nutrient calculator

purpose of app calculate nutrition data for food and recipes and visualizing daily nutrient values
data source canadian nutrient file 2015 as r packagehttpsgithubcomyihanwucanutrients

nutrition calculators are frequently used to estimate nutritional content of food and recipes 
online free nutrition calculators based on canadian nutrient data are rare beyond dietitians of canadahttpswwweatrackercarecipeanalyzeraspx
 a basic nutrient calculator reporting values only the alternatives for calculating nutrition are 
pricy proprietary nutrient calculator software and food analysis labs

nutrient calculator is built as a shiny dashboard where users can easily search and add multiple ingredients from the cnf database 
calculate overall nutrient data such as calories and sodium and see nutrient amounts as percentage recommended daily values 
total calorie count nutrients amounts which surpass 100 and 50 daily value are highlighted in valueboxes at the top 
macronutrients minerals and vitamins are visualized on separated bar graphs 

shinyappshttpsyihanwshinyappsiorecipenutrition

rcloud instancehttpsrstudiocloudproject256494

github repositoryhttpsgithubcomyihanwunutrientcalculator

 search for a variety of ingredients and foods see indepth nutrient data 

search and select ingredientshttpsgithubcomyihanwunutrientcalculatorblobmastershinygif1gif

 add and remove ingredients to calculate overall nutrition values

add and remove an ingredienthttpsgithubcomyihanwunutrientcalculatorblobmastershinygif3gif

 use serving amounts in recipe 

change serving amounthttpsgithubcomyihanwunutrientcalculatorblobmastershinygif2gif",nutrient calcul purpos app calcul nutrit data food recip visual daili nutrient valu data sourc canadian nutrient file 2015 r packagehttpsgithubcomyihanwucanutri nutrit calcul frequent use estim nutrit content food recip onlin free nutrit calcul base canadian nutrient data rare beyond dietitian canadahttpswwweatrackercarecipeanalyzeraspx basic nutrient calcul report valu onli altern calcul nutrit prici proprietari nutrient calcul softwar food analysi lab nutrient calcul built shini dashboard user easili search add multipl ingredi cnf databas calcul overal nutrient data calori sodium see nutrient amount percentag recommend daili valu total calori count nutrient amount surpass 100 50 daili valu highlight valuebox top macronutri miner vitamin visual separ bar graph shinyappshttpsyihanwshinyappsiorecipenutrit rcloud instancehttpsrstudiocloudproject256494 github repositoryhttpsgithubcomyihanwunutrientcalcul search varieti ingredi food see indepth nutrient data search select ingredientshttpsgithubcomyihanwunutrientcalculatorblobmastershinygif1gif add remov ingredi calcul overal nutrit valu add remov ingredienthttpsgithubcomyihanwunutrientcalculatorblobmastershinygif3gif use serv amount recip chang serv amounthttpsgithubcomyihanwunutrientcalculatorblobmastershinygif2gif,nutrient calculator purpose app calculate nutrition data food recipe visualizing daily nutrient value data source canadian nutrient file 2015 r packagehttpsgithubcomyihanwucanutrients nutrition calculator frequently used estimate nutritional content food recipe online free nutrition calculator based canadian nutrient data rare beyond dietitian canadahttpswwweatrackercarecipeanalyzeraspx basic nutrient calculator reporting value alternative calculating nutrition pricy proprietary nutrient calculator software food analysis lab nutrient calculator built shiny dashboard user easily search add multiple ingredient cnf database calculate overall nutrient data calorie sodium see nutrient amount percentage recommended daily value total calorie count nutrient amount surpass 100 50 daily value highlighted valueboxes top macronutrients mineral vitamin visualized separated bar graph shinyappshttpsyihanwshinyappsiorecipenutrition rcloud instancehttpsrstudiocloudproject256494 github repositoryhttpsgithubcomyihanwunutrientcalculator search variety ingredient food see indepth nutrient data search select ingredientshttpsgithubcomyihanwunutrientcalculatorblobmastershinygif1gif add remove ingredient calculate overall nutrition value add remove ingredienthttpsgithubcomyihanwunutrientcalculatorblobmastershinygif3gif use serving amount recipe change serving amounthttpsgithubcomyihanwunutrientcalculatorblobmastershinygif2gif
Elixir,"[![Build Status](https://travis-ci.org/openpantry/open_pantry.svg?branch=master)](https://travis-ci.org/openpantry/open_pantry)
# OpenPantry
## A management system for pantry programs to help people eat healthy meals with dignity

  * NOTES:
    * We are moving towards a SaaS like model, with one subdomain per facility, and facilities are managed by super-admins or by facility specific admins
    * Masbia has several locations, but we're trying to validate the scope and use-case for other organizations, please get in touch if you work with one 
    * Users are created/managed per facility on a user_selections page, and globally in a /manage/users page.
    * Food recipients are managed as users and can be logged in via magic login-links to be clicked on or emailed to them
    * We've been using ZenHub chrome extension for project management but this has caused some confusion, so we may move away from it...
    * Some mockups and UX flow for where we're trying to head are posted [here](https://invis.io/QPBK7WPB3).  
    * We initially attempted to make this multi lingual from the start but have largely deferred this work until things are more stable.
      * We have partial translations started for 9 languages
      * We have thousands of foods from USDA nutritional database ready for dynamic translation
      * We are using POEditor.com for static site translation, contribute to translations here: https://poeditor.com/join/project/wBfgEEUCht
      * We probably need to move to a database driven translation system for foods, given the quantity we are trying to manage, but we still need translation help.
      * Our curent best source for food images, facts and translations may be https://us.openfoodfacts.org/ but we started with USDA database and much work is needed to leverage/combine and rework the data model to pull photos and translations from openfoodfacts

  * Getting started with development:
    * Mac homebrew:
      * ensure homebrew is installed (instructions at https://brew.sh/ or paste `/usr/bin/ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""` into terminal)
      * brew bundle
        * This will install elixir, erlang, yarn, and download Postgres.app which has postgis preinstalled
        * It will cd into assets directory and install npm packages via yarn
        * You can use another postgres, but you may have to manually install postgis
      * run from open_pantry dir `mix do deps.get, ecto.create, ecto.migrate, run priv/repo/seeds.exs`
      * Start Phoenix endpoint with `mix phx.server`, or `iex -S mix phx.server` (this gives a server and REPL/console in one window)
    * Docker/docker-compose (fake, factory generated data but no dependencies)
      * Install docker (on most systems this also installs docker-compose)
      * Clone the OpenPantry repo and cd into directory
      * Run `docker-compose run setup`
      * Run `docker-compose up web`
    * Local/native development on Mac/Linux manually, without automation from `brew bundle` via Brewfile above (detailed instructions only for Mac at present, similar for linux)
      * Install Postgres (Mac)
          * Download and install the Postgresapp.com from [their site](https://postgresapp.com/documentation/install.html)
              * Execute the following command in Terminal to configure your $PATH, and then close & reopen the window:
              `sudo mkdir -p /etc/paths.d &&
                echo /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp`
          * Alternatively install Postgres with Homebrew
              * Execute (`brew install postgres`) in Terminal
      * if using Postgres.app you must initialize a data directory after installing, and follow instructions for adding CLI tools to your Terminal path...  `which psql` but succeed when done
        * (instructions defaulting to Mac below... for simplicity, linux users extrapolate, Windows, I have no idea, PR's with instructions for either/both welcome)
      * Install Elixir/Erlang (`brew install elixir`)
      * Install NPM and yarn (`brew install node && npm install -g yarn`)
      * Clone this repository locally, `git clone git@github.com:openpantry/open_pantry.git`
      * cd into the directory `cd open_pantry`
      * Download database from s3 via `wget https://s3.amazonaws.com/open-pantry-dev/openpantry_dev.dump`
        * Note we had problems with this dump being improperly generated recently.  I beleive the problem is fixed, but if you downloaded previously or have problems please contact someone for support, it's probably not your fault!
        * Dumps and restores are based on the method described here: https://devcenter.heroku.com/articles/heroku-postgres-import-export
      * Install Elixir package dependencies with `mix deps.get`
      * Create the database in Postgres with `mix ecto.create`, assuming default password etc in config works.
      * Migrate the database to add migrations since dump was created, via `mix ecto.migrate`
      * Import the dump to the database via `pg_restore --verbose --clean --no-acl --no-owner -h localhost -U postgres -d open_pantry_dev openpantry.dump`
      * Install Node.js dependencies with `yarn install`
      * Start Phoenix endpoint with `mix phx.server`, or `iex -S mix phx.server` (this gives a server and REPL/console in one window)
    * ALTERNATIVELY (and with much less detail), if you DON'T WANT TO USE the dump file referenced above/want to generate a dump from scratch, the above dump was generated with a complete USDA food/nutrient database approximately as below, along with non-dump steps above:
      * Create and migrate your database with `mix ecto.create && mix ecto.migrate`
      * Git clone https://github.com/openpantry/nutes locally and run make, modifying if necessary to point at your Postgres DB and the directory path to your local copy in imports.sql (requires golang to build data_cleanup tool)
      * Add seed data with `mix run priv/repo/seeds.exs` but modify to leave out foods/stocks as these are fakes generated by factories, you have real food from USDA

Now you can visit [`localhost:4000`](http://localhost:4000) from your browser.

## Learn more

  * Masbia Pantry: http://www.masbia.org/pantry
  * Volunteer to help develop this app, or other work with Masbia: http://www.masbia.org/volunteer_signup
","build statushttpstravisciorgopenpantryopenpantrysvgbranchmasterhttpstravisciorgopenpantryopenpantry
 openpantry
 a management system for pantry programs to help people eat healthy meals with dignity

 notes
 we are moving towards a saas like model with one subdomain per facility and facilities are managed by superadmins or by facility specific admins
 masbia has several locations but we ' re trying to validate the scope and usecase for other organizations please get in touch if you work with one 
 users are createdmanaged per facility on a userselections page and globally in a manageusers page
 food recipients are managed as users and can be logged in via magic loginlinks to be clicked on or emailed to them
 we ' ve been using zenhub chrome extension for project management but this has caused some confusion so we may move away from it
 some mockups and ux flow for where we ' re trying to head are posted herehttpsinvisioqpbk7wpb3 
 we initially attempted to make this multi lingual from the start but have largely deferred this work until things are more stable
 we have partial translations started for 9 languages
 we have thousands of foods from usda nutritional database ready for dynamic translation
 we are using poeditorcom for static site translation contribute to translations here httpspoeditorcomjoinprojectwbfgeeucht
 we probably need to move to a database driven translation system for foods given the quantity we are trying to manage but we still need translation help
 our curent best source for food images facts and translations may be httpsusopenfoodfactsorg but we started with usda database and much work is needed to leveragecombine and rework the data model to pull photos and translations from openfoodfacts

 getting started with development
 mac homebrew
 ensure homebrew is installed instructions at httpsbrewsh or paste usrbinruby e curl fssl httpsrawgithubusercontentcomhomebrewinstallmasterinstall into terminal
 brew bundle
 this will install elixir erlang yarn and download postgresapp which has postgis preinstalled
 it will cd into assets directory and install npm packages via yarn
 you can use another postgres but you may have to manually install postgis
 run from openpantry dir mix do depsget ectocreate ectomigrate run privreposeedsexs
 start phoenix endpoint with mix phxserver or iex s mix phxserver this gives a server and replconsole in one window
 dockerdockercompose fake factory generated data but no dependencies
 install docker on most systems this also installs dockercompose
 clone the openpantry repo and cd into directory
 run dockercompose run setup
 run dockercompose up web
 localnative development on maclinux manually without automation from brew bundle via brewfile above detailed instructions only for mac at present similar for linux
 install postgres mac
 download and install the postgresappcom from their sitehttpspostgresappcomdocumentationinstallhtml
 execute the following command in terminal to configure your path and then close reopen the window
 sudo mkdir p etcpathsd 
 echo applicationspostgresappcontentsversionslatestbin sudo tee etcpathsdpostgresapp
 alternatively install postgres with homebrew
 execute brew install postgres in terminal
 if using postgresapp you must initialize a data directory after installing and follow instructions for adding cli tools to your terminal path which psql but succeed when done
 instructions defaulting to mac below for simplicity linux users extrapolate windows i have no idea pr ' s with instructions for eitherboth welcome
 install elixirerlang brew install elixir
 install npm and yarn brew install node npm install g yarn
 clone this repository locally git clone gitgithubcomopenpantryopenpantrygit
 cd into the directory cd openpantry
 download database from s3 via wget httpss3amazonawscomopenpantrydevopenpantrydevdump
 note we had problems with this dump being improperly generated recently i beleive the problem is fixed but if you downloaded previously or have problems please contact someone for support it ' s probably not your fault
 dumps and restores are based on the method described here httpsdevcenterherokucomarticlesherokupostgresimportexport
 install elixir package dependencies with mix depsget
 create the database in postgres with mix ectocreate assuming default password etc in config works
 migrate the database to add migrations since dump was created via mix ectomigrate
 import the dump to the database via pgrestore verbose clean noacl noowner h localhost u postgres d openpantrydev openpantrydump
 install nodejs dependencies with yarn install
 start phoenix endpoint with mix phxserver or iex s mix phxserver this gives a server and replconsole in one window
 alternatively and with much less detail if you don ' t want to use the dump file referenced abovewant to generate a dump from scratch the above dump was generated with a complete usda foodnutrient database approximately as below along with nondump steps above
 create and migrate your database with mix ectocreate mix ectomigrate
 git clone httpsgithubcomopenpantrynutes locally and run make modifying if necessary to point at your postgres db and the directory path to your local copy in importssql requires golang to build datacleanup tool
 add seed data with mix run privreposeedsexs but modify to leave out foodsstocks as these are fakes generated by factories you have real food from usda

now you can visit localhost4000httplocalhost4000 from your browser

 learn more

 masbia pantry httpwwwmasbiaorgpantry
 volunteer to help develop this app or other work with masbia httpwwwmasbiaorgvolunteersignup",build statushttpstravisciorgopenpantryopenpantrysvgbranchmasterhttpstravisciorgopenpantryopenpantri openpantri manag system pantri program help peopl eat healthi meal digniti note move toward saa like model one subdomain per facil facil manag superadmin facil specif admin masbia ha sever locat ' tri valid scope usecas organ pleas get touch work one user createdmanag per facil userselect page global manageus page food recipi manag user log via magic loginlink click email ' use zenhub chrome extens project manag thi ha caus confus may move away mockup ux flow ' tri head post herehttpsinvisioqpbk7wpb3 initi attempt make thi multi lingual start larg defer thi work thing stabl partial translat start 9 languag thousand food usda nutrit databas readi dynam translat use poeditorcom static site translat contribut translat httpspoeditorcomjoinprojectwbfgeeucht probabl need move databas driven translat system food given quantiti tri manag still need translat help curent best sourc food imag fact translat may httpsusopenfoodfactsorg start usda databas much work need leveragecombin rework data model pull photo translat openfoodfact get start develop mac homebrew ensur homebrew instal instruct httpsbrewsh past usrbinrubi e curl fssl httpsrawgithubusercontentcomhomebrewinstallmasterinstal termin brew bundl thi instal elixir erlang yarn download postgresapp ha postgi preinstal cd asset directori instal npm packag via yarn use anoth postgr may manual instal postgi run openpantri dir mix depsget ectocr ectomigr run privreposeedsex start phoenix endpoint mix phxserver iex mix phxserver thi give server replconsol one window dockerdockercompos fake factori gener data depend instal docker system thi also instal dockercompos clone openpantri repo cd directori run dockercompos run setup run dockercompos web localn develop maclinux manual without autom brew bundl via brewfil abov detail instruct onli mac present similar linux instal postgr mac download instal postgresappcom sitehttpspostgresappcomdocumentationinstallhtml execut follow command termin configur path close reopen window sudo mkdir p etcpathsd echo applicationspostgresappcontentsversionslatestbin sudo tee etcpathsdpostgresapp altern instal postgr homebrew execut brew instal postgr termin use postgresapp must initi data directori instal follow instruct ad cli tool termin path psql succeed done instruct default mac simplic linux user extrapol window idea pr ' instruct eitherboth welcom instal elixirerlang brew instal elixir instal npm yarn brew instal node npm instal g yarn clone thi repositori local git clone gitgithubcomopenpantryopenpantrygit cd directori cd openpantri download databas s3 via wget httpss3amazonawscomopenpantrydevopenpantrydevdump note problem thi dump improperli gener recent beleiv problem fix download previous problem pleas contact someon support ' probabl fault dump restor base method describ httpsdevcenterherokucomarticlesherokupostgresimportexport instal elixir packag depend mix depsget creat databas postgr mix ectocr assum default password etc config work migrat databas add migrat sinc dump wa creat via mix ectomigr import dump databas via pgrestor verbos clean noacl noowner h localhost u postgr openpantrydev openpantrydump instal nodej depend yarn instal start phoenix endpoint mix phxserver iex mix phxserver thi give server replconsol one window altern much less detail ' want use dump file referenc abovew gener dump scratch abov dump wa gener complet usda foodnutri databas approxim along nondump step abov creat migrat databas mix ectocr mix ectomigr git clone httpsgithubcomopenpantrynut local run make modifi necessari point postgr db directori path local copi importssql requir golang build datacleanup tool add seed data mix run privreposeedsex modifi leav foodsstock fake gener factori real food usda visit localhost4000httplocalhost4000 browser learn masbia pantri httpwwwmasbiaorgpantri volunt help develop thi app work masbia httpwwwmasbiaorgvolunteersignup,build statushttpstravisciorgopenpantryopenpantrysvgbranchmasterhttpstravisciorgopenpantryopenpantry openpantry management system pantry program help people eat healthy meal dignity note moving towards saas like model one subdomain per facility facility managed superadmins facility specific admins masbia ha several location ' trying validate scope usecase organization please get touch work one user createdmanaged per facility userselections page globally manageusers page food recipient managed user logged via magic loginlinks clicked emailed ' using zenhub chrome extension project management ha caused confusion may move away mockups ux flow ' trying head posted herehttpsinvisioqpbk7wpb3 initially attempted make multi lingual start largely deferred work thing stable partial translation started 9 language thousand food usda nutritional database ready dynamic translation using poeditorcom static site translation contribute translation httpspoeditorcomjoinprojectwbfgeeucht probably need move database driven translation system food given quantity trying manage still need translation help curent best source food image fact translation may httpsusopenfoodfactsorg started usda database much work needed leveragecombine rework data model pull photo translation openfoodfacts getting started development mac homebrew ensure homebrew installed instruction httpsbrewsh paste usrbinruby e curl fssl httpsrawgithubusercontentcomhomebrewinstallmasterinstall terminal brew bundle install elixir erlang yarn download postgresapp ha postgis preinstalled cd asset directory install npm package via yarn use another postgres may manually install postgis run openpantry dir mix depsget ectocreate ectomigrate run privreposeedsexs start phoenix endpoint mix phxserver iex mix phxserver give server replconsole one window dockerdockercompose fake factory generated data dependency install docker system also installs dockercompose clone openpantry repo cd directory run dockercompose run setup run dockercompose web localnative development maclinux manually without automation brew bundle via brewfile detailed instruction mac present similar linux install postgres mac download install postgresappcom sitehttpspostgresappcomdocumentationinstallhtml execute following command terminal configure path close reopen window sudo mkdir p etcpathsd echo applicationspostgresappcontentsversionslatestbin sudo tee etcpathsdpostgresapp alternatively install postgres homebrew execute brew install postgres terminal using postgresapp must initialize data directory installing follow instruction adding cli tool terminal path psql succeed done instruction defaulting mac simplicity linux user extrapolate window idea pr ' instruction eitherboth welcome install elixirerlang brew install elixir install npm yarn brew install node npm install g yarn clone repository locally git clone gitgithubcomopenpantryopenpantrygit cd directory cd openpantry download database s3 via wget httpss3amazonawscomopenpantrydevopenpantrydevdump note problem dump improperly generated recently beleive problem fixed downloaded previously problem please contact someone support ' probably fault dump restores based method described httpsdevcenterherokucomarticlesherokupostgresimportexport install elixir package dependency mix depsget create database postgres mix ectocreate assuming default password etc config work migrate database add migration since dump wa created via mix ectomigrate import dump database via pgrestore verbose clean noacl noowner h localhost u postgres openpantrydev openpantrydump install nodejs dependency yarn install start phoenix endpoint mix phxserver iex mix phxserver give server replconsole one window alternatively much le detail ' want use dump file referenced abovewant generate dump scratch dump wa generated complete usda foodnutrient database approximately along nondump step create migrate database mix ectocreate mix ectomigrate git clone httpsgithubcomopenpantrynutes locally run make modifying necessary point postgres db directory path local copy importssql requires golang build datacleanup tool add seed data mix run privreposeedsexs modify leave foodsstocks fake generated factory real food usda visit localhost4000httplocalhost4000 browser learn masbia pantry httpwwwmasbiaorgpantry volunteer help develop app work masbia httpwwwmasbiaorgvolunteersignup
Python,"The USDA has a database of nutritional information for many foods available at:

  http://www.ars.usda.gov/Services/docs.htm?docid=8964

By default it's contained in flat files. This project includes scripts to generate appropriate schema and import them into a SQLite database. I've also hand generated a subset of the nutrients that includes commonly-familiar nutrients vs. the very extensive list provided by the USDA.

You will need to first download the files and unzip them into the data directory, e.g. for release SR24

  cd data
  wget http://www.ars.usda.gov/SP2UserFiles/Place/12354500/Data/SR24/dnload/sr24.zip
  unzip sr24.zip

Then just run create_db.sh with the name of the file you want to make:

  ./create_db.sh usda.sql3

For convenience I've included the data files for SR24 in the data directory. I've also included the resulting db for convenience if you just want to use it directly. On my system it takes about 10 seconds to populate the db.

I've included two simple python scripts that let you search for food items and print out nutritional facts in json.
","the usda has a database of nutritional information for many foods available at

 httpwwwarsusdagovservicesdocshtmdocid8964

by default it ' s contained in flat files this project includes scripts to generate appropriate schema and import them into a sqlite database i ' ve also hand generated a subset of the nutrients that includes commonlyfamiliar nutrients vs the very extensive list provided by the usda

you will need to first download the files and unzip them into the data directory eg for release sr24

 cd data
 wget httpwwwarsusdagovsp2userfilesplace12354500datasr24dnloadsr24zip
 unzip sr24zip

then just run createdbsh with the name of the file you want to make

 createdbsh usdasql3

for convenience i ' ve included the data files for sr24 in the data directory i ' ve also included the resulting db for convenience if you just want to use it directly on my system it takes about 10 seconds to populate the db

i ' ve included two simple python scripts that let you search for food items and print out nutritional facts in json",usda ha databas nutrit inform mani food avail httpwwwarsusdagovservicesdocshtmdocid8964 default ' contain flat file thi project includ script gener appropri schema import sqlite databas ' also hand gener subset nutrient includ commonlyfamiliar nutrient vs veri extens list provid usda need first download file unzip data directori eg releas sr24 cd data wget httpwwwarsusdagovsp2userfilesplace12354500datasr24dnloadsr24zip unzip sr24zip run createdbsh name file want make createdbsh usdasql3 conveni ' includ data file sr24 data directori ' also includ result db conveni want use directli system take 10 second popul db ' includ two simpl python script let search food item print nutrit fact json,usda ha database nutritional information many food available httpwwwarsusdagovservicesdocshtmdocid8964 default ' contained flat file project includes script generate appropriate schema import sqlite database ' also hand generated subset nutrient includes commonlyfamiliar nutrient v extensive list provided usda need first download file unzip data directory eg release sr24 cd data wget httpwwwarsusdagovsp2userfilesplace12354500datasr24dnloadsr24zip unzip sr24zip run createdbsh name file want make createdbsh usdasql3 convenience ' included data file sr24 data directory ' also included resulting db convenience want use directly system take 10 second populate db ' included two simple python script let search food item print nutritional fact json
Python,"The internet is full of recipes. A recipe is really only the *directions* and the *ingredients*, but for any given recipe website you always get a lot more information thatn you want (comments, links, advertisements). For instance the page for [Alton Brown's waffle](http://www.foodnetwork.com/recipes/alton-brown/basic-waffle-recipe.html) recipe looks like this:

![Website example](https://rpiai.files.wordpress.com/2015/02/webcontentgrabber-01.png)

How can you just pull out the directions and ingredients, in a tag-independent way that can be used across any website?

# Recipe extractor

## How it works

First it grabs the Markdown-formatted text of the html page using [html2text](https://github.com/aaronsw/html2text).  It evalutes the number of 'cooking' related words in each line and pulls out the peak.

![Website example](https://i.imgur.com/enu0SNA.jpg?1)

It does the same for extracting the ingredient list. Then it scans the directions and the ingredient list to determine what the *actual* baking time would be and gives that estimate. Finally, it parses the measurements and foods in the ingredient list and cross-references the USDA SR27 food databse to get accurate estimations of the nutrition content.

# To Do

- ~~Extract recipes.~~
- ~~Extract ingredients.~~
- ~~Cross references ingredients and measurements to USDA database.~~
- ~~Make AJAX interface.~~
- ~~Better identifying common foods in USDA database~~
- ~~Simpler conversion between food dimensions/weights~~
- ~~Add in pricing~~ 
- Save data as JSON
- Clean up code by splitting into files
- Better error handling
- Add nice CSS into web interface.
- Add in photos of foods

## Installation

### Requirements

```
sudo apt-get install python-nltk
sudo pip install pint
```

Then goto python console
```python
>>> import nltk
>>> nltk.download('brown')
>>> nltk.download('maxent_treebank_pos_tagger')
>>> nltk.download('wordnet')
```

Clone the [SR27 database downloader](https://github.com/tscholl2/fudgen) and run the makefile to generate the database. Copy the database into the same folder. Then go into the database and make sqlite3 fts4 virtual table

```sql
drop table data;
drop table nutrition_date;
drop table nutrition_def;

create virtual table data using fts4(ndb_no,shrt_desc,long_desc,com_desc);
insert into data(ndb_no,shrt_desc,long_desc,com_desc) select ndb_no,shrt_desc,long_desc,com_desc from food_des;

create virtual table nutrition_data using fts4(ndb_no,nutr_no,nutr_val);
insert into nutrition_data(ndb_no,nutr_no,nutr_val) select ndb_no,nutr_no,nutr_val from nut_data;

create virtual table nutrition_def using fts4(nutr_no,units,tagname);
insert into nutrition_def(nutr_no,units,tagname) select nutr_no,units,tagname from nutr_def;
```




## Example Output

Visit the current incantation at http://ips.colab.duke.edu:8081/extractor.html and run which shows the extraction of the following recipe: [http://www.foodnetwork.com/recipes/alton-brown/baked-macaroni-and-cheese-recipe.html](http://www.foodnetwork.com/recipes/alton-brown/baked-macaroni-and-cheese-recipe.html).


--------------------

# Ingredients

  * 1/2 pound elbow macaroni
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/20099.jpg' width=50>2 1/8 cup elbow shaped Macaroni, dry, enriched (226.8 grams) - $3.76

  * 3 tablespoons butter
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/01001.jpg' width=50>3.0 tbsp Butter, salted (42.6 grams) - $1.08

  * 3 tablespoons flour
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/20581.jpg' width=50>1/8 cup Wheat flour, white, all-purpose, enriched, unbleached (23.4 grams) - $0.12

  * 1 tablespoon powdered mustard
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/02046.jpg' width=50>3 1/8 tsp or 1 packet Mustard, prepared, yellow (15.6 grams) - $0.41

  * 3 cups milk
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/01077.jpg' width=50>3/4 quart Milk, whole, 3.25% milkfat, with added vitamin D (732.0 grams) - $0.58

  * 1/2 cup yellow onion, finely diced
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/11282.jpg' width=50>1.0 cup, sliced Onions, raw (118.3 grams) - $3.93

  * 1 bay leaf
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/02004.png' width=50>1.0 tsp, crumbled Spices, bay leaf (0.6 grams) - $0.09

  * 1/2 teaspoon paprika
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/02028.jpg' width=50>1/3 tsp Spices, paprika (1.1 grams) - $0.07

  * 1 large egg
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/01123.jpg' width=50>1.0 small Egg, whole, raw, fresh (38.0 grams) - $0.19

  * 12 ounces sharp cheddar, shredded
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/01270.jpg' width=50>12 1/8 slice 1 oz. slice CHEESE,CHEDDAR,SHARP,SLICED (340.2 grams) - $10.3

  * 1 teaspoon kosher salt
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/02047.jpg' width=50>1.0 tsp Salt, table (6.0 grams) - $0.19

  * Fresh black pepper
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/02030.jpg' width=50>1.0 dash Spices, pepper, black (0.1 grams) - $0.0

  * Topping:
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/21226.png' width=50>1.0 serving 5 servings per 22.85 oz package PIZZA,MEAT & VEG TOPPING,REG CRUST,FRZ,CKD (129.0 grams) - $0.0

  * 3 tablespoons butter
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/01001.jpg' width=50>3.0 tbsp Butter, salted (42.6 grams) - $1.08

  * 1 cup panko bread crumbs
 - <img src='http://ips.colab.duke.edu/extract_recipe/get_google_images/images/18069.jpg' width=50>5 1/4 cup, crumbs Bread, white, commercially prepared (includes soft bread crumbs) (236.6 grams) - $2.83


# Directions
In a large pot of boiling, salted water cook the pasta to al dente.
While the pasta is cooking, in a separate pot, melt the butter. Whisk in the flour and mustard and keep it moving for about five minutes. Make sure it's free of lumps. Stir in the milk, onion, bay leaf, and paprika. Simmer for ten minutes and remove the bay leaf.
Temper in the egg. Stir in 3/4 of the cheese. Season with salt and pepper. Fold the macaroni into the mix and pour into a 2-quart casserole dish. Top with remaining cheese.
Melt the butter in a saute pan and toss the bread crumbs to coat. Top the macaroni with the bread crumbs. Bake for 30 minutes. Remove from oven and rest for five minutes before serving.
Remember to save leftovers for fried Macaroni and Cheese.
Recipe courtesy Alton Brown

+1 minute for tossing.
# Calculated time: 51 minute
# Calculated cost: $24.64


# Serving size is about 13.0


# Nutrition data (ALL)


## Main

 - Energy: 8542.51051625 Calories
 - Water: 539.29 grams
 - Carbohydrate, by difference: 441.39 grams
 - Total lipid (fat): 257.0 grams
 - Ash: 134.75 grams
 - Protein: 122.14 grams
 - Fiber, total dietary: 103.0 grams
 - Sugars, total: 35.41 grams


## Sugars

 - Starch: 120.02 grams
 - Fructose: 12.32 grams
 - Glucose (dextrose): 9.88 grams
 - Lactose: 5.23 grams
 - Maltose: 4.5 grams
 - Sucrose: 2.51 grams
 - Galactose: 0.56 grams


## Other



## Metals

 - Sodium, Na: 43.145 grams
 - Potassium, K: 5.503 grams
 - Calcium, Ca: 2.876 grams
 - Phosphorus, P: 2.088 grams
 - Magnesium, Mg: 0.704 grams
 - Iron, Fe: 0.09089 grams
 - Manganese, Mn: 0.025675 grams
 - Zinc, Zn: 0.02027 grams
 - Copper, Cu: 0.003438 grams
 - Selenium, Se: 0.0002409 grams
 - Fluoride, F: 0.0001124 grams


## Vitamins

 - Vitamin A, IU: 63133.0 IU
 - Vitamin D: 294.0 grams
 - Choline, total: 0.5077 grams
 - Betaine: 0.2873 grams
 - Vitamin C, total ascorbic acid: 0.0585 grams
 - Vitamin E (alpha-tocopherol): 0.03875 grams
 - Niacin: 0.034416 grams
 - Carotene, beta: 0.027021 grams
 - Lutein + zeaxanthin: 0.020214 grams
 - Tocopherol, gamma: 0.01494 grams
 - Pantothenic acid: 0.00863 grams
 - Cryptoxanthin, beta: 0.006247 grams
 - Tocotrienol, alpha: 0.00524 grams
 - Vitamin B-6: 0.005071 grams
 - Vitamin A, RAE: 0.004706 grams
 - Riboflavin: 0.004426 grams
 - Thiamin: 0.003218 grams
 - Retinol: 0.001861 grams
 - Lycopene: 0.001835 grams
 - Folate, DFE: 0.001267 grams
 - Folate, total: 0.000922 grams
 - Carotene, alpha: 0.000608 grams
 - Tocopherol, beta: 0.00056 grams
 - Folic acid: 0.000493 grams
 - Folate, food: 0.000429 grams
 - Tocopherol, delta: 0.00039 grams
 - Vitamin K (phylloquinone): 0.0002716 grams
 - Tocotrienol, gamma: 0.0001 grams
 - Tocotrienol, beta: 1e-05 grams
 - Menaquinone-4: 9.6e-06 grams
 - Vitamin D3 (cholecalciferol): 7.3e-06 grams
 - Vitamin D (D2 + D3): 7.3e-06 grams
 - Vitamin B-12: 3.18e-06 grams
 - Dihydrophylloquinone: 1e-07 grams


## Amino acids

 - Glutamic acid: 21.142 grams
 - Proline: 10.524 grams
 - Aspartic acid: 9.503 grams
 - Leucine: 7.934 grams
 - Valine: 5.319 grams
 - Lysine: 5.11 grams
 - Serine: 5.024 grams
 - Phenylalanine: 4.614 grams
 - Arginine: 4.501 grams
 - Isoleucine: 4.189 grams
 - Alanine: 3.949 grams
 - Tyrosine: 3.623 grams
 - Threonine: 3.522 grams
 - Glycine: 3.3 grams
 - Histidine: 2.23 grams
 - Methionine: 1.796 grams
 - Cystine: 1.369 grams
 - Tryptophan: 1.015 grams


## Steroids

 - Cholesterol: 0.927 grams
 - Phytosterols: 0.282 grams
 - Beta-sitosterol: 0.008 grams


## Fatty Acids

 - Fatty acids, total saturated: 139.376 grams
 - Fatty acids, total monounsaturated: 67.956 grams
 - 18:1 undifferentiated: 62.581 grams
 - 16:0: 62.062 grams
 - 18:1 c: 47.753 grams
 - 18:0: 27.299 grams
 - Fatty acids, total polyunsaturated: 26.627 grams
 - 18:2 undifferentiated: 22.581 grams
 - 14:0: 19.176 grams
 - Fatty acids, total trans: 7.809 grams
 - 4:0: 7.403 grams
 - 12:0: 7.045 grams
 - 18:2 n-6 c,c: 6.996 grams
 - Fatty acids, total trans-monoenoic: 6.962 grams
 - 18:1 t: 6.855 grams
 - 10:0: 6.164 grams
 - 6:0: 4.703 grams
 - 18:3 undifferentiated: 3.34 grams
 - 16:1 undifferentiated: 3.2 grams
 - 8:0: 2.989 grams
 - 16:1 c: 2.534 grams
 - 18:3 n-3 c,c,c (ALA): 1.951 grams
 - 17:0: 1.343 grams
 - 22:1 undifferentiated: 1.059 grams
 - 22:1 c: 1.057 grams
 - Fatty acids, total trans-polyenoic: 0.847 grams
 - 18:2 CLAs: 0.721 grams
 - 20:1: 0.666 grams
 - 18:2 i: 0.592 grams
 - 20:0: 0.403 grams
 - 15:0: 0.335 grams
 - 14:1: 0.328 grams
 - 20:4 undifferentiated: 0.269 grams
 - 18:2 t not further defined: 0.252 grams
 - 20:3 undifferentiated: 0.23 grams
 - 16:1 t: 0.107 grams
 - 22:0: 0.089 grams
 - 17:1: 0.073 grams
 - 22:6 n-3 (DHA): 0.059 grams
 - 20:3 n-6: 0.058 grams
 - 24:1 c: 0.051 grams
 - 18:4: 0.038 grams
 - 20:2 n-6 c,c: 0.037 grams
 - 22:4: 0.026 grams
 - 22:5 n-3 (DPA): 0.024 grams
 - 24:0: 0.022 grams
 - 20:3 n-3: 0.021 grams
 - 18:3 n-6 c,c,c: 0.013 grams
 - 20:5 n-3 (EPA): 0.011 grams
 - 18:3i: 0.003 grams
","the internet is full of recipes a recipe is really only the directions and the ingredients but for any given recipe website you always get a lot more information thatn you want comments links advertisements for instance the page for alton brown ' s wafflehttpwwwfoodnetworkcomrecipesaltonbrownbasicwafflerecipehtml recipe looks like this

website examplehttpsrpiaifileswordpresscom201502webcontentgrabber01png

how can you just pull out the directions and ingredients in a tagindependent way that can be used across any website

 recipe extractor

 how it works

first it grabs the markdownformatted text of the html page using html2texthttpsgithubcomaaronswhtml2text it evalutes the number of ' cooking ' related words in each line and pulls out the peak

website examplehttpsiimgurcomenu0snajpg1

it does the same for extracting the ingredient list then it scans the directions and the ingredient list to determine what the actual baking time would be and gives that estimate finally it parses the measurements and foods in the ingredient list and crossreferences the usda sr27 food databse to get accurate estimations of the nutrition content

 to do

 extract recipes
 extract ingredients
 cross references ingredients and measurements to usda database
 make ajax interface
 better identifying common foods in usda database
 simpler conversion between food dimensionsweights
 add in pricing 
 save data as json
 clean up code by splitting into files
 better error handling
 add nice css into web interface
 add in photos of foods

 installation

 requirements


sudo aptget install pythonnltk
sudo pip install pint


then goto python console
python
 import nltk
 nltkdownload ' brown ' 
 nltkdownload ' maxenttreebankpostagger ' 
 nltkdownload ' wordnet ' 


clone the sr27 database downloaderhttpsgithubcomtscholl2fudgen and run the makefile to generate the database copy the database into the same folder then go into the database and make sqlite3 fts4 virtual table

sql
drop table data
drop table nutritiondate
drop table nutritiondef

create virtual table data using fts4ndbnoshrtdesclongdesccomdesc
insert into datandbnoshrtdesclongdesccomdesc select ndbnoshrtdesclongdesccomdesc from fooddes

create virtual table nutritiondata using fts4ndbnonutrnonutrval
insert into nutritiondatandbnonutrnonutrval select ndbnonutrnonutrval from nutdata

create virtual table nutritiondef using fts4nutrnounitstagname
insert into nutritiondefnutrnounitstagname select nutrnounitstagname from nutrdef





 example output

visit the current incantation at httpipscolabdukeedu8081extractorhtml and run which shows the extraction of the following recipe httpwwwfoodnetworkcomrecipesaltonbrownbakedmacaroniandcheeserecipehtmlhttpwwwfoodnetworkcomrecipesaltonbrownbakedmacaroniandcheeserecipehtml




 ingredients

 12 pound elbow macaroni
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages20099jpg ' width502 18 cup elbow shaped macaroni dry enriched 2268 grams 376

 3 tablespoons butter
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01001jpg ' width5030 tbsp butter salted 426 grams 108

 3 tablespoons flour
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages20581jpg ' width5018 cup wheat flour white allpurpose enriched unbleached 234 grams 012

 1 tablespoon powdered mustard
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02046jpg ' width503 18 tsp or 1 packet mustard prepared yellow 156 grams 041

 3 cups milk
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01077jpg ' width5034 quart milk whole 325 milkfat with added vitamin d 7320 grams 058

 12 cup yellow onion finely diced
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages11282jpg ' width5010 cup sliced onions raw 1183 grams 393

 1 bay leaf
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02004png ' width5010 tsp crumbled spices bay leaf 06 grams 009

 12 teaspoon paprika
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02028jpg ' width5013 tsp spices paprika 11 grams 007

 1 large egg
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01123jpg ' width5010 small egg whole raw fresh 380 grams 019

 12 ounces sharp cheddar shredded
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01270jpg ' width5012 18 slice 1 oz slice cheesecheddarsharpsliced 3402 grams 103

 1 teaspoon kosher salt
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02047jpg ' width5010 tsp salt table 60 grams 019

 fresh black pepper
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02030jpg ' width5010 dash spices pepper black 01 grams 00

 topping
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages21226png ' width5010 serving 5 servings per 2285 oz package pizzameat veg toppingreg crustfrzckd 1290 grams 00

 3 tablespoons butter
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01001jpg ' width5030 tbsp butter salted 426 grams 108

 1 cup panko bread crumbs
 img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages18069jpg ' width505 14 cup crumbs bread white commercially prepared includes soft bread crumbs 2366 grams 283


 directions
in a large pot of boiling salted water cook the pasta to al dente
while the pasta is cooking in a separate pot melt the butter whisk in the flour and mustard and keep it moving for about five minutes make sure it ' s free of lumps stir in the milk onion bay leaf and paprika simmer for ten minutes and remove the bay leaf
temper in the egg stir in 34 of the cheese season with salt and pepper fold the macaroni into the mix and pour into a 2quart casserole dish top with remaining cheese
melt the butter in a saute pan and toss the bread crumbs to coat top the macaroni with the bread crumbs bake for 30 minutes remove from oven and rest for five minutes before serving
remember to save leftovers for fried macaroni and cheese
recipe courtesy alton brown

1 minute for tossing
 calculated time 51 minute
 calculated cost 2464


 serving size is about 130


 nutrition data all


 main

 energy 854251051625 calories
 water 53929 grams
 carbohydrate by difference 44139 grams
 total lipid fat 2570 grams
 ash 13475 grams
 protein 12214 grams
 fiber total dietary 1030 grams
 sugars total 3541 grams


 sugars

 starch 12002 grams
 fructose 1232 grams
 glucose dextrose 988 grams
 lactose 523 grams
 maltose 45 grams
 sucrose 251 grams
 galactose 056 grams


 other



 metals

 sodium na 43145 grams
 potassium k 5503 grams
 calcium ca 2876 grams
 phosphorus p 2088 grams
 magnesium mg 0704 grams
 iron fe 009089 grams
 manganese mn 0025675 grams
 zinc zn 002027 grams
 copper cu 0003438 grams
 selenium se 00002409 grams
 fluoride f 00001124 grams


 vitamins

 vitamin a iu 631330 iu
 vitamin d 2940 grams
 choline total 05077 grams
 betaine 02873 grams
 vitamin c total ascorbic acid 00585 grams
 vitamin e alphatocopherol 003875 grams
 niacin 0034416 grams
 carotene beta 0027021 grams
 lutein zeaxanthin 0020214 grams
 tocopherol gamma 001494 grams
 pantothenic acid 000863 grams
 cryptoxanthin beta 0006247 grams
 tocotrienol alpha 000524 grams
 vitamin b6 0005071 grams
 vitamin a rae 0004706 grams
 riboflavin 0004426 grams
 thiamin 0003218 grams
 retinol 0001861 grams
 lycopene 0001835 grams
 folate dfe 0001267 grams
 folate total 0000922 grams
 carotene alpha 0000608 grams
 tocopherol beta 000056 grams
 folic acid 0000493 grams
 folate food 0000429 grams
 tocopherol delta 000039 grams
 vitamin k phylloquinone 00002716 grams
 tocotrienol gamma 00001 grams
 tocotrienol beta 1e05 grams
 menaquinone4 96e06 grams
 vitamin d3 cholecalciferol 73e06 grams
 vitamin d d2 d3 73e06 grams
 vitamin b12 318e06 grams
 dihydrophylloquinone 1e07 grams


 amino acids

 glutamic acid 21142 grams
 proline 10524 grams
 aspartic acid 9503 grams
 leucine 7934 grams
 valine 5319 grams
 lysine 511 grams
 serine 5024 grams
 phenylalanine 4614 grams
 arginine 4501 grams
 isoleucine 4189 grams
 alanine 3949 grams
 tyrosine 3623 grams
 threonine 3522 grams
 glycine 33 grams
 histidine 223 grams
 methionine 1796 grams
 cystine 1369 grams
 tryptophan 1015 grams


 steroids

 cholesterol 0927 grams
 phytosterols 0282 grams
 betasitosterol 0008 grams


 fatty acids

 fatty acids total saturated 139376 grams
 fatty acids total monounsaturated 67956 grams
 181 undifferentiated 62581 grams
 160 62062 grams
 181 c 47753 grams
 180 27299 grams
 fatty acids total polyunsaturated 26627 grams
 182 undifferentiated 22581 grams
 140 19176 grams
 fatty acids total trans 7809 grams
 40 7403 grams
 120 7045 grams
 182 n6 cc 6996 grams
 fatty acids total transmonoenoic 6962 grams
 181 t 6855 grams
 100 6164 grams
 60 4703 grams
 183 undifferentiated 334 grams
 161 undifferentiated 32 grams
 80 2989 grams
 161 c 2534 grams
 183 n3 ccc ala 1951 grams
 170 1343 grams
 221 undifferentiated 1059 grams
 221 c 1057 grams
 fatty acids total transpolyenoic 0847 grams
 182 clas 0721 grams
 201 0666 grams
 182 i 0592 grams
 200 0403 grams
 150 0335 grams
 141 0328 grams
 204 undifferentiated 0269 grams
 182 t not further defined 0252 grams
 203 undifferentiated 023 grams
 161 t 0107 grams
 220 0089 grams
 171 0073 grams
 226 n3 dha 0059 grams
 203 n6 0058 grams
 241 c 0051 grams
 184 0038 grams
 202 n6 cc 0037 grams
 224 0026 grams
 225 n3 dpa 0024 grams
 240 0022 grams
 203 n3 0021 grams
 183 n6 ccc 0013 grams
 205 n3 epa 0011 grams
 183i 0003 grams",internet full recip recip realli onli direct ingredi ani given recip websit alway get lot inform thatn want comment link advertis instanc page alton brown ' wafflehttpwwwfoodnetworkcomrecipesaltonbrownbasicwafflerecipehtml recip look like thi websit examplehttpsrpiaifileswordpresscom201502webcontentgrabber01png pull direct ingredi tagindepend way use across ani websit recip extractor work first grab markdownformat text html page use html2texthttpsgithubcomaaronswhtml2text evalut number ' cook ' relat word line pull peak websit examplehttpsiimgurcomenu0snajpg1 doe extract ingredi list scan direct ingredi list determin actual bake time would give estim final pars measur food ingredi list crossrefer usda sr27 food databs get accur estim nutrit content extract recip extract ingredi cross refer ingredi measur usda databas make ajax interfac better identifi common food usda databas simpler convers food dimensionsweight add price save data json clean code split file better error handl add nice css web interfac add photo food instal requir sudo aptget instal pythonnltk sudo pip instal pint goto python consol python import nltk nltkdownload ' brown ' nltkdownload ' maxenttreebankpostagg ' nltkdownload ' wordnet ' clone sr27 databas downloaderhttpsgithubcomtscholl2fudgen run makefil gener databas copi databas folder go databas make sqlite3 fts4 virtual tabl sql drop tabl data drop tabl nutritiond drop tabl nutritiondef creat virtual tabl data use fts4ndbnoshrtdesclongdesccomdesc insert datandbnoshrtdesclongdesccomdesc select ndbnoshrtdesclongdesccomdesc foodd creat virtual tabl nutritiondata use fts4ndbnonutrnonutrv insert nutritiondatandbnonutrnonutrv select ndbnonutrnonutrv nutdata creat virtual tabl nutritiondef use fts4nutrnounitstagnam insert nutritiondefnutrnounitstagnam select nutrnounitstagnam nutrdef exampl output visit current incant httpipscolabdukeedu8081extractorhtml run show extract follow recip httpwwwfoodnetworkcomrecipesaltonbrownbakedmacaroniandcheeserecipehtmlhttpwwwfoodnetworkcomrecipesaltonbrownbakedmacaroniandcheeserecipehtml ingredi 12 pound elbow macaroni img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages20099jpg ' width502 18 cup elbow shape macaroni dri enrich 2268 gram 376 3 tablespoon butter img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01001jpg ' width5030 tbsp butter salt 426 gram 108 3 tablespoon flour img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages20581jpg ' width5018 cup wheat flour white allpurpos enrich unbleach 234 gram 012 1 tablespoon powder mustard img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02046jpg ' width503 18 tsp 1 packet mustard prepar yellow 156 gram 041 3 cup milk img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01077jpg ' width5034 quart milk whole 325 milkfat ad vitamin 7320 gram 058 12 cup yellow onion fine dice img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages11282jpg ' width5010 cup slice onion raw 1183 gram 393 1 bay leaf img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02004png ' width5010 tsp crumbl spice bay leaf 06 gram 009 12 teaspoon paprika img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02028jpg ' width5013 tsp spice paprika 11 gram 007 1 larg egg img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01123jpg ' width5010 small egg whole raw fresh 380 gram 019 12 ounc sharp cheddar shred img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01270jpg ' width5012 18 slice 1 oz slice cheesecheddarsharpsl 3402 gram 103 1 teaspoon kosher salt img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02047jpg ' width5010 tsp salt tabl 60 gram 019 fresh black pepper img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02030jpg ' width5010 dash spice pepper black 01 gram 00 top img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages21226png ' width5010 serv 5 serv per 2285 oz packag pizzameat veg toppingreg crustfrzckd 1290 gram 00 3 tablespoon butter img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01001jpg ' width5030 tbsp butter salt 426 gram 108 1 cup panko bread crumb img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages18069jpg ' width505 14 cup crumb bread white commerci prepar includ soft bread crumb 2366 gram 283 direct larg pot boil salt water cook pasta al dent pasta cook separ pot melt butter whisk flour mustard keep move five minut make sure ' free lump stir milk onion bay leaf paprika simmer ten minut remov bay leaf temper egg stir 34 chees season salt pepper fold macaroni mix pour 2quart casserol dish top remain chees melt butter saut pan toss bread crumb coat top macaroni bread crumb bake 30 minut remov oven rest five minut befor serv rememb save leftov fri macaroni chees recip courtesi alton brown 1 minut toss calcul time 51 minut calcul cost 2464 serv size 130 nutrit data main energi 854251051625 calori water 53929 gram carbohydr differ 44139 gram total lipid fat 2570 gram ash 13475 gram protein 12214 gram fiber total dietari 1030 gram sugar total 3541 gram sugar starch 12002 gram fructos 1232 gram glucos dextros 988 gram lactos 523 gram maltos 45 gram sucros 251 gram galactos 056 gram metal sodium na 43145 gram potassium k 5503 gram calcium ca 2876 gram phosphoru p 2088 gram magnesium mg 0704 gram iron fe 009089 gram manganes mn 0025675 gram zinc zn 002027 gram copper cu 0003438 gram selenium se 00002409 gram fluorid f 00001124 gram vitamin vitamin iu 631330 iu vitamin 2940 gram cholin total 05077 gram betain 02873 gram vitamin c total ascorb acid 00585 gram vitamin e alphatocopherol 003875 gram niacin 0034416 gram caroten beta 0027021 gram lutein zeaxanthin 0020214 gram tocopherol gamma 001494 gram pantothen acid 000863 gram cryptoxanthin beta 0006247 gram tocotrienol alpha 000524 gram vitamin b6 0005071 gram vitamin rae 0004706 gram riboflavin 0004426 gram thiamin 0003218 gram retinol 0001861 gram lycopen 0001835 gram folat dfe 0001267 gram folat total 0000922 gram caroten alpha 0000608 gram tocopherol beta 000056 gram folic acid 0000493 gram folat food 0000429 gram tocopherol delta 000039 gram vitamin k phylloquinon 00002716 gram tocotrienol gamma 00001 gram tocotrienol beta 1e05 gram menaquinone4 96e06 gram vitamin d3 cholecalciferol 73e06 gram vitamin d2 d3 73e06 gram vitamin b12 318e06 gram dihydrophylloquinon 1e07 gram amino acid glutam acid 21142 gram prolin 10524 gram aspart acid 9503 gram leucin 7934 gram valin 5319 gram lysin 511 gram serin 5024 gram phenylalanin 4614 gram arginin 4501 gram isoleucin 4189 gram alanin 3949 gram tyrosin 3623 gram threonin 3522 gram glycin 33 gram histidin 223 gram methionin 1796 gram cystin 1369 gram tryptophan 1015 gram steroid cholesterol 0927 gram phytosterol 0282 gram betasitosterol 0008 gram fatti acid fatti acid total satur 139376 gram fatti acid total monounsatur 67956 gram 181 undifferenti 62581 gram 160 62062 gram 181 c 47753 gram 180 27299 gram fatti acid total polyunsatur 26627 gram 182 undifferenti 22581 gram 140 19176 gram fatti acid total tran 7809 gram 40 7403 gram 120 7045 gram 182 n6 cc 6996 gram fatti acid total transmonoeno 6962 gram 181 6855 gram 100 6164 gram 60 4703 gram 183 undifferenti 334 gram 161 undifferenti 32 gram 80 2989 gram 161 c 2534 gram 183 n3 ccc ala 1951 gram 170 1343 gram 221 undifferenti 1059 gram 221 c 1057 gram fatti acid total transpolyeno 0847 gram 182 cla 0721 gram 201 0666 gram 182 0592 gram 200 0403 gram 150 0335 gram 141 0328 gram 204 undifferenti 0269 gram 182 defin 0252 gram 203 undifferenti 023 gram 161 0107 gram 220 0089 gram 171 0073 gram 226 n3 dha 0059 gram 203 n6 0058 gram 241 c 0051 gram 184 0038 gram 202 n6 cc 0037 gram 224 0026 gram 225 n3 dpa 0024 gram 240 0022 gram 203 n3 0021 gram 183 n6 ccc 0013 gram 205 n3 epa 0011 gram 183i 0003 gram,internet full recipe recipe really direction ingredient given recipe website always get lot information thatn want comment link advertisement instance page alton brown ' wafflehttpwwwfoodnetworkcomrecipesaltonbrownbasicwafflerecipehtml recipe look like website examplehttpsrpiaifileswordpresscom201502webcontentgrabber01png pull direction ingredient tagindependent way used across website recipe extractor work first grab markdownformatted text html page using html2texthttpsgithubcomaaronswhtml2text evalutes number ' cooking ' related word line pull peak website examplehttpsiimgurcomenu0snajpg1 doe extracting ingredient list scan direction ingredient list determine actual baking time would give estimate finally par measurement food ingredient list crossreferences usda sr27 food databse get accurate estimation nutrition content extract recipe extract ingredient cross reference ingredient measurement usda database make ajax interface better identifying common food usda database simpler conversion food dimensionsweights add pricing save data json clean code splitting file better error handling add nice cs web interface add photo food installation requirement sudo aptget install pythonnltk sudo pip install pint goto python console python import nltk nltkdownload ' brown ' nltkdownload ' maxenttreebankpostagger ' nltkdownload ' wordnet ' clone sr27 database downloaderhttpsgithubcomtscholl2fudgen run makefile generate database copy database folder go database make sqlite3 fts4 virtual table sql drop table data drop table nutritiondate drop table nutritiondef create virtual table data using fts4ndbnoshrtdesclongdesccomdesc insert datandbnoshrtdesclongdesccomdesc select ndbnoshrtdesclongdesccomdesc fooddes create virtual table nutritiondata using fts4ndbnonutrnonutrval insert nutritiondatandbnonutrnonutrval select ndbnonutrnonutrval nutdata create virtual table nutritiondef using fts4nutrnounitstagname insert nutritiondefnutrnounitstagname select nutrnounitstagname nutrdef example output visit current incantation httpipscolabdukeedu8081extractorhtml run show extraction following recipe httpwwwfoodnetworkcomrecipesaltonbrownbakedmacaroniandcheeserecipehtmlhttpwwwfoodnetworkcomrecipesaltonbrownbakedmacaroniandcheeserecipehtml ingredient 12 pound elbow macaroni img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages20099jpg ' width502 18 cup elbow shaped macaroni dry enriched 2268 gram 376 3 tablespoon butter img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01001jpg ' width5030 tbsp butter salted 426 gram 108 3 tablespoon flour img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages20581jpg ' width5018 cup wheat flour white allpurpose enriched unbleached 234 gram 012 1 tablespoon powdered mustard img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02046jpg ' width503 18 tsp 1 packet mustard prepared yellow 156 gram 041 3 cup milk img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01077jpg ' width5034 quart milk whole 325 milkfat added vitamin 7320 gram 058 12 cup yellow onion finely diced img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages11282jpg ' width5010 cup sliced onion raw 1183 gram 393 1 bay leaf img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02004png ' width5010 tsp crumbled spice bay leaf 06 gram 009 12 teaspoon paprika img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02028jpg ' width5013 tsp spice paprika 11 gram 007 1 large egg img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01123jpg ' width5010 small egg whole raw fresh 380 gram 019 12 ounce sharp cheddar shredded img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01270jpg ' width5012 18 slice 1 oz slice cheesecheddarsharpsliced 3402 gram 103 1 teaspoon kosher salt img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02047jpg ' width5010 tsp salt table 60 gram 019 fresh black pepper img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages02030jpg ' width5010 dash spice pepper black 01 gram 00 topping img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages21226png ' width5010 serving 5 serving per 2285 oz package pizzameat veg toppingreg crustfrzckd 1290 gram 00 3 tablespoon butter img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages01001jpg ' width5030 tbsp butter salted 426 gram 108 1 cup panko bread crumb img src ' httpipscolabdukeeduextractrecipegetgoogleimagesimages18069jpg ' width505 14 cup crumb bread white commercially prepared includes soft bread crumb 2366 gram 283 direction large pot boiling salted water cook pasta al dente pasta cooking separate pot melt butter whisk flour mustard keep moving five minute make sure ' free lump stir milk onion bay leaf paprika simmer ten minute remove bay leaf temper egg stir 34 cheese season salt pepper fold macaroni mix pour 2quart casserole dish top remaining cheese melt butter saute pan toss bread crumb coat top macaroni bread crumb bake 30 minute remove oven rest five minute serving remember save leftover fried macaroni cheese recipe courtesy alton brown 1 minute tossing calculated time 51 minute calculated cost 2464 serving size 130 nutrition data main energy 854251051625 calorie water 53929 gram carbohydrate difference 44139 gram total lipid fat 2570 gram ash 13475 gram protein 12214 gram fiber total dietary 1030 gram sugar total 3541 gram sugar starch 12002 gram fructose 1232 gram glucose dextrose 988 gram lactose 523 gram maltose 45 gram sucrose 251 gram galactose 056 gram metal sodium na 43145 gram potassium k 5503 gram calcium ca 2876 gram phosphorus p 2088 gram magnesium mg 0704 gram iron fe 009089 gram manganese mn 0025675 gram zinc zn 002027 gram copper cu 0003438 gram selenium se 00002409 gram fluoride f 00001124 gram vitamin vitamin iu 631330 iu vitamin 2940 gram choline total 05077 gram betaine 02873 gram vitamin c total ascorbic acid 00585 gram vitamin e alphatocopherol 003875 gram niacin 0034416 gram carotene beta 0027021 gram lutein zeaxanthin 0020214 gram tocopherol gamma 001494 gram pantothenic acid 000863 gram cryptoxanthin beta 0006247 gram tocotrienol alpha 000524 gram vitamin b6 0005071 gram vitamin rae 0004706 gram riboflavin 0004426 gram thiamin 0003218 gram retinol 0001861 gram lycopene 0001835 gram folate dfe 0001267 gram folate total 0000922 gram carotene alpha 0000608 gram tocopherol beta 000056 gram folic acid 0000493 gram folate food 0000429 gram tocopherol delta 000039 gram vitamin k phylloquinone 00002716 gram tocotrienol gamma 00001 gram tocotrienol beta 1e05 gram menaquinone4 96e06 gram vitamin d3 cholecalciferol 73e06 gram vitamin d2 d3 73e06 gram vitamin b12 318e06 gram dihydrophylloquinone 1e07 gram amino acid glutamic acid 21142 gram proline 10524 gram aspartic acid 9503 gram leucine 7934 gram valine 5319 gram lysine 511 gram serine 5024 gram phenylalanine 4614 gram arginine 4501 gram isoleucine 4189 gram alanine 3949 gram tyrosine 3623 gram threonine 3522 gram glycine 33 gram histidine 223 gram methionine 1796 gram cystine 1369 gram tryptophan 1015 gram steroid cholesterol 0927 gram phytosterols 0282 gram betasitosterol 0008 gram fatty acid fatty acid total saturated 139376 gram fatty acid total monounsaturated 67956 gram 181 undifferentiated 62581 gram 160 62062 gram 181 c 47753 gram 180 27299 gram fatty acid total polyunsaturated 26627 gram 182 undifferentiated 22581 gram 140 19176 gram fatty acid total trans 7809 gram 40 7403 gram 120 7045 gram 182 n6 cc 6996 gram fatty acid total transmonoenoic 6962 gram 181 6855 gram 100 6164 gram 60 4703 gram 183 undifferentiated 334 gram 161 undifferentiated 32 gram 80 2989 gram 161 c 2534 gram 183 n3 ccc ala 1951 gram 170 1343 gram 221 undifferentiated 1059 gram 221 c 1057 gram fatty acid total transpolyenoic 0847 gram 182 clas 0721 gram 201 0666 gram 182 0592 gram 200 0403 gram 150 0335 gram 141 0328 gram 204 undifferentiated 0269 gram 182 defined 0252 gram 203 undifferentiated 023 gram 161 0107 gram 220 0089 gram 171 0073 gram 226 n3 dha 0059 gram 203 n6 0058 gram 241 c 0051 gram 184 0038 gram 202 n6 cc 0037 gram 224 0026 gram 225 n3 dpa 0024 gram 240 0022 gram 203 n3 0021 gram 183 n6 ccc 0013 gram 205 n3 epa 0011 gram 183i 0003 gram
Objective-C,"AJRNutritionController
======================

Created By Andrew Rosenblum, 2013

Twitter: [@AJRosenblum](https://twitter.com/AJRosenblum)

If you end up using this code in an app, please let me know.  I'd love to see how it's being used :)

About
------------------------

An Objective-C class to present an animated view with nutritional information. The view mimics the nutrition label seen on commercial goods.

This code is iOS 5 & 6 compatible, storybaord and ARC Compatible.

![My image](http://s3.amazonaws.com/cocoacontrols_production/ios_screens/1625/full.png?1360446212)


Using AJRNutritionController
------------------
To use `AJRNutritionController` first copy the following files into your project:
- `AJRNutritionViewController.h`
- `AJRNutritionViewController.m`
- `AJRNutritionViewController.xib`
- `AJRNutritionLabelCalculation.h`
- `AJRNutritionLabelCalculation.m`
- `AJRNutritionLabelView.h`
- `AJRNutritionLabelView.m`
- `AJRBackgroundDimmer.h`
- `AJRBackgroundDimmer.m`
- `CloseButton.png`
- `CloseButton@2x.png`

In addition, make sure your project includes the `QuartzCore` framework.

Then in the appropiate method, add the following to initalize the view:

    AJRNutritionViewController *controller = [[AJRNutritionViewController alloc] init];

Set the nutrition values as follows:

    controller.servingSize = @""12 fl oz. (1 Can)"";
    controller.calories = 130;
    controller.fat = 5.5;
    controller.carbs = 35;
    controller.sugar = 12;
    controller.protein = 3.0;
    
Finally present the view:

    [controller presentInParentViewController:self];

Check out the included demo for an example


License
--------------
This code is published under BSD Simplified:


Copyright (c) 2013, Andrew Rosenblum
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
Neither the name of the <ORGANIZATION> nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

","ajrnutritioncontroller


created by andrew rosenblum 2013

twitter ajrosenblumhttpstwittercomajrosenblum

if you end up using this code in an app please let me know i ' d love to see how it ' s being used 

about


an objectivec class to present an animated view with nutritional information the view mimics the nutrition label seen on commercial goods

this code is ios 5 6 compatible storybaord and arc compatible

my imagehttps3amazonawscomcocoacontrolsproductioniosscreens1625fullpng1360446212


using ajrnutritioncontroller

to use ajrnutritioncontroller first copy the following files into your project
 ajrnutritionviewcontrollerh
 ajrnutritionviewcontrollerm
 ajrnutritionviewcontrollerxib
 ajrnutritionlabelcalculationh
 ajrnutritionlabelcalculationm
 ajrnutritionlabelviewh
 ajrnutritionlabelviewm
 ajrbackgrounddimmerh
 ajrbackgrounddimmerm
 closebuttonpng
 closebutton2xpng

in addition make sure your project includes the quartzcore framework

then in the appropiate method add the following to initalize the view

 ajrnutritionviewcontroller controller ajrnutritionviewcontroller alloc init

set the nutrition values as follows

 controllerservingsize 12 fl oz 1 can
 controllercalories 130
 controllerfat 55
 controllercarbs 35
 controllersugar 12
 controllerprotein 30
 
finally present the view

 controller presentinparentviewcontrollerself

check out the included demo for an example


license

this code is published under bsd simplified


copyright c 2013 andrew rosenblum
all rights reserved

redistribution and use in source and binary forms with or without modification are permitted provided that the following conditions are met

redistributions of source code must retain the above copyright notice this list of conditions and the following disclaimer
redistributions in binary form must reproduce the above copyright notice this list of conditions and the following disclaimer in the documentation andor other materials provided with the distribution
neither the name of the organization nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission
this software is provided by the copyright holders and contributors as is and any express or implied warranties including but not limited to the implied warranties of merchantability and fitness for a particular purpose are disclaimed in no event shall the copyright holder or contributors be liable for any direct indirect incidental special exemplary or consequential damages including but not limited to procurement of substitute goods or services loss of use data or profits or business interruption however caused and on any theory of liability whether in contract strict liability or tort including negligence or otherwise arising in any way out of the use of this software even if advised of the possibility of such damage",ajrnutritioncontrol creat andrew rosenblum 2013 twitter ajrosenblumhttpstwittercomajrosenblum end use thi code app pleas let know ' love see ' use objectivec class present anim view nutrit inform view mimic nutrit label seen commerci good thi code io 5 6 compat storybaord arc compat imagehttps3amazonawscomcocoacontrolsproductioniosscreens1625fullpng1360446212 use ajrnutritioncontrol use ajrnutritioncontrol first copi follow file project ajrnutritionviewcontrollerh ajrnutritionviewcontrollerm ajrnutritionviewcontrollerxib ajrnutritionlabelcalculationh ajrnutritionlabelcalculationm ajrnutritionlabelviewh ajrnutritionlabelviewm ajrbackgrounddimmerh ajrbackgrounddimmerm closebuttonpng closebutton2xpng addit make sure project includ quartzcor framework appropi method add follow init view ajrnutritionviewcontrol control ajrnutritionviewcontrol alloc init set nutrit valu follow controllerservings 12 fl oz 1 controllercalori 130 controllerfat 55 controllercarb 35 controllersugar 12 controllerprotein 30 final present view control presentinparentviewcontrollerself check includ demo exampl licens thi code publish bsd simplifi copyright c 2013 andrew rosenblum right reserv redistribut use sourc binari form without modif permit provid follow condit met redistribut sourc code must retain abov copyright notic thi list condit follow disclaim redistribut binari form must reproduc abov copyright notic thi list condit follow disclaim document andor materi provid distribut neither name organ name contributor may use endors promot product deriv thi softwar without specif prior written permiss thi softwar provid copyright holder contributor ani express impli warranti includ limit impli warranti merchant fit particular purpos disclaim event shall copyright holder contributor liabl ani direct indirect incident special exemplari consequenti damag includ limit procur substitut good servic loss use data profit busi interrupt howev caus ani theori liabil whether contract strict liabil tort includ neglig otherwis aris ani way use thi softwar even advis possibl damag,ajrnutritioncontroller created andrew rosenblum 2013 twitter ajrosenblumhttpstwittercomajrosenblum end using code app please let know ' love see ' used objectivec class present animated view nutritional information view mimic nutrition label seen commercial good code io 5 6 compatible storybaord arc compatible imagehttps3amazonawscomcocoacontrolsproductioniosscreens1625fullpng1360446212 using ajrnutritioncontroller use ajrnutritioncontroller first copy following file project ajrnutritionviewcontrollerh ajrnutritionviewcontrollerm ajrnutritionviewcontrollerxib ajrnutritionlabelcalculationh ajrnutritionlabelcalculationm ajrnutritionlabelviewh ajrnutritionlabelviewm ajrbackgrounddimmerh ajrbackgrounddimmerm closebuttonpng closebutton2xpng addition make sure project includes quartzcore framework appropiate method add following initalize view ajrnutritionviewcontroller controller ajrnutritionviewcontroller alloc init set nutrition value follows controllerservingsize 12 fl oz 1 controllercalories 130 controllerfat 55 controllercarbs 35 controllersugar 12 controllerprotein 30 finally present view controller presentinparentviewcontrollerself check included demo example license code published bsd simplified copyright c 2013 andrew rosenblum right reserved redistribution use source binary form without modification permitted provided following condition met redistribution source code must retain copyright notice list condition following disclaimer redistribution binary form must reproduce copyright notice list condition following disclaimer documentation andor material provided distribution neither name organization name contributor may used endorse promote product derived software without specific prior written permission software provided copyright holder contributor express implied warranty including limited implied warranty merchantability fitness particular purpose disclaimed event shall copyright holder contributor liable direct indirect incidental special exemplary consequential damage including limited procurement substitute good service loss use data profit business interruption however caused theory liability whether contract strict liability tort including negligence otherwise arising way use software even advised possibility damage
JavaScript,"Nutrition Intake
Copyright 2011 Kai Chang, Mary Becica, Vaibhav Bhawsar 

All files, except those from the USDA Nutrition Database, are released under GNU General Public License V3.0
","nutrition intake
copyright 2011 kai chang mary becica vaibhav bhawsar 

all files except those from the usda nutrition database are released under gnu general public license v30",nutrit intak copyright 2011 kai chang mari becica vaibhav bhawsar file except usda nutrit databas releas gnu gener public licens v30,nutrition intake copyright 2011 kai chang mary becica vaibhav bhawsar file except usda nutrition database released gnu general public license v30
Python,"# django-usda-nutrition

This is a Django application which includes models corresponding to the USDA
Nutrition Database, as well as import scripts to pull the current version of
the dataset (SR28) into the Django-managed database.

NOTE: [django-usda](https://github.com/notanumber/django-usda) also exists,
but imports an older (SR22) dataset.

## Dependencies

This packaged has only been tested with Python 3.5+ and Django 1.9+, but should
work with other versions. Feel free to submit pull requests for compatibility.

## Install

Install from `pip`:

    pip install django-usda-nutrition

## Usage

Add `usda_nutrition` to your `INSTALLED_APPS` and then:

    ./manage.py import_usda

## Notes

- The USDA database includes comprehensive information on how all nutritional
data is calculated and references to the corresponding source datasets. Because
that data is out of scope to use-cases that simply want to include the raw
nutritional content in an application, those tables are not imported with this
package. Nonetheless, the source CSV files, stubbed out models, and references
to them in the import management command and checked in. The corresponding code
is commented out and could be a starting point to anyone wanted to use that
data in a Django app.

- A single bad datapoint from `FOOTNOTE.txt` was manually removed.
","djangousdanutrition

this is a django application which includes models corresponding to the usda
nutrition database as well as import scripts to pull the current version of
the dataset sr28 into the djangomanaged database

note djangousdahttpsgithubcomnotanumberdjangousda also exists
but imports an older sr22 dataset

 dependencies

this packaged has only been tested with python 35 and django 19 but should
work with other versions feel free to submit pull requests for compatibility

 install

install from pip

 pip install djangousdanutrition

 usage

add usdanutrition to your installedapps and then

 managepy importusda

 notes

 the usda database includes comprehensive information on how all nutritional
data is calculated and references to the corresponding source datasets because
that data is out of scope to usecases that simply want to include the raw
nutritional content in an application those tables are not imported with this
package nonetheless the source csv files stubbed out models and references
to them in the import management command and checked in the corresponding code
is commented out and could be a starting point to anyone wanted to use that
data in a django app

 a single bad datapoint from footnotetxt was manually removed",djangousdanutrit thi django applic includ model correspond usda nutrit databas well import script pull current version dataset sr28 djangomanag databas note djangousdahttpsgithubcomnotanumberdjangousda also exist import older sr22 dataset depend thi packag ha onli test python 35 django 19 work version feel free submit pull request compat instal instal pip pip instal djangousdanutrit usag add usdanutrit installedapp managepi importusda note usda databas includ comprehens inform nutrit data calcul refer correspond sourc dataset becaus data scope usecas simpli want includ raw nutrit content applic tabl import thi packag nonetheless sourc csv file stub model refer import manag command check correspond code comment could start point anyon want use data django app singl bad datapoint footnotetxt wa manual remov,djangousdanutrition django application includes model corresponding usda nutrition database well import script pull current version dataset sr28 djangomanaged database note djangousdahttpsgithubcomnotanumberdjangousda also exists import older sr22 dataset dependency packaged ha tested python 35 django 19 work version feel free submit pull request compatibility install install pip pip install djangousdanutrition usage add usdanutrition installedapps managepy importusda note usda database includes comprehensive information nutritional data calculated reference corresponding source datasets data scope usecases simply want include raw nutritional content application table imported package nonetheless source csv file stubbed model reference import management command checked corresponding code commented could starting point anyone wanted use data django app single bad datapoint footnotetxt wa manually removed
Java,"# Nutrition Point Application
###### Android App to manage your Diet Plans,calculate calories and Healthy recipes 


![51370](https://user-images.githubusercontent.com/8544010/45599716-c39dfa00-b9f0-11e8-8e77-f7306ecbd3ff.png)Android Studio IDE

Nutrition point app source code is built in Android Studio IDE.

##


##### Splash Screen
Show a splash screen to user when user start your Android App.

##

![api-image 1](https://user-images.githubusercontent.com/8544010/45600389-4e382680-b9fc-11e8-9b4d-11f7aa67a80b.png)API

API’s is used for fetching data from backend server. we used it to calculate calories for all food types and fetch hundreds of food recipes compatible with all Diet types and health cases.

##

##### Navigation Drawer Menu
In Navigation Drawer menu the user will see many options to get most out of the App and moving between activities and Fragments.

##

![push-notification-558791](https://user-images.githubusercontent.com/8544010/45599983-ae779a00-b9f5-11e8-91a3-4fb9d44b4967.png)Advance Push Notification

Nutrition Point App can send notifications for different Reminders. It calculates the amount of water your Body needs and the periods between notifications. also the times of your diet meals during the day. 

##

![snackbar-toast-confirmation-exit](https://user-images.githubusercontent.com/8544010/45599999-fa2a4380-b9f5-11e8-84e5-aa96ed7c3701.png)Exit Confirmation Toast

When user try to exit the App, the confirmation  toast will be displayed on screen asking user to click once again back button to exit.

##

##### Scroll View

Nutrition Point content Vertically Scrolling. make the content vertically scrollable.


##

#### Arabic Language Support
Nutrition Point supports to help Arabic users

##

##### ScreenShots

![screenshot1](https://user-images.githubusercontent.com/8544010/45600398-74f65d00-b9fc-11e8-9ee6-c8374463714e.png)![screenshot2](https://user-images.githubusercontent.com/8544010/45600400-7b84d480-b9fc-11e8-8965-effccb1a7694.png)![screenshot3](https://user-images.githubusercontent.com/8544010/45600401-7e7fc500-b9fc-11e8-80cb-fb337d4c3bcd.png)![screenshot4](https://user-images.githubusercontent.com/8544010/45600403-80e21f00-b9fc-11e8-8b49-df85f874e726.png)
![screenshot6](https://user-images.githubusercontent.com/8544010/45600510-1b8f2d80-b9fe-11e8-96bb-23f8708d6ef9.png)![screenshot5](https://user-images.githubusercontent.com/8544010/45600405-8b041d80-b9fc-11e8-9dfe-c483e46e0924.png)






","nutrition point application
 android app to manage your diet planscalculate calories and healthy recipes 


51370httpsuserimagesgithubusercontentcom854401045599716c39dfa00b9f011e88e77f7306ecbd3ffpngandroid studio ide

nutrition point app source code is built in android studio ide




 splash screen
show a splash screen to user when user start your android app



apiimage 1httpsuserimagesgithubusercontentcom8544010456003894e382680b9fc11e89b4d11f7aa67a80bpngapi

apis is used for fetching data from backend server we used it to calculate calories for all food types and fetch hundreds of food recipes compatible with all diet types and health cases



 navigation drawer menu
in navigation drawer menu the user will see many options to get most out of the app and moving between activities and fragments



pushnotification558791httpsuserimagesgithubusercontentcom854401045599983ae779a00b9f511e891a34fb9d44b4967pngadvance push notification

nutrition point app can send notifications for different reminders it calculates the amount of water your body needs and the periods between notifications also the times of your diet meals during the day 



snackbartoastconfirmationexithttpsuserimagesgithubusercontentcom854401045599999fa2a4380b9f511e884e5aa96ed7c3701pngexit confirmation toast

when user try to exit the app the confirmation toast will be displayed on screen asking user to click once again back button to exit



 scroll view

nutrition point content vertically scrolling make the content vertically scrollable




 arabic language support
nutrition point supports to help arabic users



 screenshots

screenshot1httpsuserimagesgithubusercontentcom85440104560039874f65d00b9fc11e89ee6c8374463714epngscreenshot2httpsuserimagesgithubusercontentcom8544010456004007b84d480b9fc11e88965effccb1a7694pngscreenshot3httpsuserimagesgithubusercontentcom8544010456004017e7fc500b9fc11e880cbfb337d4c3bcdpngscreenshot4httpsuserimagesgithubusercontentcom85440104560040380e21f00b9fc11e88b49df85f874e726png
screenshot6httpsuserimagesgithubusercontentcom8544010456005101b8f2d80b9fe11e896bb23f8708d6ef9pngscreenshot5httpsuserimagesgithubusercontentcom8544010456004058b041d80b9fc11e89dfec483e46e0924png",nutrit point applic android app manag diet planscalcul calori healthi recip 51370httpsuserimagesgithubusercontentcom854401045599716c39dfa00b9f011e88e77f7306ecbd3ffpngandroid studio ide nutrit point app sourc code built android studio ide splash screen show splash screen user user start android app apiimag 1httpsuserimagesgithubusercontentcom8544010456003894e382680b9fc11e89b4d11f7aa67a80bpngapi api use fetch data backend server use calcul calori food type fetch hundr food recip compat diet type health case navig drawer menu navig drawer menu user see mani option get app move activ fragment pushnotification558791httpsuserimagesgithubusercontentcom854401045599983ae779a00b9f511e891a34fb9d44b4967pngadv push notif nutrit point app send notif differ remind calcul amount water bodi need period notif also time diet meal dure day snackbartoastconfirmationexithttpsuserimagesgithubusercontentcom854401045599999fa2a4380b9f511e884e5aa96ed7c3701pngexit confirm toast user tri exit app confirm toast display screen ask user click onc back button exit scroll view nutrit point content vertic scroll make content vertic scrollabl arab languag support nutrit point support help arab user screenshot screenshot1httpsuserimagesgithubusercontentcom85440104560039874f65d00b9fc11e89ee6c8374463714epngscreenshot2httpsuserimagesgithubusercontentcom8544010456004007b84d480b9fc11e88965effccb1a7694pngscreenshot3httpsuserimagesgithubusercontentcom8544010456004017e7fc500b9fc11e880cbfb337d4c3bcdpngscreenshot4httpsuserimagesgithubusercontentcom85440104560040380e21f00b9fc11e88b49df85f874e726png screenshot6httpsuserimagesgithubusercontentcom8544010456005101b8f2d80b9fe11e896bb23f8708d6ef9pngscreenshot5httpsuserimagesgithubusercontentcom8544010456004058b041d80b9fc11e89dfec483e46e0924png,nutrition point application android app manage diet planscalculate calorie healthy recipe 51370httpsuserimagesgithubusercontentcom854401045599716c39dfa00b9f011e88e77f7306ecbd3ffpngandroid studio ide nutrition point app source code built android studio ide splash screen show splash screen user user start android app apiimage 1httpsuserimagesgithubusercontentcom8544010456003894e382680b9fc11e89b4d11f7aa67a80bpngapi apis used fetching data backend server used calculate calorie food type fetch hundred food recipe compatible diet type health case navigation drawer menu navigation drawer menu user see many option get app moving activity fragment pushnotification558791httpsuserimagesgithubusercontentcom854401045599983ae779a00b9f511e891a34fb9d44b4967pngadvance push notification nutrition point app send notification different reminder calculates amount water body need period notification also time diet meal day snackbartoastconfirmationexithttpsuserimagesgithubusercontentcom854401045599999fa2a4380b9f511e884e5aa96ed7c3701pngexit confirmation toast user try exit app confirmation toast displayed screen asking user click back button exit scroll view nutrition point content vertically scrolling make content vertically scrollable arabic language support nutrition point support help arabic user screenshots screenshot1httpsuserimagesgithubusercontentcom85440104560039874f65d00b9fc11e89ee6c8374463714epngscreenshot2httpsuserimagesgithubusercontentcom8544010456004007b84d480b9fc11e88965effccb1a7694pngscreenshot3httpsuserimagesgithubusercontentcom8544010456004017e7fc500b9fc11e880cbfb337d4c3bcdpngscreenshot4httpsuserimagesgithubusercontentcom85440104560040380e21f00b9fc11e88b49df85f874e726png screenshot6httpsuserimagesgithubusercontentcom8544010456005101b8f2d80b9fe11e896bb23f8708d6ef9pngscreenshot5httpsuserimagesgithubusercontentcom8544010456004058b041d80b9fc11e89dfec483e46e0924png
Java,"Daily Dozen Android App
========================

<p align=""center""><img src=""http://nutritionfactsorg.s3.amazonaws.com/wp-content/uploads/2016/03/21232747/github.jpg"" style=""width: 600px""></p>

About
-----------

In the years of research required to create the more than a thousand evidence-based videos on [NutritionFacts.org][nutritionfacts.org], Michael Greger, MD, FACLM, has arrived at a list of what he considers the most important foods to include in a healthy daily diet. Yes, greens are good for you, but how much should we try to eat each day?

Dr. Greger’s Daily Dozen details the healthiest foods and how many servings of each we should try to check off every day. He explains his rationale in his book [How Not to Die][book]. All his proceeds from his books, DVDs, and speaking engagements is all donated to charity.


Daily Dozen on Google Play
------------------

<a href=""https://play.google.com/store/apps/details?id=org.nutritionfacts.dailydozen"" alt=""Get it on Google Play"" target=""_blank""><img src=""https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png"" height=""80""></a>

Daily Dozen on [F-Droid](https://f-droid.org/)
------------------

<a href=""https://f-droid.org/packages/org.nutritionfacts.dailydozen/"" alt=""Get it on F-Droid"" target=""_blank""><img src=""https://f-droid.org/badge/get-it-on.png"" height=""80""></a>

Contribute
------------

We would love for you to contribute to our source code and to help make the Daily Dozen for Android even better!

Check out our [Contribution Guidelines][contribute] for details on how to get started and our suggested best practices.

Donate
------

To help support [NutritionFacts.org][nutritionfacts.org], click [here][donate]

License
-------

The Daily Dozen Android App is licensed under the GPLv3

Contributors
------------

* [John Slavick][slavick] (Maintainer)
* [Christi Richards][christirichards]
* [Armfoot][Armfoot]
* [Lauren Hacker][laurenhacker]
* [MovGP0][MovGP0]
* [alibitek][alibitek]
* [angelagvarela][angelagvarela]
* [caugner][caugner]
* [jordansieve][jordansieve]
* [josephkelemen97][josephkelemen97]
* [lucab85][lucab85]
* [marc-medley][marc-medley]
* [myang310][myang310]
* [notmypassword][notmypassword]
* [qyearsley][qyearsley]
* [tabasco-flame][tabasco-flame]

[nutritionfacts.org]: http://nutritionfacts.org ""NutritionFacts.org - The Latest in Nutrition Research""
[contribute]: https://github.com/nutritionfactsorg/daily-dozen-android/blob/master/CONTRIBUTING.md ""Contribute to the Daily Dozen Android App""
[donate]: https://nutritionfacts.org/donate ""Donate to NutritionFacts.org""
[book]: http://nutritionfacts.org/book ""How Not to Die""
[slavick]: http://github.com/slavick ""John Slavick on GitHub""
[christirichards]: http://github.com/christirichards ""Christi Richards on GitHub""
[laurenhacker]: http://github.com/lahacker ""Lauren Hacker on GitHub""
[Armfoot]: https://github.com/Armfoot ""Armfoot on GitHub""
[MovGP0]: https://github.com/MovGP0 ""MovGP0 on GitHub""
[notmypassword]: https://github.com/notmypassword ""notmypassword on GitHub""
[alibitek]: https://github.com/alibitek ""alibitek on GitHub""
[caugner]: https://github.com/caugner ""caugner on GitHub""
[myang310]: https://github.com/myang310 ""myang310 on GitHub""
[lucab85]: https://github.com/lucab85 ""lucab85 on GitHub""
[qyearsley]: https://github.com/qyearsley ""qyearsley on GitHub""
[jordansieve]: https://github.com/jordansieve ""jordansieve on GitHub""
[angelagvarela]: https://github.com/angelagvarela ""angelagvarela on GitHub""
[josephkelemen97]: https://github.com/josephkelemen97 ""josephkelemen97 on GitHub""
[marc-medley]: https://github.com/marc-medley ""marc-medley on GitHub""
[tabasco-flame]: https://github.com/tabasco-flame ""tabasco-flame on GitHub""","daily dozen android app


p aligncenterimg srchttpnutritionfactsorgs3amazonawscomwpcontentuploads20160321232747githubjpg stylewidth 600pxp

about


in the years of research required to create the more than a thousand evidencebased videos on nutritionfactsorgnutritionfactsorg michael greger md faclm has arrived at a list of what he considers the most important foods to include in a healthy daily diet yes greens are good for you but how much should we try to eat each day

dr gregers daily dozen details the healthiest foods and how many servings of each we should try to check off every day he explains his rationale in his book how not to diebook all his proceeds from his books dvds and speaking engagements is all donated to charity


daily dozen on google play


a hrefhttpsplaygooglecomstoreappsdetailsidorgnutritionfactsdailydozen altget it on google play targetblankimg srchttpsplaygooglecomintlenusbadgesimagesgenericenbadgewebgenericpng height80a

daily dozen on fdroidhttpsfdroidorg


a hrefhttpsfdroidorgpackagesorgnutritionfactsdailydozen altget it on fdroid targetblankimg srchttpsfdroidorgbadgegetitonpng height80a

contribute


we would love for you to contribute to our source code and to help make the daily dozen for android even better

check out our contribution guidelinescontribute for details on how to get started and our suggested best practices

donate


to help support nutritionfactsorgnutritionfactsorg click heredonate

license


the daily dozen android app is licensed under the gplv3

contributors


 john slavickslavick maintainer
 christi richardschristirichards
 armfootarmfoot
 lauren hackerlaurenhacker
 movgp0movgp0
 alibitekalibitek
 angelagvarelaangelagvarela
 caugnercaugner
 jordansievejordansieve
 josephkelemen97josephkelemen97
 lucab85lucab85
 marcmedleymarcmedley
 myang310myang310
 notmypasswordnotmypassword
 qyearsleyqyearsley
 tabascoflametabascoflame

nutritionfactsorg httpnutritionfactsorg nutritionfactsorg the latest in nutrition research
contribute httpsgithubcomnutritionfactsorgdailydozenandroidblobmastercontributingmd contribute to the daily dozen android app
donate httpsnutritionfactsorgdonate donate to nutritionfactsorg
book httpnutritionfactsorgbook how not to die
slavick httpgithubcomslavick john slavick on github
christirichards httpgithubcomchristirichards christi richards on github
laurenhacker httpgithubcomlahacker lauren hacker on github
armfoot httpsgithubcomarmfoot armfoot on github
movgp0 httpsgithubcommovgp0 movgp0 on github
notmypassword httpsgithubcomnotmypassword notmypassword on github
alibitek httpsgithubcomalibitek alibitek on github
caugner httpsgithubcomcaugner caugner on github
myang310 httpsgithubcommyang310 myang310 on github
lucab85 httpsgithubcomlucab85 lucab85 on github
qyearsley httpsgithubcomqyearsley qyearsley on github
jordansieve httpsgithubcomjordansieve jordansieve on github
angelagvarela httpsgithubcomangelagvarela angelagvarela on github
josephkelemen97 httpsgithubcomjosephkelemen97 josephkelemen97 on github
marcmedley httpsgithubcommarcmedley marcmedley on github
tabascoflame httpsgithubcomtabascoflame tabascoflame on github",daili dozen android app p aligncenterimg srchttpnutritionfactsorgs3amazonawscomwpcontentuploads20160321232747githubjpg stylewidth 600pxp year research requir creat thousand evidencebas video nutritionfactsorgnutritionfactsorg michael greger md faclm ha arriv list consid import food includ healthi daili diet ye green good much tri eat day dr greger daili dozen detail healthiest food mani serv tri check everi day explain hi rational hi book diebook hi proce hi book dvd speak engag donat chariti daili dozen googl play hrefhttpsplaygooglecomstoreappsdetailsidorgnutritionfactsdailydozen altget googl play targetblankimg srchttpsplaygooglecomintlenusbadgesimagesgenericenbadgewebgenericpng height80a daili dozen fdroidhttpsfdroidorg hrefhttpsfdroidorgpackagesorgnutritionfactsdailydozen altget fdroid targetblankimg srchttpsfdroidorgbadgegetitonpng height80a contribut would love contribut sourc code help make daili dozen android even better check contribut guidelinescontribut detail get start suggest best practic donat help support nutritionfactsorgnutritionfactsorg click heredon licens daili dozen android app licens gplv3 contributor john slavickslavick maintain christi richardschristirichard armfootarmfoot lauren hackerlaurenhack movgp0movgp0 alibitekalibitek angelagvarelaangelagvarela caugnercaugn jordansievejordansiev josephkelemen97josephkelemen97 lucab85lucab85 marcmedleymarcmedley myang310myang310 notmypasswordnotmypassword qyearsleyqyearsley tabascoflametabascoflam nutritionfactsorg httpnutritionfactsorg nutritionfactsorg latest nutrit research contribut httpsgithubcomnutritionfactsorgdailydozenandroidblobmastercontributingmd contribut daili dozen android app donat httpsnutritionfactsorgdon donat nutritionfactsorg book httpnutritionfactsorgbook die slavick httpgithubcomslavick john slavick github christirichard httpgithubcomchristirichard christi richard github laurenhack httpgithubcomlahack lauren hacker github armfoot httpsgithubcomarmfoot armfoot github movgp0 httpsgithubcommovgp0 movgp0 github notmypassword httpsgithubcomnotmypassword notmypassword github alibitek httpsgithubcomalibitek alibitek github caugner httpsgithubcomcaugn caugner github myang310 httpsgithubcommyang310 myang310 github lucab85 httpsgithubcomlucab85 lucab85 github qyearsley httpsgithubcomqyearsley qyearsley github jordansiev httpsgithubcomjordansiev jordansiev github angelagvarela httpsgithubcomangelagvarela angelagvarela github josephkelemen97 httpsgithubcomjosephkelemen97 josephkelemen97 github marcmedley httpsgithubcommarcmedley marcmedley github tabascoflam httpsgithubcomtabascoflam tabascoflam github,daily dozen android app p aligncenterimg srchttpnutritionfactsorgs3amazonawscomwpcontentuploads20160321232747githubjpg stylewidth 600pxp year research required create thousand evidencebased video nutritionfactsorgnutritionfactsorg michael greger md faclm ha arrived list considers important food include healthy daily diet yes green good much try eat day dr gregers daily dozen detail healthiest food many serving try check every day explains rationale book diebook proceeds book dvd speaking engagement donated charity daily dozen google play hrefhttpsplaygooglecomstoreappsdetailsidorgnutritionfactsdailydozen altget google play targetblankimg srchttpsplaygooglecomintlenusbadgesimagesgenericenbadgewebgenericpng height80a daily dozen fdroidhttpsfdroidorg hrefhttpsfdroidorgpackagesorgnutritionfactsdailydozen altget fdroid targetblankimg srchttpsfdroidorgbadgegetitonpng height80a contribute would love contribute source code help make daily dozen android even better check contribution guidelinescontribute detail get started suggested best practice donate help support nutritionfactsorgnutritionfactsorg click heredonate license daily dozen android app licensed gplv3 contributor john slavickslavick maintainer christi richardschristirichards armfootarmfoot lauren hackerlaurenhacker movgp0movgp0 alibitekalibitek angelagvarelaangelagvarela caugnercaugner jordansievejordansieve josephkelemen97josephkelemen97 lucab85lucab85 marcmedleymarcmedley myang310myang310 notmypasswordnotmypassword qyearsleyqyearsley tabascoflametabascoflame nutritionfactsorg httpnutritionfactsorg nutritionfactsorg latest nutrition research contribute httpsgithubcomnutritionfactsorgdailydozenandroidblobmastercontributingmd contribute daily dozen android app donate httpsnutritionfactsorgdonate donate nutritionfactsorg book httpnutritionfactsorgbook die slavick httpgithubcomslavick john slavick github christirichards httpgithubcomchristirichards christi richards github laurenhacker httpgithubcomlahacker lauren hacker github armfoot httpsgithubcomarmfoot armfoot github movgp0 httpsgithubcommovgp0 movgp0 github notmypassword httpsgithubcomnotmypassword notmypassword github alibitek httpsgithubcomalibitek alibitek github caugner httpsgithubcomcaugner caugner github myang310 httpsgithubcommyang310 myang310 github lucab85 httpsgithubcomlucab85 lucab85 github qyearsley httpsgithubcomqyearsley qyearsley github jordansieve httpsgithubcomjordansieve jordansieve github angelagvarela httpsgithubcomangelagvarela angelagvarela github josephkelemen97 httpsgithubcomjosephkelemen97 josephkelemen97 github marcmedley httpsgithubcommarcmedley marcmedley github tabascoflame httpsgithubcomtabascoflame tabascoflame github
C,"# FoodScanner

A free and open Food Analyzer (nutrition facts, allergens and chemicals)

## Preface 
Food Scanner is a first-of-a-kind food analyzer offering valuable 
information such as nutrition facts, allergens and 
chemicals, about foods  using ordinary smartphones.
	 
URL: http://foodscanner.cs.ucy.ac.cy
Contact: foodscanner@cs.ucy.ac.cy

It is recommended to watch the video tutorials of the FoodScanner system on http://foodscanner.cs.ucy.ac.cy/, before proceeding with these instructions.

We hope that you find our FoodScanner useful for your research and innovation activities.  We would like to have your feedback, comments and remarks and of course any experiences and test results from your own experimental setups. Currently, we can offer only limited support and assistance on the code, due to lack of resources, but we will try to get back to you as soon as possible. Questions and feedback may be sent to foodscanner@cs.ucy.ac.cy

Enjoy FoodScanner!

The FoodScanner Team 
	 
Copyright (c) 2016, Data Management Systems Lab (DMSL), Department of Computer Science
University of Cyprus.

All rights reserved.

## MIT Open Source Licence

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the “Software”), to deal in the
Software without restriction, including without limitation the rights to use, copy,
modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so, subject to the
following conditions:
	 
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
	 
THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
	
## Components 

Short description of the contents included in this release.

### Android
Current Leader: Dimosthenis Stefanidis. 
Try: https://play.google.com/store/apps/details?id=com.ds.FoodScanner

Project Leader: Demetris Zeinalipour



","foodscanner

a free and open food analyzer nutrition facts allergens and chemicals

 preface 
food scanner is a firstofakind food analyzer offering valuable 
information such as nutrition facts allergens and 
chemicals about foods using ordinary smartphones
 &#9; 
url httpfoodscannercsucyaccy
contact foodscannercsucyaccy

it is recommended to watch the video tutorials of the foodscanner system on httpfoodscannercsucyaccy before proceeding with these instructions

we hope that you find our foodscanner useful for your research and innovation activities we would like to have your feedback comments and remarks and of course any experiences and test results from your own experimental setups currently we can offer only limited support and assistance on the code due to lack of resources but we will try to get back to you as soon as possible questions and feedback may be sent to foodscannercsucyaccy

enjoy foodscanner

the foodscanner team 
 &#9; 
copyright c 2016 data management systems lab dmsl department of computer science
university of cyprus

all rights reserved

 mit open source licence

permission is hereby granted free of charge to any person obtaining a copy of
this software and associated documentation files the software to deal in the
software without restriction including without limitation the rights to use copy
modify merge publish distribute sublicense andor sell copies of the software
and to permit persons to whom the software is furnished to do so subject to the
following conditions
 &#9; 
the above copyright notice and this permission notice shall be included in all
copies or substantial portions of the software
 &#9; 
the software is provided as is without warranty of any kind express
or implied including but not limited to the warranties of merchantability
fitness for a particular purpose and noninfringement in no event shall the
authors or copyright holders be liable for any claim damages or other
liability whether in an action of contract tort or otherwise arising
from out of or in connection with the software or the use or other
dealings in the software
 &#9; 
 components 

short description of the contents included in this release

 android
current leader dimosthenis stefanidis 
try httpsplaygooglecomstoreappsdetailsidcomdsfoodscanner

project leader demetris zeinalipour",foodscann free open food analyz nutrit fact allergen chemic prefac food scanner firstofakind food analyz offer valuabl inform nutrit fact allergen chemic food use ordinari smartphon &#9; url httpfoodscannercsucyacci contact foodscannercsucyacci recommend watch video tutori foodscann system httpfoodscannercsucyacci befor proceed instruct hope find foodscann use research innov activ would like feedback comment remark cours ani experi test result experiment setup current offer onli limit support assist code due lack resourc tri get back soon possibl question feedback may sent foodscannercsucyacci enjoy foodscann foodscann team &#9; copyright c 2016 data manag system lab dmsl depart comput scienc univers cypru right reserv mit open sourc licenc permiss herebi grant free charg ani person obtain copi thi softwar associ document file softwar deal softwar without restrict includ without limit right use copi modifi merg publish distribut sublicens andor sell copi softwar permit person softwar furnish subject follow condit &#9; abov copyright notic thi permiss notic shall includ copi substanti portion softwar &#9; softwar provid without warranti ani kind express impli includ limit warranti merchant fit particular purpos noninfring event shall author copyright holder liabl ani claim damag liabil whether action contract tort otherwis aris connect softwar use deal softwar &#9; compon short descript content includ thi releas android current leader dimostheni stefanidi tri httpsplaygooglecomstoreappsdetailsidcomdsfoodscann project leader demetri zeinalipour,foodscanner free open food analyzer nutrition fact allergen chemical preface food scanner firstofakind food analyzer offering valuable information nutrition fact allergen chemical food using ordinary smartphones &#9; url httpfoodscannercsucyaccy contact foodscannercsucyaccy recommended watch video tutorial foodscanner system httpfoodscannercsucyaccy proceeding instruction hope find foodscanner useful research innovation activity would like feedback comment remark course experience test result experimental setup currently offer limited support assistance code due lack resource try get back soon possible question feedback may sent foodscannercsucyaccy enjoy foodscanner foodscanner team &#9; copyright c 2016 data management system lab dmsl department computer science university cyprus right reserved mit open source licence permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition &#9; copyright notice permission notice shall included copy substantial portion software &#9; software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software &#9; component short description content included release android current leader dimosthenis stefanidis try httpsplaygooglecomstoreappsdetailsidcomdsfoodscanner project leader demetris zeinalipour
Dart,"<img height='175' src=""https://static.openfoodfacts.org/images/svg/openfoodfacts-logo-en.svg"" align=""left"" hspace=""1"" vspace=""1"">

# Open Food Facts - Codename: ""Smooth App""
[![SmoothApp Post-Submit Tests](https://github.com/openfoodfacts/smooth-app/actions/workflows/postsubmit.yml/badge.svg)](https://github.com/openfoodfacts/smooth-app/actions/workflows/postsubmit.yml)

A new Flutter application by Open Food Facts. You can install it on [Android](https://play.google.com/store/apps/details?id=org.openfoodfacts.app) or [iPhone/iPad](https://apps.apple.com/us/app/smooth-app/id1526747703). Note that a internal development build ([Android](https://play.google.com/apps/internaltest/4700279390303733107) or [iPhone/iPad](https://testflight.apple.com/join/dIhF6Gi4) )if you'd like to use the results of your PRs quicker.

Smoothie. We pioneered the collaborative scanning app in 2012. With this experimental app, we’re reinventing it from the ground up, and this time, it’s personal.

## You get: 
- a scan that truly matches who you are (Green: the product matches your criteria, Red: there is a problem, Gray: Help us answer you by photographing the products)
- a product page that's knowledgeable, building on the vast amount of food facts we collect collaboratively, and other sources of knowledge, to help you make better food decisions
## You can: 
- scan and compare in 15 seconds the 3 brands of tomato sauces left on the shelf, on your terms.
- get a tailored comparison of any food category
- set your preferences without ruining your privacy

## Criteria you can pick: 
- Environment: Eco-Score
- Health: Additives & Ultra processed foods, Salt, Allergens, Nutri-Score

## Presentation

This new mobile application aims to showcase Open Food Facts's power to a broad range of users through a smooth user experience and sleek user interface.

<img height='175' src=""https://fr.blog.openfoodfacts.org/images/smoothie2.jpg"" align=""left"" hspace=""1"" vspace=""1"">

Smooth-app is developed in parallel to the [openfoodfacts-dart](https://github.com/openfoodfacts/openfoodfacts-dart) plugin, which provides a high level interface with the Open Food Facts API.
Every new interaction with the API should be implemented in the plugin in order to provide these new features to other developers.

## Contributing - What can I work on ?

Are you a developer? A graphic designer? Full of innovative ideas to help users improve their mode of consumption? Then join us!
We are always looking for new contributors, if you're willing to help please let us know, we'll be pleased to introduce you to the project.

- On GitHub, [you can start here to get some inspiration](https://github.com/openfoodfacts/smooth-app/issues/525) 
- You can join the Open Food Facts's Slack here : [Get an invite](https://slack.openfoodfacts.org) - [Open our Slack](https://openfoodfacts.slack.com).

## Wiki & Doc 
- [Project Smoothie - Open Food Facts wiki](https://wiki.openfoodfacts.org/Project_Smoothie)
- [Documentation (from code), on GitHub Pages](https://openfoodfacts.github.io/smooth-app/)
- [Smoothie GitHub wiki](https://github.com/openfoodfacts/smooth-app/wiki)

## V1 Roadmap
- [ ] Revamped and knowledgeable product page (Jasmeet)
- [ ] Minimal editing/addition value proposition, including by deep linking to the classic Android/iOS apps. (up for grabs)
- [ ] [Automation of marketing texts](https://github.com/openfoodfacts/fastlane-descriptions-smoothie) (mostly done)

## V2 - Later Roadmap
### Screenshot automation (High priority)
- [ ] [Add multilingual screenshot generation using Fastlane (Scan screen, settings screen, personalized ranking screen, home screen)](https://github.com/openfoodfacts/smooth-app/issues/217)

### Navigation
- [ ] [Fix navigation for the iOS build (iOS does not have a back button, and gestures are not intuitive for most people)](https://github.com/openfoodfacts/smooth-app/issues/17)

### Debt removal
- [ ] [Remove the hack on the category explorer](https://github.com/openfoodfacts/smooth-app/issues/19)

### Personalized results
- [ ] [Allow to filter results by country and by store](https://github.com/openfoodfacts/smooth-app/issues/99)

### Gamification
- [ ] User management + Small point system for contributions

### Product page

### Scanning
- [ ] [Allow the user to find alternatives products on a scan even if (s)he has scanned only 1 product](https://github.com/openfoodfacts/smooth-app/issues/23)
- [ ] [Add offline scanning to ensure results in all conditions](https://github.com/openfoodfacts/smooth-app/issues/18)

## Building

In order to build the application, make sure you are in the packages/smooth_app directory and run these commands :
 - flutter pub get
 - flutter run
 
### Android & iOS
- Nothing to report

### Dev Mode
- How to activate it: We now have a secret in-app dev mode which allows you to debug things faster, or access not-ready-for-primetime features. You can access it by: going to the Food preferences screen, Your Profile, User Management, Forgotten Password and then tapping ten times on the ""Change password"" button of the Reset Password screen (without typing any email). 
- Feel free to file an issue if you'd like new switches in this dev mode. 
- You can also add new flags for your features.
  - example: https://github.com/openfoodfacts/smooth-app/pull/834

## Internationalization

- Translations of the interface are managed using the new [Flutter internationalization](https://github.com/openfoodfacts/openfoodfacts-hungergames/blob/master/src/i18n/common.json) introduced in Flutter 1.22.
- New strings need to be added to lib/l10n/app_en.arb and the [corresponding translations can be added through CrowdIn](https://translate.openfoodfacts.org/translate/openfoodfacts/1322). Do not edit the other app_*.arb files as they will be overwritten by CrowdIn.

![Crowdin Action](https://github.com/openfoodfacts/smooth-app/workflows/Crowdin%20Action/badge.svg)

## Thank you
Smooth_app is made possible thanks to a grant by the Mozilla Foundation, after pitching them the idea at FOSDEM. a HUGE thank you :-) 
","img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1

 open food facts codename smooth app
smoothapp postsubmit testshttpsgithubcomopenfoodfactssmoothappactionsworkflowspostsubmitymlbadgesvghttpsgithubcomopenfoodfactssmoothappactionsworkflowspostsubmityml

a new flutter application by open food facts you can install it on androidhttpsplaygooglecomstoreappsdetailsidorgopenfoodfactsapp or iphoneipadhttpsappsapplecomusappsmoothappid1526747703 note that a internal development build androidhttpsplaygooglecomappsinternaltest4700279390303733107 or iphoneipadhttpstestflightapplecomjoindihf6gi4 if you ' d like to use the results of your prs quicker

smoothie we pioneered the collaborative scanning app in 2012 with this experimental app were reinventing it from the ground up and this time its personal

 you get 
 a scan that truly matches who you are green the product matches your criteria red there is a problem gray help us answer you by photographing the products
 a product page that ' s knowledgeable building on the vast amount of food facts we collect collaboratively and other sources of knowledge to help you make better food decisions
 you can 
 scan and compare in 15 seconds the 3 brands of tomato sauces left on the shelf on your terms
 get a tailored comparison of any food category
 set your preferences without ruining your privacy

 criteria you can pick 
 environment ecoscore
 health additives ultra processed foods salt allergens nutriscore

 presentation

this new mobile application aims to showcase open food facts ' s power to a broad range of users through a smooth user experience and sleek user interface

img height ' 175 ' srchttpsfrblogopenfoodfactsorgimagessmoothie2jpg alignleft hspace1 vspace1

smoothapp is developed in parallel to the openfoodfactsdarthttpsgithubcomopenfoodfactsopenfoodfactsdart plugin which provides a high level interface with the open food facts api
every new interaction with the api should be implemented in the plugin in order to provide these new features to other developers

 contributing what can i work on 

are you a developer a graphic designer full of innovative ideas to help users improve their mode of consumption then join us
we are always looking for new contributors if you ' re willing to help please let us know we ' ll be pleased to introduce you to the project

 on github you can start here to get some inspirationhttpsgithubcomopenfoodfactssmoothappissues525 
 you can join the open food facts ' s slack here get an invitehttpsslackopenfoodfactsorg open our slackhttpsopenfoodfactsslackcom

 wiki doc 
 project smoothie open food facts wikihttpswikiopenfoodfactsorgprojectsmoothie
 documentation from code on github pageshttpsopenfoodfactsgithubiosmoothapp
 smoothie github wikihttpsgithubcomopenfoodfactssmoothappwiki

 v1 roadmap
 revamped and knowledgeable product page jasmeet
 minimal editingaddition value proposition including by deep linking to the classic androidios apps up for grabs
 automation of marketing textshttpsgithubcomopenfoodfactsfastlanedescriptionssmoothie mostly done

 v2 later roadmap
 screenshot automation high priority
 add multilingual screenshot generation using fastlane scan screen settings screen personalized ranking screen home screenhttpsgithubcomopenfoodfactssmoothappissues217

 navigation
 fix navigation for the ios build ios does not have a back button and gestures are not intuitive for most peoplehttpsgithubcomopenfoodfactssmoothappissues17

 debt removal
 remove the hack on the category explorerhttpsgithubcomopenfoodfactssmoothappissues19

 personalized results
 allow to filter results by country and by storehttpsgithubcomopenfoodfactssmoothappissues99

 gamification
 user management small point system for contributions

 product page

 scanning
 allow the user to find alternatives products on a scan even if she has scanned only 1 producthttpsgithubcomopenfoodfactssmoothappissues23
 add offline scanning to ensure results in all conditionshttpsgithubcomopenfoodfactssmoothappissues18

 building

in order to build the application make sure you are in the packagessmoothapp directory and run these commands 
 flutter pub get
 flutter run
 
 android ios
 nothing to report

 dev mode
 how to activate it we now have a secret inapp dev mode which allows you to debug things faster or access notreadyforprimetime features you can access it by going to the food preferences screen your profile user management forgotten password and then tapping ten times on the change password button of the reset password screen without typing any email 
 feel free to file an issue if you ' d like new switches in this dev mode 
 you can also add new flags for your features
 example httpsgithubcomopenfoodfactssmoothapppull834

 internationalization

 translations of the interface are managed using the new flutter internationalizationhttpsgithubcomopenfoodfactsopenfoodfactshungergamesblobmastersrci18ncommonjson introduced in flutter 122
 new strings need to be added to libl10nappenarb and the corresponding translations can be added through crowdinhttpstranslateopenfoodfactsorgtranslateopenfoodfacts1322 do not edit the other apparb files as they will be overwritten by crowdin

crowdin actionhttpsgithubcomopenfoodfactssmoothappworkflowscrowdin20actionbadgesvg

 thank you
smoothapp is made possible thanks to a grant by the mozilla foundation after pitching them the idea at fosdem a huge thank you",img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1 open food fact codenam smooth app smoothapp postsubmit testshttpsgithubcomopenfoodfactssmoothappactionsworkflowspostsubmitymlbadgesvghttpsgithubcomopenfoodfactssmoothappactionsworkflowspostsubmityml new flutter applic open food fact instal androidhttpsplaygooglecomstoreappsdetailsidorgopenfoodfactsapp iphoneipadhttpsappsapplecomusappsmoothappid1526747703 note intern develop build androidhttpsplaygooglecomappsinternaltest4700279390303733107 iphoneipadhttpstestflightapplecomjoindihf6gi4 ' like use result pr quicker smoothi pioneer collabor scan app 2012 thi experiment app reinvent ground thi time person get scan truli match green product match criteria red problem gray help us answer photograph product product page ' knowledg build vast amount food fact collect collabor sourc knowledg help make better food decis scan compar 15 second 3 brand tomato sauc left shelf term get tailor comparison ani food categori set prefer without ruin privaci criteria pick environ ecoscor health addit ultra process food salt allergen nutriscor present thi new mobil applic aim showcas open food fact ' power broad rang user smooth user experi sleek user interfac img height ' 175 ' srchttpsfrblogopenfoodfactsorgimagessmoothie2jpg alignleft hspace1 vspace1 smoothapp develop parallel openfoodfactsdarthttpsgithubcomopenfoodfactsopenfoodfactsdart plugin provid high level interfac open food fact api everi new interact api implement plugin order provid new featur develop contribut work develop graphic design full innov idea help user improv mode consumpt join us alway look new contributor ' help pleas let us know ' pleas introduc project github start get inspirationhttpsgithubcomopenfoodfactssmoothappissues525 join open food fact ' slack get invitehttpsslackopenfoodfactsorg open slackhttpsopenfoodfactsslackcom wiki doc project smoothi open food fact wikihttpswikiopenfoodfactsorgprojectsmoothi document code github pageshttpsopenfoodfactsgithubiosmoothapp smoothi github wikihttpsgithubcomopenfoodfactssmoothappwiki v1 roadmap revamp knowledg product page jasmeet minim editingaddit valu proposit includ deep link classic androidio app grab autom market textshttpsgithubcomopenfoodfactsfastlanedescriptionssmoothi mostli done v2 later roadmap screenshot autom high prioriti add multilingu screenshot gener use fastlan scan screen set screen person rank screen home screenhttpsgithubcomopenfoodfactssmoothappissues217 navig fix navig io build io doe back button gestur intuit peoplehttpsgithubcomopenfoodfactssmoothappissues17 debt remov remov hack categori explorerhttpsgithubcomopenfoodfactssmoothappissues19 person result allow filter result countri storehttpsgithubcomopenfoodfactssmoothappissues99 gamif user manag small point system contribut product page scan allow user find altern product scan even ha scan onli 1 producthttpsgithubcomopenfoodfactssmoothappissues23 add offlin scan ensur result conditionshttpsgithubcomopenfoodfactssmoothappissues18 build order build applic make sure packagessmoothapp directori run command flutter pub get flutter run android io noth report dev mode activ secret inapp dev mode allow debug thing faster access notreadyforprimetim featur access go food prefer screen profil user manag forgotten password tap ten time chang password button reset password screen without type ani email feel free file issu ' like new switch thi dev mode also add new flag featur exampl httpsgithubcomopenfoodfactssmoothapppull834 internation translat interfac manag use new flutter internationalizationhttpsgithubcomopenfoodfactsopenfoodfactshungergamesblobmastersrci18ncommonjson introduc flutter 122 new string need ad libl10nappenarb correspond translat ad crowdinhttpstranslateopenfoodfactsorgtranslateopenfoodfacts1322 edit apparb file overwritten crowdin crowdin actionhttpsgithubcomopenfoodfactssmoothappworkflowscrowdin20actionbadgesvg thank smoothapp made possibl thank grant mozilla foundat pitch idea fosdem huge thank,img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1 open food fact codename smooth app smoothapp postsubmit testshttpsgithubcomopenfoodfactssmoothappactionsworkflowspostsubmitymlbadgesvghttpsgithubcomopenfoodfactssmoothappactionsworkflowspostsubmityml new flutter application open food fact install androidhttpsplaygooglecomstoreappsdetailsidorgopenfoodfactsapp iphoneipadhttpsappsapplecomusappsmoothappid1526747703 note internal development build androidhttpsplaygooglecomappsinternaltest4700279390303733107 iphoneipadhttpstestflightapplecomjoindihf6gi4 ' like use result pr quicker smoothie pioneered collaborative scanning app 2012 experimental app reinventing ground time personal get scan truly match green product match criterion red problem gray help u answer photographing product product page ' knowledgeable building vast amount food fact collect collaboratively source knowledge help make better food decision scan compare 15 second 3 brand tomato sauce left shelf term get tailored comparison food category set preference without ruining privacy criterion pick environment ecoscore health additive ultra processed food salt allergen nutriscore presentation new mobile application aim showcase open food fact ' power broad range user smooth user experience sleek user interface img height ' 175 ' srchttpsfrblogopenfoodfactsorgimagessmoothie2jpg alignleft hspace1 vspace1 smoothapp developed parallel openfoodfactsdarthttpsgithubcomopenfoodfactsopenfoodfactsdart plugin provides high level interface open food fact api every new interaction api implemented plugin order provide new feature developer contributing work developer graphic designer full innovative idea help user improve mode consumption join u always looking new contributor ' willing help please let u know ' pleased introduce project github start get inspirationhttpsgithubcomopenfoodfactssmoothappissues525 join open food fact ' slack get invitehttpsslackopenfoodfactsorg open slackhttpsopenfoodfactsslackcom wiki doc project smoothie open food fact wikihttpswikiopenfoodfactsorgprojectsmoothie documentation code github pageshttpsopenfoodfactsgithubiosmoothapp smoothie github wikihttpsgithubcomopenfoodfactssmoothappwiki v1 roadmap revamped knowledgeable product page jasmeet minimal editingaddition value proposition including deep linking classic androidios apps grab automation marketing textshttpsgithubcomopenfoodfactsfastlanedescriptionssmoothie mostly done v2 later roadmap screenshot automation high priority add multilingual screenshot generation using fastlane scan screen setting screen personalized ranking screen home screenhttpsgithubcomopenfoodfactssmoothappissues217 navigation fix navigation io build io doe back button gesture intuitive peoplehttpsgithubcomopenfoodfactssmoothappissues17 debt removal remove hack category explorerhttpsgithubcomopenfoodfactssmoothappissues19 personalized result allow filter result country storehttpsgithubcomopenfoodfactssmoothappissues99 gamification user management small point system contribution product page scanning allow user find alternative product scan even ha scanned 1 producthttpsgithubcomopenfoodfactssmoothappissues23 add offline scanning ensure result conditionshttpsgithubcomopenfoodfactssmoothappissues18 building order build application make sure packagessmoothapp directory run command flutter pub get flutter run android io nothing report dev mode activate secret inapp dev mode allows debug thing faster access notreadyforprimetime feature access going food preference screen profile user management forgotten password tapping ten time change password button reset password screen without typing email feel free file issue ' like new switch dev mode also add new flag feature example httpsgithubcomopenfoodfactssmoothapppull834 internationalization translation interface managed using new flutter internationalizationhttpsgithubcomopenfoodfactsopenfoodfactshungergamesblobmastersrci18ncommonjson introduced flutter 122 new string need added libl10nappenarb corresponding translation added crowdinhttpstranslateopenfoodfactsorgtranslateopenfoodfacts1322 edit apparb file overwritten crowdin crowdin actionhttpsgithubcomopenfoodfactssmoothappworkflowscrowdin20actionbadgesvg thank smoothapp made possible thanks grant mozilla foundation pitching idea fosdem huge thank
JavaScript,"# Clarifai Nutritional Breakdown Demo

Learn how to use Clarifai’s food model and the Wolfram Alpha API to recognize
what you’re eating & get a nutritional breakdown. Follow our [Clarifai tutorial here](https://stories.mlh.io/watch-what-you-eat-with-clarifai-71185734bc61).

![](/docs/demo.gif)

## Setup

1. Go to the [Clarifai](http://clarifai.com) website and create a new app. Make
   sure you Default Model to Food.
2. Visit the [Wolfram Alpha Developer Portal](https://developer.wolframalpha.com/portal/signup.html)
   and create a new AppID.
3. Fill in your Clarifai API Key and Wolfram Alpha AppID in `predict.js`.
4. Open `index.html` in your favorite web browser.

## License

```
Copyright 2018 Major League Hacking, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the ""Software""), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
```

","clarifai nutritional breakdown demo

learn how to use clarifais food model and the wolfram alpha api to recognize
what youre eating get a nutritional breakdown follow our clarifai tutorial herehttpsstoriesmlhiowatchwhatyoueatwithclarifai71185734bc61

docsdemogif

 setup

1 go to the clarifaihttpclarifaicom website and create a new app make
 sure you default model to food
2 visit the wolfram alpha developer portalhttpsdeveloperwolframalphacomportalsignuphtml
 and create a new appid
3 fill in your clarifai api key and wolfram alpha appid in predictjs
4 open indexhtml in your favorite web browser

 license


copyright 2018 major league hacking inc

permission is hereby granted free of charge to any person obtaining a copy of
this software and associated documentation files the software to deal in
the software without restriction including without limitation the rights to
use copy modify merge publish distribute sublicense andor sell copies of
the software and to permit persons to whom the software is furnished to do so
subject to the following conditions

the above copyright notice and this permission notice shall be included in all
copies or substantial portions of the software

the software is provided as is without warranty of any kind express or
implied including but not limited to the warranties of merchantability fitness
for a particular purpose and noninfringement in no event shall the authors or
copyright holders be liable for any claim damages or other liability whether
in an action of contract tort or otherwise arising from out of or in
connection with the software or the use or other dealings in the software",clarifai nutrit breakdown demo learn use clarifai food model wolfram alpha api recogn eat get nutrit breakdown follow clarifai tutori herehttpsstoriesmlhiowatchwhatyoueatwithclarifai71185734bc61 docsdemogif setup 1 go clarifaihttpclarifaicom websit creat new app make sure default model food 2 visit wolfram alpha develop portalhttpsdeveloperwolframalphacomportalsignuphtml creat new appid 3 fill clarifai api key wolfram alpha appid predictj 4 open indexhtml favorit web browser licens copyright 2018 major leagu hack inc permiss herebi grant free charg ani person obtain copi thi softwar associ document file softwar deal softwar without restrict includ without limit right use copi modifi merg publish distribut sublicens andor sell copi softwar permit person softwar furnish subject follow condit abov copyright notic thi permiss notic shall includ copi substanti portion softwar softwar provid without warranti ani kind express impli includ limit warranti merchant fit particular purpos noninfring event shall author copyright holder liabl ani claim damag liabil whether action contract tort otherwis aris connect softwar use deal softwar,clarifai nutritional breakdown demo learn use clarifais food model wolfram alpha api recognize youre eating get nutritional breakdown follow clarifai tutorial herehttpsstoriesmlhiowatchwhatyoueatwithclarifai71185734bc61 docsdemogif setup 1 go clarifaihttpclarifaicom website create new app make sure default model food 2 visit wolfram alpha developer portalhttpsdeveloperwolframalphacomportalsignuphtml create new appid 3 fill clarifai api key wolfram alpha appid predictjs 4 open indexhtml favorite web browser license copyright 2018 major league hacking inc permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
Jupyter Notebook,"# Pima Indians Diabetes Database
## Predicting the onset of diabetes

I've explored, analysed the Pima Indians Diabetes Dataset, and applied Machine Learning Techniques. I've analysed and discussed the results using the knowledge acquired as a experienced Registered Dietitian.

The Pima Indian Diabetes Dataset, originally from the National Institute of Diabetes and Digestive and Kidney Diseases, contains information of 768 women from a population near Phoenix, Arizona, USA. The outcome tested was Diabetes, 258 tested positive and 500 tested negative. Therefore, there is one target (dependent) variable and the 8 attributes (TYNECKI, 2018): pregnancies, OGTT(Oral Glucose Tolerance Test), blood pressure, skin thickness, insulin, BMI(Body Mass Index), age, pedigree diabetes function.
The Pima population has been under study by the National Institute of Diabetes and Digestive and Kidney Diseases at intervals of 2 years since 1965. As epidemiological evidence indicates that T2DM results from interaction of genetic and environmental factors, the Pima Indians Diabetes Dataset includes information about attributes that could and should be related to the onset of diabetes and its future complications.

:pushpin: Python v 3.7

:pushpin: Libraries used:
* pandas
* numpy
* seaborn
* matplotlib.pyplot
* sklearn
* statsmodels

:pushpin: [Jupyter notebook](https://jupyter.org/) was used. :bell: In case of any problem to visualise the project, please check [here](shorturl.at/hHLT4)
","pima indians diabetes database
 predicting the onset of diabetes

i ' ve explored analysed the pima indians diabetes dataset and applied machine learning techniques i ' ve analysed and discussed the results using the knowledge acquired as a experienced registered dietitian

the pima indian diabetes dataset originally from the national institute of diabetes and digestive and kidney diseases contains information of 768 women from a population near phoenix arizona usa the outcome tested was diabetes 258 tested positive and 500 tested negative therefore there is one target dependent variable and the 8 attributes tynecki 2018 pregnancies ogttoral glucose tolerance test blood pressure skin thickness insulin bmibody mass index age pedigree diabetes function
the pima population has been under study by the national institute of diabetes and digestive and kidney diseases at intervals of 2 years since 1965 as epidemiological evidence indicates that t2dm results from interaction of genetic and environmental factors the pima indians diabetes dataset includes information about attributes that could and should be related to the onset of diabetes and its future complications

pushpin python v 37

pushpin libraries used
 pandas
 numpy
 seaborn
 matplotlibpyplot
 sklearn
 statsmodels

pushpin jupyter notebookhttpsjupyterorg was used bell in case of any problem to visualise the project please check hereshorturlathhlt4",pima indian diabet databas predict onset diabet ' explor analys pima indian diabet dataset appli machin learn techniqu ' analys discuss result use knowledg acquir experienc regist dietitian pima indian diabet dataset origin nation institut diabet digest kidney diseas contain inform 768 women popul near phoenix arizona usa outcom test wa diabet 258 test posit 500 test neg therefor one target depend variabl 8 attribut tynecki 2018 pregnanc ogttor glucos toler test blood pressur skin thick insulin bmibodi mass index age pedigre diabet function pima popul ha studi nation institut diabet digest kidney diseas interv 2 year sinc 1965 epidemiolog evid indic t2dm result interact genet environment factor pima indian diabet dataset includ inform attribut could relat onset diabet futur complic pushpin python v 37 pushpin librari use panda numpi seaborn matplotlibpyplot sklearn statsmodel pushpin jupyt notebookhttpsjupyterorg wa use bell case ani problem visualis project pleas check hereshorturlathhlt4,pima indian diabetes database predicting onset diabetes ' explored analysed pima indian diabetes dataset applied machine learning technique ' analysed discussed result using knowledge acquired experienced registered dietitian pima indian diabetes dataset originally national institute diabetes digestive kidney disease contains information 768 woman population near phoenix arizona usa outcome tested wa diabetes 258 tested positive 500 tested negative therefore one target dependent variable 8 attribute tynecki 2018 pregnancy ogttoral glucose tolerance test blood pressure skin thickness insulin bmibody mass index age pedigree diabetes function pima population ha study national institute diabetes digestive kidney disease interval 2 year since 1965 epidemiological evidence indicates t2dm result interaction genetic environmental factor pima indian diabetes dataset includes information attribute could related onset diabetes future complication pushpin python v 37 pushpin library used panda numpy seaborn matplotlibpyplot sklearn statsmodels pushpin jupyter notebookhttpsjupyterorg wa used bell case problem visualise project please check hereshorturlathhlt4
Jupyter Notebook,"# InstaMarketing
Cohort 15 Capstone Project for the Certificate of Data Science at Georgetown University School of Continuing Studies.

Our team utilized a dataset from a large online grocery delivery service consisting of information on customer order history to predict when a customer, or user as it is defined in our data, will be likely to order again. With this information in hand the business will in turn be able to focus a calculated amount of their advertising budget on users they suspect will be likely to have larger gaps between their orders placed.

The dataset obtained contains a relational set of five csv files each with varying amount of information on a user’s orders completed over time. In total, more than 200,000 users with over 3 million orders completed are represented in the data.



the number of days since prior order for each user fell into the below distribution which became our target groups:

-A group of orders occurring within 0-7 days

-A group of orders occurring between 8-29 days

-A group of orders occurring beyond 30+ days
","instamarketing
cohort 15 capstone project for the certificate of data science at georgetown university school of continuing studies

our team utilized a dataset from a large online grocery delivery service consisting of information on customer order history to predict when a customer or user as it is defined in our data will be likely to order again with this information in hand the business will in turn be able to focus a calculated amount of their advertising budget on users they suspect will be likely to have larger gaps between their orders placed

the dataset obtained contains a relational set of five csv files each with varying amount of information on a users orders completed over time in total more than 200000 users with over 3 million orders completed are represented in the data



the number of days since prior order for each user fell into the below distribution which became our target groups

a group of orders occurring within 07 days

a group of orders occurring between 829 days

a group of orders occurring beyond 30 days",instamarket cohort 15 capston project certif data scienc georgetown univers school continu studi team util dataset larg onlin groceri deliveri servic consist inform custom order histori predict custom user defin data like order thi inform hand busi turn abl focu calcul amount advertis budget user suspect like larger gap order place dataset obtain contain relat set five csv file vari amount inform user order complet time total 200000 user 3 million order complet repres data number day sinc prior order user fell distribut becam target group group order occur within 07 day group order occur 829 day group order occur beyond 30 day,instamarketing cohort 15 capstone project certificate data science georgetown university school continuing study team utilized dataset large online grocery delivery service consisting information customer order history predict customer user defined data likely order information hand business turn able focus calculated amount advertising budget user suspect likely larger gap order placed dataset obtained contains relational set five csv file varying amount information user order completed time total 200000 user 3 million order completed represented data number day since prior order user fell distribution became target group group order occurring within 07 day group order occurring 829 day group order occurring beyond 30 day
JavaScript,"# BetterMe-v1
a nutrition application
","bettermev1
a nutrition application",bettermev1 nutrit applic,bettermev1 nutrition application
Ruby,"# FoodInfo

FoodInfo is a ruby gem that retrieves food nutrition information from various online data sources.



## Installation

FoodInfo is available as a gem, so installation is as simple as:

    gem install food_info



## Supported Data Sources

There's currently only one adapter implemented, which pulls data from [FatSecret's REST API](http://platform.fatsecret.com/api/Default.aspx?screen=rapih).  The code's modular and adding additional data sources should be fairly straightforward, but since DailyBurn discontinued their API access I don't know of any other solid sources (if you do, though, please let me know and/or add an adapter!).



## Usage

### Housekeeping

To use the FatSecret API (currently your only option), you'll first need to [sign up for a free developer account](http://platform.fatsecret.com/api/Default.aspx?screen=r) and retrieve the ""REST API Consumer Key"" and ""REST API Consumer Secret"" from your ""My Account"" tab.

Once that's done, the first step is to tell FoodInfo which adapter you want to use and what authorization to send.

    FoodInfo.establish_connection(:fat_secret, :key => 'YOUR-KEY', :secret => 'YOUR-KEY')


### Caching

To cache results, FoodInfo supports passing in an instance of a memcache-API-compatible (i.e. responds to <code>get</code> and <code>set</code>) caching object.  I recommend using the [Dalli gem](https://github.com/mperham/dalli).

    require 'dalli'
    client = Dalli::Client.new('localhost:11211')
    FoodInfo.establish_connection(:fat_secret, :key => 'YOUR-KEY', :secret => 'YOUR-KEY', :cache => client)

With that in place repeated <code>search</code> or <code>details</code> requests will pull from the cache, and not the API endpoint.

### Searching

Now we can search for foods.

    cheese = FoodInfo.search('cheese')
    cheese.total_results    # => 2469
    cheese.per_page         # => 20
    cheese.page             # => 1
    cheese.results          # => ... big array ...
    cheese.results.first    # => 
    # {
    #     ""description"" => ""Per 100g - Calories: 403kcal | Fat: 33.14g | Carbs: 1.28g | Protein: 24.90g"",
    #              ""id"" => ""33689"",
    #            ""kind"" => ""Generic"",
    #            ""name"" => ""Cheddar Cheese"",
    #             ""url"" => ""http://www.fatsecret.com/calories-nutrition/usda/cheddar-cheese""
    # }

(As an aside, I get that pretty, nicely-lined-up console formatting from the remarkably awesome [AwesomePrint Gem](https://github.com/michaeldv/awesome_print)).

#### Pagination

Search supports pagination via the <tt>page</tt> and <tt>per_page</tt> (max 50) parameters:

    FoodInfo.search('cheese', :page => 2, :per_page => 50)

#### Access to search results

You can access the results of the search explicitly:

    FoodInfo.search('cheese').results # => ... lots of results ...

But the SearchResults class includes Enumerable, so you can also just call enumerable methods on it directly:

    FoodInfo.search('cheese').map(&:name) # => array of names of matching foods
    

### Nutritional Details

Once you have a specific food item in mind from the search results, you can retrieve a whole lot of additional information.

    cheddar = FoodInfo.search('cheese').first
    info = FoodInfo.details( cheddar.id ) # => ... a whole lotta data ...

General metadata about the cheese includes id, name, kind, and url, which are identical to what you'd get from the <tt>search</tt> method.  It also has one or more servings, however, and this is where we finally get our nutrition info.

    serving = info.servings.first # =>
    # {
    #                     ""calcium"" => 95,
    #                    ""calories"" => 532.0,
    #                ""carbohydrate"" => 1.69,
    #                 ""cholesterol"" => 139.0,
    #                         ""fat"" => 43.74,
    #                       ""fiber"" => 0.0,
    #                          ""id"" => ""29131"",
    #                        ""iron"" => 5,
    #     ""measurement_description"" => ""cup, diced"",
    #       ""metric_serving_amount"" => 132.0,
    #         ""metric_serving_unit"" => ""g"",
    #         ""monounsaturated_fat"" => 12.396,
    #             ""number_of_units"" => 1.0,
    #         ""polyunsaturated_fat"" => 1.243,
    #                   ""potassium"" => 129.0,
    #                     ""protein"" => 32.87,
    #               ""saturated_fat"" => 27.841,
    #         ""serving_description"" => ""1 cup diced"",
    #                      ""sodium"" => 820.0,
    #                       ""sugar"" => 0.69,
    #                   ""trans_fat"" => 0.0,
    #                         ""url"" => ""http://www.fatsecret.com/calories-nutrition/usda/cheddar-cheese?portionid=29131&portionamount=1.000"",
    #                   ""vitamin_a"" => 26,
    #                   ""vitamin_c"" => 0
    # }
    
For full details on what each of those fields contains, check [the FatSecret documentation](http://platform.fatsecret.com/api/Default.aspx?screen=rapiref&method=food.get#methodResponse).


## Legal Note

The FatSecret TOS requires you not to store, well, [pretty much anything](http://platform.fatsecret.com/api/Default.aspx?screen=rapisd) aside from food or serving IDs for more than 24 hours.  This is annoying, but I figured I'd give you a heads up.


## Note on Patches/Pull Requests

Contributions are welcome, particularly adding adapters for additional data sources.

As always, the process is to fork this project on Github, make your changes (preferably in a topic branch, and without changing the gem version), send a pull request, and then receive much appreciation!

## License

Copyright &copy; 2011 [Deviantech, Inc.](http://www.deviantech.com) and released under the MIT license.

","foodinfo

foodinfo is a ruby gem that retrieves food nutrition information from various online data sources



 installation

foodinfo is available as a gem so installation is as simple as

 gem install foodinfo



 supported data sources

there ' s currently only one adapter implemented which pulls data from fatsecret ' s rest apihttpplatformfatsecretcomapidefaultaspxscreenrapih the code ' s modular and adding additional data sources should be fairly straightforward but since dailyburn discontinued their api access i don ' t know of any other solid sources if you do though please let me know andor add an adapter



 usage

 housekeeping

to use the fatsecret api currently your only option you ' ll first need to sign up for a free developer accounthttpplatformfatsecretcomapidefaultaspxscreenr and retrieve the rest api consumer key and rest api consumer secret from your my account tab

once that ' s done the first step is to tell foodinfo which adapter you want to use and what authorization to send

 foodinfoestablishconnectionfatsecret key ' yourkey ' secret ' yourkey ' 


 caching

to cache results foodinfo supports passing in an instance of a memcacheapicompatible ie responds to codegetcode and codesetcode caching object i recommend using the dalli gemhttpsgithubcommperhamdalli

 require ' dalli ' 
 client dalliclientnew ' localhost11211 ' 
 foodinfoestablishconnectionfatsecret key ' yourkey ' secret ' yourkey ' cache client

with that in place repeated codesearchcode or codedetailscode requests will pull from the cache and not the api endpoint

 searching

now we can search for foods

 cheese foodinfosearch ' cheese ' 
 cheesetotalresults 2469
 cheeseperpage 20
 cheesepage 1
 cheeseresults big array 
 cheeseresultsfirst 
 
 description per 100g calories 403kcal fat 3314g carbs 128g protein 2490g
 id 33689
 kind generic
 name cheddar cheese
 url httpwwwfatsecretcomcaloriesnutritionusdacheddarcheese
 

as an aside i get that pretty nicelylinedup console formatting from the remarkably awesome awesomeprint gemhttpsgithubcommichaeldvawesomeprint

 pagination

search supports pagination via the ttpagett and ttperpagett max 50 parameters

 foodinfosearch ' cheese ' page 2 perpage 50

 access to search results

you can access the results of the search explicitly

 foodinfosearch ' cheese ' results lots of results 

but the searchresults class includes enumerable so you can also just call enumerable methods on it directly

 foodinfosearch ' cheese ' mapname array of names of matching foods
 

 nutritional details

once you have a specific food item in mind from the search results you can retrieve a whole lot of additional information

 cheddar foodinfosearch ' cheese ' first
 info foodinfodetails cheddarid a whole lotta data 

general metadata about the cheese includes id name kind and url which are identical to what you ' d get from the ttsearchtt method it also has one or more servings however and this is where we finally get our nutrition info

 serving infoservingsfirst 
 
 calcium 95
 calories 5320
 carbohydrate 169
 cholesterol 1390
 fat 4374
 fiber 00
 id 29131
 iron 5
 measurementdescription cup diced
 metricservingamount 1320
 metricservingunit g
 monounsaturatedfat 12396
 numberofunits 10
 polyunsaturatedfat 1243
 potassium 1290
 protein 3287
 saturatedfat 27841
 servingdescription 1 cup diced
 sodium 8200
 sugar 069
 transfat 00
 url httpwwwfatsecretcomcaloriesnutritionusdacheddarcheeseportionid29131portionamount1000
 vitamina 26
 vitaminc 0
 
 
for full details on what each of those fields contains check the fatsecret documentationhttpplatformfatsecretcomapidefaultaspxscreenrapirefmethodfoodgetmethodresponse


 legal note

the fatsecret tos requires you not to store well pretty much anythinghttpplatformfatsecretcomapidefaultaspxscreenrapisd aside from food or serving ids for more than 24 hours this is annoying but i figured i ' d give you a heads up


 note on patchespull requests

contributions are welcome particularly adding adapters for additional data sources

as always the process is to fork this project on github make your changes preferably in a topic branch and without changing the gem version send a pull request and then receive much appreciation

 license

copyright copy 2011 deviantech inchttpwwwdeviantechcom and released under the mit license",foodinfo foodinfo rubi gem retriev food nutrit inform variou onlin data sourc instal foodinfo avail gem instal simpl gem instal foodinfo support data sourc ' current onli one adapt implement pull data fatsecret ' rest apihttpplatformfatsecretcomapidefaultaspxscreenrapih code ' modular ad addit data sourc fairli straightforward sinc dailyburn discontinu api access ' know ani solid sourc though pleas let know andor add adapt usag housekeep use fatsecret api current onli option ' first need sign free develop accounthttpplatformfatsecretcomapidefaultaspxscreenr retriev rest api consum key rest api consum secret account tab onc ' done first step tell foodinfo adapt want use author send foodinfoestablishconnectionfatsecret key ' yourkey ' secret ' yourkey ' cach cach result foodinfo support pass instanc memcacheapicompat ie respond codegetcod codesetcod cach object recommend use dalli gemhttpsgithubcommperhamd requir ' dalli ' client dalliclientnew ' localhost11211 ' foodinfoestablishconnectionfatsecret key ' yourkey ' secret ' yourkey ' cach client place repeat codesearchcod codedetailscod request pull cach api endpoint search search food chees foodinfosearch ' chees ' cheesetotalresult 2469 cheeseperpag 20 cheesepag 1 cheeseresult big array cheeseresultsfirst descript per 100g calori 403kcal fat 3314g carb 128g protein 2490g id 33689 kind gener name cheddar chees url httpwwwfatsecretcomcaloriesnutritionusdacheddarchees asid get pretti nicelylinedup consol format remark awesom awesomeprint gemhttpsgithubcommichaeldvawesomeprint pagin search support pagin via ttpagett ttperpagett max 50 paramet foodinfosearch ' chees ' page 2 perpag 50 access search result access result search explicitli foodinfosearch ' chees ' result lot result searchresult class includ enumer also call enumer method directli foodinfosearch ' chees ' mapnam array name match food nutrit detail onc specif food item mind search result retriev whole lot addit inform cheddar foodinfosearch ' chees ' first info foodinfodetail cheddarid whole lotta data gener metadata chees includ id name kind url ident ' get ttsearchtt method also ha one serv howev thi final get nutrit info serv infoservingsfirst calcium 95 calori 5320 carbohydr 169 cholesterol 1390 fat 4374 fiber 00 id 29131 iron 5 measurementdescript cup dice metricservingamount 1320 metricservingunit g monounsaturatedfat 12396 numberofunit 10 polyunsaturatedfat 1243 potassium 1290 protein 3287 saturatedfat 27841 servingdescript 1 cup dice sodium 8200 sugar 069 transfat 00 url httpwwwfatsecretcomcaloriesnutritionusdacheddarcheeseportionid29131portionamount1000 vitamina 26 vitaminc 0 full detail field contain check fatsecret documentationhttpplatformfatsecretcomapidefaultaspxscreenrapirefmethodfoodgetmethodrespons legal note fatsecret requir store well pretti much anythinghttpplatformfatsecretcomapidefaultaspxscreenrapisd asid food serv id 24 hour thi annoy figur ' give head note patchespul request contribut welcom particularli ad adapt addit data sourc alway process fork thi project github make chang prefer topic branch without chang gem version send pull request receiv much appreci licens copyright copi 2011 deviantech inchttpwwwdeviantechcom releas mit licens,foodinfo foodinfo ruby gem retrieves food nutrition information various online data source installation foodinfo available gem installation simple gem install foodinfo supported data source ' currently one adapter implemented pull data fatsecret ' rest apihttpplatformfatsecretcomapidefaultaspxscreenrapih code ' modular adding additional data source fairly straightforward since dailyburn discontinued api access ' know solid source though please let know andor add adapter usage housekeeping use fatsecret api currently option ' first need sign free developer accounthttpplatformfatsecretcomapidefaultaspxscreenr retrieve rest api consumer key rest api consumer secret account tab ' done first step tell foodinfo adapter want use authorization send foodinfoestablishconnectionfatsecret key ' yourkey ' secret ' yourkey ' caching cache result foodinfo support passing instance memcacheapicompatible ie responds codegetcode codesetcode caching object recommend using dalli gemhttpsgithubcommperhamdalli require ' dalli ' client dalliclientnew ' localhost11211 ' foodinfoestablishconnectionfatsecret key ' yourkey ' secret ' yourkey ' cache client place repeated codesearchcode codedetailscode request pull cache api endpoint searching search food cheese foodinfosearch ' cheese ' cheesetotalresults 2469 cheeseperpage 20 cheesepage 1 cheeseresults big array cheeseresultsfirst description per 100g calorie 403kcal fat 3314g carbs 128g protein 2490g id 33689 kind generic name cheddar cheese url httpwwwfatsecretcomcaloriesnutritionusdacheddarcheese aside get pretty nicelylinedup console formatting remarkably awesome awesomeprint gemhttpsgithubcommichaeldvawesomeprint pagination search support pagination via ttpagett ttperpagett max 50 parameter foodinfosearch ' cheese ' page 2 perpage 50 access search result access result search explicitly foodinfosearch ' cheese ' result lot result searchresults class includes enumerable also call enumerable method directly foodinfosearch ' cheese ' mapname array name matching food nutritional detail specific food item mind search result retrieve whole lot additional information cheddar foodinfosearch ' cheese ' first info foodinfodetails cheddarid whole lotta data general metadata cheese includes id name kind url identical ' get ttsearchtt method also ha one serving however finally get nutrition info serving infoservingsfirst calcium 95 calorie 5320 carbohydrate 169 cholesterol 1390 fat 4374 fiber 00 id 29131 iron 5 measurementdescription cup diced metricservingamount 1320 metricservingunit g monounsaturatedfat 12396 numberofunits 10 polyunsaturatedfat 1243 potassium 1290 protein 3287 saturatedfat 27841 servingdescription 1 cup diced sodium 8200 sugar 069 transfat 00 url httpwwwfatsecretcomcaloriesnutritionusdacheddarcheeseportionid29131portionamount1000 vitamina 26 vitaminc 0 full detail field contains check fatsecret documentationhttpplatformfatsecretcomapidefaultaspxscreenrapirefmethodfoodgetmethodresponse legal note fatsecret tos requires store well pretty much anythinghttpplatformfatsecretcomapidefaultaspxscreenrapisd aside food serving id 24 hour annoying figured ' give head note patchespull request contribution welcome particularly adding adapter additional data source always process fork project github make change preferably topic branch without changing gem version send pull request receive much appreciation license copyright copy 2011 deviantech inchttpwwwdeviantechcom released mit license
JavaScript,"# food-search

> Discover the nutritional information of 700,000+ foods!

**food-search** is a *open-source* project which uses [Edaman API](https://developer.edamam.com/) to browse and retrieve the nutritional information and brand of any food or meal searched. The API contains a [Food Database](https://developer.edamam.com/food-database-api) with over 700,000 foods, restaurant items, fast foods and package foods.

[**Demo available here!**](http://food-search.surge.sh)

<p align=""center"">
  <img src=""preview.jpg"">
</p>

## Using

First of all, you need to clone or download this repository.

```
git clone https://github.com/viniciusmeneses/food-search
```

Go to the **food-search** folder and install the dependencies

```
npm install
```

Run one of the following commands to start use **food-search**:

```
// Build and starts front-end and back-end servers
npm run dev

// Builds the application only
npm run build
```

<p align=""center"">
  <a href=""https://developer.edamam.com/""><img src=""https://imgur.com/xUqNOOo.png""></a>
</p>
","foodsearch

 discover the nutritional information of 700000 foods

foodsearch is a opensource project which uses edaman apihttpsdeveloperedamamcom to browse and retrieve the nutritional information and brand of any food or meal searched the api contains a food databasehttpsdeveloperedamamcomfooddatabaseapi with over 700000 foods restaurant items fast foods and package foods

demo available herehttpfoodsearchsurgesh

p aligncenter
 img srcpreviewjpg
p

 using

first of all you need to clone or download this repository


git clone httpsgithubcomviniciusmenesesfoodsearch


go to the foodsearch folder and install the dependencies


npm install


run one of the following commands to start use foodsearch


 build and starts frontend and backend servers
npm run dev

 builds the application only
npm run build


p aligncenter
 a hrefhttpsdeveloperedamamcomimg srchttpsimgurcomxuqnooopnga
p",foodsearch discov nutrit inform 700000 food foodsearch opensourc project use edaman apihttpsdeveloperedamamcom brows retriev nutrit inform brand ani food meal search api contain food databasehttpsdeveloperedamamcomfooddatabaseapi 700000 food restaur item fast food packag food demo avail herehttpfoodsearchsurgesh p aligncent img srcpreviewjpg p use first need clone download thi repositori git clone httpsgithubcomviniciusmenesesfoodsearch go foodsearch folder instal depend npm instal run one follow command start use foodsearch build start frontend backend server npm run dev build applic onli npm run build p aligncent hrefhttpsdeveloperedamamcomimg srchttpsimgurcomxuqnooopnga p,foodsearch discover nutritional information 700000 food foodsearch opensource project us edaman apihttpsdeveloperedamamcom browse retrieve nutritional information brand food meal searched api contains food databasehttpsdeveloperedamamcomfooddatabaseapi 700000 food restaurant item fast food package food demo available herehttpfoodsearchsurgesh p aligncenter img srcpreviewjpg p using first need clone download repository git clone httpsgithubcomviniciusmenesesfoodsearch go foodsearch folder install dependency npm install run one following command start use foodsearch build start frontend backend server npm run dev build application npm run build p aligncenter hrefhttpsdeveloperedamamcomimg srchttpsimgurcomxuqnooopnga p
JavaScript,"growthchart
===========

A visual tool used by doctors to monitor a child's nutrition and health.

Demo:

[Demo](http://nathanleiby.github.com/growthchart/)

Screenshot:

![Example](https://raw.githubusercontent.com/gpratt5/growthchart/master/screenshot/hcfab.png)

Ideas:

- Work for weight vs age, height vs age, height vs weight, etc etc
- Work against various standards (CDC, WHO, national goverments)

Todos:

- Clarify which chart is which. (and if dataset is for boys and/or girls)
- Smoothly change between charts ([How to dynamically add data to a chart](http://jsfiddle.net/mbeasley183/DbXhL/))
- Default is to select the last datum; highlight it and show tooltip
- Improved tickmarks
- Labels on the lines, or a legend (%tile, malnourished/severely/normal); color for different lines
- Improve tooltip style... [1](http://rveciana.github.com/geoexamples/d3js/d3js_electoral_map/tooltipCode.html#), [2](http://rveciana.github.com/geoexamples/?page=d3js/d3js_electoral_map/simpleTooltipCode.html), [3](http://bl.ocks.org/biovisualize/2973775)

Additions:

- Added metas and values for Head Circumference vs Age 0-5yrs for girls/boys based on WHO standards.
- Added metas and values for Length vs Age 0-5yrs for girls/boys based on WHO Standards.
- Added checks to change Y axis label based on new chart types
- Added checks to change tooltip text based on new chart types

Other Growth charts:

- [OpenMRS Growth Chart module](https://wiki.openmrs.org/display/docs/Growth+Chart+Module)
- [CDC](http://www.cdc.gov/growthcharts/), [CDC Pdf](http://www.cdc.gov/growthcharts/2000growthchart-us.pdf)
    - page 138, table 9 (weight vs age, birth to 36 months)
    - page 143, table 14 (weight vs age, 2 to 20 years)
- [Online MedCalc](http://www.medcalc.com/growth/)
- [UK Growth Charts](http://www.rcpch.ac.uk/child-health/research-projects/uk-who-growth-charts/uk-who-growth-charts)

Thank you:

- to @ewheeler and the [PyGrowup](https://github.com/ewheeler/pygrowup) project for sharing the method to pre-process the WHO/CDC measurement data into json format.
","growthchart


a visual tool used by doctors to monitor a child ' s nutrition and health

demo

demohttpnathanleibygithubcomgrowthchart

screenshot

examplehttpsrawgithubusercontentcomgpratt5growthchartmasterscreenshothcfabpng

ideas

 work for weight vs age height vs age height vs weight etc etc
 work against various standards cdc who national goverments

todos

 clarify which chart is which and if dataset is for boys andor girls
 smoothly change between charts how to dynamically add data to a charthttpjsfiddlenetmbeasley183dbxhl
 default is to select the last datum highlight it and show tooltip
 improved tickmarks
 labels on the lines or a legend tile malnourishedseverelynormal color for different lines
 improve tooltip style 1httprvecianagithubcomgeoexamplesd3jsd3jselectoralmaptooltipcodehtml 2httprvecianagithubcomgeoexamplespaged3jsd3jselectoralmapsimpletooltipcodehtml 3httpblocksorgbiovisualize2973775

additions

 added metas and values for head circumference vs age 05yrs for girlsboys based on who standards
 added metas and values for length vs age 05yrs for girlsboys based on who standards
 added checks to change y axis label based on new chart types
 added checks to change tooltip text based on new chart types

other growth charts

 openmrs growth chart modulehttpswikiopenmrsorgdisplaydocsgrowthchartmodule
 cdchttpwwwcdcgovgrowthcharts cdc pdfhttpwwwcdcgovgrowthcharts2000growthchartuspdf
 page 138 table 9 weight vs age birth to 36 months
 page 143 table 14 weight vs age 2 to 20 years
 online medcalchttpwwwmedcalccomgrowth
 uk growth chartshttpwwwrcpchacukchildhealthresearchprojectsukwhogrowthchartsukwhogrowthcharts

thank you

 to ewheeler and the pygrowuphttpsgithubcomewheelerpygrowup project for sharing the method to preprocess the whocdc measurement data into json format",growthchart visual tool use doctor monitor child ' nutrit health demo demohttpnathanleibygithubcomgrowthchart screenshot examplehttpsrawgithubusercontentcomgpratt5growthchartmasterscreenshothcfabpng idea work weight vs age height vs age height vs weight etc etc work variou standard cdc nation gover todo clarifi chart dataset boy andor girl smoothli chang chart dynam add data charthttpjsfiddlenetmbeasley183dbxhl default select last datum highlight show tooltip improv tickmark label line legend tile malnourishedseverelynorm color differ line improv tooltip style 1httprvecianagithubcomgeoexamplesd3jsd3jselectoralmaptooltipcodehtml 2httprvecianagithubcomgeoexamplespaged3jsd3jselectoralmapsimpletooltipcodehtml 3httpblocksorgbiovisualize2973775 addit ad meta valu head circumfer vs age 05yr girlsboy base standard ad meta valu length vs age 05yr girlsboy base standard ad check chang axi label base new chart type ad check chang tooltip text base new chart type growth chart openmr growth chart modulehttpswikiopenmrsorgdisplaydocsgrowthchartmodul cdchttpwwwcdcgovgrowthchart cdc pdfhttpwwwcdcgovgrowthcharts2000growthchartuspdf page 138 tabl 9 weight vs age birth 36 month page 143 tabl 14 weight vs age 2 20 year onlin medcalchttpwwwmedcalccomgrowth uk growth chartshttpwwwrcpchacukchildhealthresearchprojectsukwhogrowthchartsukwhogrowthchart thank ewheel pygrowuphttpsgithubcomewheelerpygrowup project share method preprocess whocdc measur data json format,growthchart visual tool used doctor monitor child ' nutrition health demo demohttpnathanleibygithubcomgrowthchart screenshot examplehttpsrawgithubusercontentcomgpratt5growthchartmasterscreenshothcfabpng idea work weight v age height v age height v weight etc etc work various standard cdc national goverments todos clarify chart dataset boy andor girl smoothly change chart dynamically add data charthttpjsfiddlenetmbeasley183dbxhl default select last datum highlight show tooltip improved tickmarks label line legend tile malnourishedseverelynormal color different line improve tooltip style 1httprvecianagithubcomgeoexamplesd3jsd3jselectoralmaptooltipcodehtml 2httprvecianagithubcomgeoexamplespaged3jsd3jselectoralmapsimpletooltipcodehtml 3httpblocksorgbiovisualize2973775 addition added metas value head circumference v age 05yrs girlsboys based standard added metas value length v age 05yrs girlsboys based standard added check change axis label based new chart type added check change tooltip text based new chart type growth chart openmrs growth chart modulehttpswikiopenmrsorgdisplaydocsgrowthchartmodule cdchttpwwwcdcgovgrowthcharts cdc pdfhttpwwwcdcgovgrowthcharts2000growthchartuspdf page 138 table 9 weight v age birth 36 month page 143 table 14 weight v age 2 20 year online medcalchttpwwwmedcalccomgrowth uk growth chartshttpwwwrcpchacukchildhealthresearchprojectsukwhogrowthchartsukwhogrowthcharts thank ewheeler pygrowuphttpsgithubcomewheelerpygrowup project sharing method preprocess whocdc measurement data json format
PHP,"=== Plugin Name ===
Contributors: romkey
Tags: food, nutrition, nutrition label
<<<<<<< HEAD
Tested up to: 3.5.2
Requires at least: 3.0
Stable tag: 0.3.1
=======
Tested up to: 3.1.1
Requires at least: 3.0
Stable tag: 0.3
>>>>>>> e2a8ad62d0a8e377511069be9aec51a2c7e480f0

== Description ==

This plugin provides a Wordpress shortcode which generate an FDA-style nutrition label.

See http://en.wikipedia.org/wiki/Nutrition_facts_label for more information on nutrition labels.

Reference daily intake values come from http://en.wikipedia.org/wiki/Reference_Daily_Intake

You can visit the official page for wp-nutrition-label at http://romkey.com/code/wp-nutrition-label

== Installation ==

1. Upload /wp-nutrition-label to the /wp-content/plugins directory

2. Activate the plugin through the Plugins menu in WordPress

3. In any posts or pages where you wish to insert a nutrition label, use the shortcode [nutr-label]. The shortcode accepts the following attributes:
   servingsize, servings, calories, totalfat, satfat, transfat, cholesterol, sodium, carbohydrates, fiber, sugars, protein, id, class, width

== Frequently Asked Questions ==

= What units do the attributes use? =

* Grams: totalfat, satfat, transfat, carbohydrates, fiber, sugars, protein
* Milligrams (mg): cholesterol and sodium
* Unitless: servings and calories (units are implicit for calories)
* You should include the unit in the serving size attribute (ie: ""4 oz"")

= What about **Calories from Fat**? =

The **Calories from Fat** number is computed from the totalfat attribute.

= What about vitamins? =

Working on it.

= How do I style the nutrition label? =

You can control the width with the ""width"" attribute. The width attribute uses **ems** as its unit. It is styled to scale but it's likely that the ""Nutrition Label"" text won't scale well as the default font is Helvetica, which isn't fixed-width.

You can specify the DOM ID of the enclosing **div** by setting the **id** attribute in the shortcode. You can also specify a CSS class by setting the **class** attribute. Then you can provide your own styling to change the label as you see fit.

= How about calculating the nutrition values based on a recipe? =

This is **really** hard to do. To do it at all reliably requires human intervention to match ingredients names against their entries in a nutrition database. That's a level of difficulty I don't wan to try to tackle with this plugin. You may find the USDA's free online nutrition database useful for looking up nutrition information:

http://www.nal.usda.gov/fnic/foodcomp/search/

= How do I contribute translations to other languages? =

You're welcome to email the .po and .mo files to me at wordpress [at] romkey [dot] com

= Where can I find the development version of the plugin? =

Development work on this plugin is hosted on github at https://github.com/romkey/wp-nutrition-label

== Screenshots ==

1. Example using the shortcode

2. Example output

== Upgrade Notice ==

= 0.3 =
* Calculate calories from protein, carbohydrates and fat if no calories specified.

= 0.2 =
* Upgrade only needed to get info into plugin directory pages.

== Changelog ==

= 0.3 =
* Added code to help support internationalization, improved comments, calculate default total calories if not specified.

= 0.2 =
* Changed filename from README to readme.txt

= 0.1 =
* Initial release
","plugin name 
contributors romkey
tags food nutrition nutrition label
 head
tested up to 352
requires at least 30
stable tag 031

tested up to 311
requires at least 30
stable tag 03
 e2a8ad62d0a8e377511069be9aec51a2c7e480f0

 description 

this plugin provides a wordpress shortcode which generate an fdastyle nutrition label

see httpenwikipediaorgwikinutritionfactslabel for more information on nutrition labels

reference daily intake values come from httpenwikipediaorgwikireferencedailyintake

you can visit the official page for wpnutritionlabel at httpromkeycomcodewpnutritionlabel

 installation 

1 upload wpnutritionlabel to the wpcontentplugins directory

2 activate the plugin through the plugins menu in wordpress

3 in any posts or pages where you wish to insert a nutrition label use the shortcode nutrlabel the shortcode accepts the following attributes
 servingsize servings calories totalfat satfat transfat cholesterol sodium carbohydrates fiber sugars protein id class width

 frequently asked questions 

 what units do the attributes use 

 grams totalfat satfat transfat carbohydrates fiber sugars protein
 milligrams mg cholesterol and sodium
 unitless servings and calories units are implicit for calories
 you should include the unit in the serving size attribute ie 4 oz

 what about calories from fat 

the calories from fat number is computed from the totalfat attribute

 what about vitamins 

working on it

 how do i style the nutrition label 

you can control the width with the width attribute the width attribute uses ems as its unit it is styled to scale but it ' s likely that the nutrition label text won ' t scale well as the default font is helvetica which isn ' t fixedwidth

you can specify the dom id of the enclosing div by setting the id attribute in the shortcode you can also specify a css class by setting the class attribute then you can provide your own styling to change the label as you see fit

 how about calculating the nutrition values based on a recipe 

this is really hard to do to do it at all reliably requires human intervention to match ingredients names against their entries in a nutrition database that ' s a level of difficulty i don ' t wan to try to tackle with this plugin you may find the usda ' s free online nutrition database useful for looking up nutrition information

httpwwwnalusdagovfnicfoodcompsearch

 how do i contribute translations to other languages 

you ' re welcome to email the po and mo files to me at wordpress at romkey dot com

 where can i find the development version of the plugin 

development work on this plugin is hosted on github at httpsgithubcomromkeywpnutritionlabel

 screenshots 

1 example using the shortcode

2 example output

 upgrade notice 

 03 
 calculate calories from protein carbohydrates and fat if no calories specified

 02 
 upgrade only needed to get info into plugin directory pages

 changelog 

 03 
 added code to help support internationalization improved comments calculate default total calories if not specified

 02 
 changed filename from readme to readmetxt

 01 
 initial release",plugin name contributor romkey tag food nutrit nutrit label head test 352 requir least 30 stabl tag 031 test 311 requir least 30 stabl tag 03 e2a8ad62d0a8e377511069be9aec51a2c7e480f0 descript thi plugin provid wordpress shortcod gener fdastyl nutrit label see httpenwikipediaorgwikinutritionfactslabel inform nutrit label refer daili intak valu come httpenwikipediaorgwikireferencedailyintak visit offici page wpnutritionlabel httpromkeycomcodewpnutritionlabel instal 1 upload wpnutritionlabel wpcontentplugin directori 2 activ plugin plugin menu wordpress 3 ani post page wish insert nutrit label use shortcod nutrlabel shortcod accept follow attribut servings serv calori totalfat satfat transfat cholesterol sodium carbohydr fiber sugar protein id class width frequent ask question unit attribut use gram totalfat satfat transfat carbohydr fiber sugar protein milligram mg cholesterol sodium unitless serv calori unit implicit calori includ unit serv size attribut ie 4 oz calori fat calori fat number comput totalfat attribut vitamin work style nutrit label control width width attribut width attribut use em unit style scale ' like nutrit label text ' scale well default font helvetica ' fixedwidth specifi dom id enclos div set id attribut shortcod also specifi css class set class attribut provid style chang label see fit calcul nutrit valu base recip thi realli hard reliabl requir human intervent match ingredi name entri nutrit databas ' level difficulti ' wan tri tackl thi plugin may find usda ' free onlin nutrit databas use look nutrit inform httpwwwnalusdagovfnicfoodcompsearch contribut translat languag ' welcom email po mo file wordpress romkey dot com find develop version plugin develop work thi plugin host github httpsgithubcomromkeywpnutritionlabel screenshot 1 exampl use shortcod 2 exampl output upgrad notic 03 calcul calori protein carbohydr fat calori specifi 02 upgrad onli need get info plugin directori page changelog 03 ad code help support internation improv comment calcul default total calori specifi 02 chang filenam readm readmetxt 01 initi releas,plugin name contributor romkey tag food nutrition nutrition label head tested 352 requires least 30 stable tag 031 tested 311 requires least 30 stable tag 03 e2a8ad62d0a8e377511069be9aec51a2c7e480f0 description plugin provides wordpress shortcode generate fdastyle nutrition label see httpenwikipediaorgwikinutritionfactslabel information nutrition label reference daily intake value come httpenwikipediaorgwikireferencedailyintake visit official page wpnutritionlabel httpromkeycomcodewpnutritionlabel installation 1 upload wpnutritionlabel wpcontentplugins directory 2 activate plugin plugins menu wordpress 3 post page wish insert nutrition label use shortcode nutrlabel shortcode accepts following attribute servingsize serving calorie totalfat satfat transfat cholesterol sodium carbohydrate fiber sugar protein id class width frequently asked question unit attribute use gram totalfat satfat transfat carbohydrate fiber sugar protein milligram mg cholesterol sodium unitless serving calorie unit implicit calorie include unit serving size attribute ie 4 oz calorie fat calorie fat number computed totalfat attribute vitamin working style nutrition label control width width attribute width attribute us em unit styled scale ' likely nutrition label text ' scale well default font helvetica ' fixedwidth specify dom id enclosing div setting id attribute shortcode also specify cs class setting class attribute provide styling change label see fit calculating nutrition value based recipe really hard reliably requires human intervention match ingredient name entry nutrition database ' level difficulty ' wan try tackle plugin may find usda ' free online nutrition database useful looking nutrition information httpwwwnalusdagovfnicfoodcompsearch contribute translation language ' welcome email po mo file wordpress romkey dot com find development version plugin development work plugin hosted github httpsgithubcomromkeywpnutritionlabel screenshots 1 example using shortcode 2 example output upgrade notice 03 calculate calorie protein carbohydrate fat calorie specified 02 upgrade needed get info plugin directory page changelog 03 added code help support internationalization improved comment calculate default total calorie specified 02 changed filename readme readmetxt 01 initial release
Perl,"### Database Systems Supported
* MySQL
* Oracle

### Nutrient Databases Included
* Health Canada, 2015. Canadian Nutrient File
  www.healthcanada.gc.ca/cnf
* US Department of Agriculture, Agricultural Research Service, Nutrient Data Laboratory.
  USDA National Nutrient Database for Standard Reference, Release 28. Version Current:
  September 2015. Internet: https://www.ars.usda.gov/Services/docs.htm?docid=8964
  (Full and Abbreviated versions.)

### Where Are the SQL Files?
The SQL files are located in the ""dist"" directory of each nutrient database,
e.g. ""usda_nndsr/dist"".

### Project Description
Nutriana takes the food composition data released by various official sources
in the world and converts it into formats specific to the database systems
mentioned above. (A good list of nutrient databases in the world is available here:
http://www.langual.org/langual_linkcategory.asp?CategoryID=4&Category=Food+Composition)

### How it Works
A human being is needed to extract the description and constraints of a given
nutrient database into a file that can be programmatically processed.  The JSON
format was chosen for readability and portability reasons.
Nutriana prefers not to modify the nutrient database's official data files, but
to ensure successful database creation and data import, some changes may be
necessary.
All modifications are fully disclosed in the */MODIFICATIONS files, and
typically involve correcting field size or key constraint definition, using date
format instead of string, removing trailing whitespace and/or replacing ""no value""
indicators with ""null"".

### If Your Preferred Database is Not Supported
It should be easy to add support for other databases by copying one of the Perl
module files (*.pm) and editing it as needed to output the format for your
database system.  (If you find it's not, let me know by creating an issue.)
Run the build.sh file to (re)generate the database vendor files.  The script
will automatically detect the new .pm file and attempt to output SQL for it.
To alter the database name or user credentials, edit the ""generate_sql.pl"" file.

### Author
* Maarten van Egmond

Special thanks to these users for contributing:
* [alastair-duncan](https://github.com/alastair-duncan)

### License
* Nutriana is released under the MIT license; see the LICENSE file.
* Full licensing and usage information for the incuded nutrient databases is
  available in the */LICENSE files.
","database systems supported
 mysql
 oracle

 nutrient databases included
 health canada 2015 canadian nutrient file
 wwwhealthcanadagccacnf
 us department of agriculture agricultural research service nutrient data laboratory
 usda national nutrient database for standard reference release 28 version current
 september 2015 internet httpswwwarsusdagovservicesdocshtmdocid8964
 full and abbreviated versions

 where are the sql files
the sql files are located in the dist directory of each nutrient database
eg usdanndsrdist

 project description
nutriana takes the food composition data released by various official sources
in the world and converts it into formats specific to the database systems
mentioned above a good list of nutrient databases in the world is available here
httpwwwlangualorglanguallinkcategoryaspcategoryid4categoryfoodcomposition

 how it works
a human being is needed to extract the description and constraints of a given
nutrient database into a file that can be programmatically processed the json
format was chosen for readability and portability reasons
nutriana prefers not to modify the nutrient database ' s official data files but
to ensure successful database creation and data import some changes may be
necessary
all modifications are fully disclosed in the modifications files and
typically involve correcting field size or key constraint definition using date
format instead of string removing trailing whitespace andor replacing no value
indicators with null

 if your preferred database is not supported
it should be easy to add support for other databases by copying one of the perl
module files pm and editing it as needed to output the format for your
database system if you find it ' s not let me know by creating an issue
run the buildsh file to regenerate the database vendor files the script
will automatically detect the new pm file and attempt to output sql for it
to alter the database name or user credentials edit the generatesqlpl file

 author
 maarten van egmond

special thanks to these users for contributing
 alastairduncanhttpsgithubcomalastairduncan

 license
 nutriana is released under the mit license see the license file
 full licensing and usage information for the incuded nutrient databases is
 available in the license files",databas system support mysql oracl nutrient databas includ health canada 2015 canadian nutrient file wwwhealthcanadagccacnf us depart agricultur agricultur research servic nutrient data laboratori usda nation nutrient databas standard refer releas 28 version current septemb 2015 internet httpswwwarsusdagovservicesdocshtmdocid8964 full abbrevi version sql file sql file locat dist directori nutrient databas eg usdanndsrdist project descript nutriana take food composit data releas variou offici sourc world convert format specif databas system mention abov good list nutrient databas world avail httpwwwlangualorglanguallinkcategoryaspcategoryid4categoryfoodcomposit work human need extract descript constraint given nutrient databas file programmat process json format wa chosen readabl portabl reason nutriana prefer modifi nutrient databas ' offici data file ensur success databas creation data import chang may necessari modif fulli disclos modif file typic involv correct field size key constraint definit use date format instead string remov trail whitespac andor replac valu indic null prefer databas support easi add support databas copi one perl modul file pm edit need output format databas system find ' let know creat issu run buildsh file regener databas vendor file script automat detect new pm file attempt output sql alter databas name user credenti edit generatesqlpl file author maarten van egmond special thank user contribut alastairduncanhttpsgithubcomalastairduncan licens nutriana releas mit licens see licens file full licens usag inform incud nutrient databas avail licens file,database system supported mysql oracle nutrient database included health canada 2015 canadian nutrient file wwwhealthcanadagccacnf u department agriculture agricultural research service nutrient data laboratory usda national nutrient database standard reference release 28 version current september 2015 internet httpswwwarsusdagovservicesdocshtmdocid8964 full abbreviated version sql file sql file located dist directory nutrient database eg usdanndsrdist project description nutriana take food composition data released various official source world convert format specific database system mentioned good list nutrient database world available httpwwwlangualorglanguallinkcategoryaspcategoryid4categoryfoodcomposition work human needed extract description constraint given nutrient database file programmatically processed json format wa chosen readability portability reason nutriana prefers modify nutrient database ' official data file ensure successful database creation data import change may necessary modification fully disclosed modification file typically involve correcting field size key constraint definition using date format instead string removing trailing whitespace andor replacing value indicator null preferred database supported easy add support database copying one perl module file pm editing needed output format database system find ' let know creating issue run buildsh file regenerate database vendor file script automatically detect new pm file attempt output sql alter database name user credential edit generatesqlpl file author maarten van egmond special thanks user contributing alastairduncanhttpsgithubcomalastairduncan license nutriana released mit license see license file full licensing usage information incuded nutrient database available license file
Kotlin,"<img height='175' src=""https://static.openfoodfacts.org/images/svg/openfoodfacts-logo-en.svg"" align=""left"" hspace=""1"" vspace=""1"">

# Open Food Facts - Android app
(Note: this codebase also benefits Open Beauty Facts, Open Pet Food Facts and Open Products Facts)
Open Food Facts is collaborative food products database made by everyone, for everyone. Open Food Facts contributors gathers information and data on food products from around the world, using mobile apps.

[![Project Status](https://opensource.box.com/badges/active.svg)](https://opensource.box.com/badges)
[![Quality Gate](https://sonarcloud.io/api/project_badges/measure?project=openfoodfacts_openfoodfacts-androidapp&metric=alert_status)](https://sonarcloud.io/dashboard/index/openfoodfacts_openfoodfacts-androidapp)
[![Crowdin](https://d322cqt584bo4o.cloudfront.net/openfoodfacts/localized.svg)](https://crowdin.com/project/openfoodfacts)
![Android Master & PR](https://github.com/openfoodfacts/openfoodfacts-androidapp/workflows/Android%20Master%20&%20PR/badge.svg)
![Build](https://github.com/openfoodfacts/openfoodfacts-androidapp/workflows/Android%20Integration/badge.svg)
[![Open Source Helpers](https://www.codetriage.com/openfoodfacts/openfoodfacts-androidapp/badges/users.svg)](https://www.codetriage.com/openfoodfacts/openfoodfacts-androidapp)
<br>

[Join the Play Store Beta](https://play.google.com/store/apps/details?id=org.openfoodfacts.scanner) (rather stable) - [Join the Play Store internal build](https://play.google.com/apps/internaltest/4699092342921529278) (bleeding edge). You might need communicating your email for whitelisting to teolemon on slack (or pierre at openfoodfacts org)

[Open Beauty Facts](https://play.google.com/store/apps/details?id=org.openbeautyfacts.scanner), [Open Pet Food Facts](https://play.google.com/store/apps/details?id=org.openpetfoodfacts.scanner) and [Open Products Facts](https://play.google.com/store/apps/details?id=org.openproductsfacts.scanner) are also built from this codebase

## What is Open Food Facts?

### A food products database

Open Food Facts is a database of food products with ingredients, allergens, nutrition facts… which allow us to compute scores like Nutri-Score, NOVA groups and Eco-Score.

### Made by everyone

Open Food Facts is a non-profit association of volunteers.
25000+ contributors like you have added 1,7M+ products from 150 countries using our Android or iPhone apps to scan barcodes and upload pictures of products and their labels.

### For everyone

Data about food is of public interest and has to be open. The complete database is published as open data and can be reused by anyone.

## User flows
[Visual documentation of the App on Figma](https://www.figma.com/file/BQ7CSyFvl7D9ljcXT0ay0u/Navigation-within-the-app)

## Documentation of the source code
The documentation is generated automatically from the source code and your improvements to code documentation are published automatically.
[Code documentation on GitHub pages](https://openfoodfacts.github.io/openfoodfacts-androidapp/)

## Helping with our next release
Here are issues and feature requests you can work on:
- [ ] [3.6.6 milestone](https://github.com/openfoodfacts/openfoodfacts-androidapp/milestone/36)

### What can I work on ?

Open Food Facts on Android has 0,5M users and 1,6M products. *Each contribution you make will have a large impact on food transparency worldwide.* Finding the right issue or feature will help you have even more more impact. Feel free to ask for feedback on the #android channel before you start work, and to document what you intend to code.

- [Here are issues and feature requests you can work on](https://github.com/openfoodfacts/openfoodfacts-androidapp/issues/4169)
- [P1 issues](https://github.com/openfoodfacts/openfoodfacts-androidapp/labels/p1)
- [Small issues (Hacktoberfest)](https://github.com/openfoodfacts/openfoodfacts-androidapp/labels/hacktoberfest)


If you don't have time to contribute code, you're very welcome to
* Scan new products
* [**Make a donation** to help pay for the hosting and general costs](https://donate.openfoodfacts.org) 

## Help translate Open Food Facts in your language

You can help translate Open Food Facts and the app at (no technical knowledge required, takes a minute to signup): <br>
https://translate.openfoodfacts.org

## Installation

| Choose the right flavor | Install steps|
| ------------- | ------------- |
|<img src=""https://user-images.githubusercontent.com/1689815/39445509-8064b2f8-4cbb-11e8-908d-86bcd61cb4f5.png"" height=""300""> | * Download the latest [Android Studio](https://developer.android.com/studio) stable build. <br>* If you are running the app for the first time, Android Studio will ask you to install the Gradle dependencies. <br>* If you are a new contributor to open-source, we recommend you read our [Setup Guidelines](https://github.com/openfoodfacts/openfoodfacts-androidapp/blob/master/SETUP_GUIDELINES.md) <br>* In Android Studio, make sure to select `OFF` as the default flavor for Open Food Facts (`OBF` is Open Beauty Facts, `OPF` - Open Products Facts, `OPFF` - Open Pet Food Facts) <br>* You should be able to install Open Food Facts on your phone using an USB cable, or run it in an emulator. <br>* The package name on the Play Store is org.openfoodfacts.scanner. For historic reasons, it's openfoodfacts.github.scrachx.openfood in the code and on F-Droid.|

## Running a Fastlane lane
The project uses Fastlane to automate release and screenshots generation.
* First time you checkout, run `bundle install` at the root of the project
* Then launch lanes using `bundle exec fastlane release` (for example the release lane)
* We're moving Fastlane related things to https://github.com/openfoodfacts/fastlane-descriptions

### Who do I talk to?

* Any member of the Android team or contact@openfoodfacts.org
* Join our #android and #android-alerts discussion room on Slack (Get an invite: <https://slack.openfoodfacts.org/>)

### Will you join us ?

If you're new to open-source, we recommend to checkout our [Contributing Guidelines](https://github.com/openfoodfacts/openfoodfacts-androidapp/blob/master/CONTRIBUTING.md). Feel free to fork the project and send a pull request.

## Libraries we use
We use the following libraries, and we're not closed to changes where relevant :-)
If you spot any libraries we added or we don't use anymore, feel free to update this list using a Pull Request.

- [Dagger 2](https://github.com/google/dagger) - A fast dependency injector for Android and Java
- [Retrofit](https://square.github.io/retrofit/) - Retrofit turns your REST API into a Java interface
- [OkHttp](https://github.com/square/okhttp) - An HTTP+SPDY client for Android and Java applications
- [Mockito](https://github.com/mockito/mockito) - Most popular Mocking framework for unit tests written in Java
- [Apache](https://github.com/apache/commons-io) - The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more.
- [Kotlin Coroutines](https://developer.android.com/kotlin/coroutines) - A coroutine is a concurrency design pattern that you can use on Android to simplify code that executes asynchronously.  
- [Hilt](https://developer.android.com/training/dependency-injection/hilt-android) - Hilt is a dependency injection library for Android that reduces the boilerplate of doing manual dependency injection in your project. 
- [Dagger](https://developer.android.com/training/dependency-injection/dagger-android) - Manual dependency injection or service locators in an Android app can be problematic depending on the size of your project. You can limit your project's complexity as it scales up by using Dagger to manage dependencies. Dagger automatically generates code that mimics the code you would otherwise have hand-written.
- [Jackson](https://github.com/FasterXML/jackson) - Core part of Jackson that defines Streaming API as well as basic shared abstractions
- [journeyapps/zxing-android-embedded](https://github.com/journeyapps/zxing-android-embedded) - Barcode scanner library for Android, based on the ZXing decoder
- GreenDao
- [mikepenz/MaterialDrawer](https://github.com/mikepenz/MaterialDrawer) - The flexible, easy to use, all in one drawer library for your Android project.

Big thanks to their contributors!

## Contributors

The project was initially started by [Scot Scriven](https://github.com/itchix), other contributors include:
- [Aurélien Leboulanger](https://github.com/herau)
- [Pierre Slamich](https://github.com/teolemon)
- [Friedger Müffke](https://github.com/friedger)
- [Qian Jin](https://github.com/jinqian)
- [Fred Deniger](https://github.com/deniger)
- [VaiTon](https://github.com/VaiTon)
- [Full list of the Open Food Facts Android developers](https://github.com/openfoodfacts/openfoodfacts-androidapp/graphs/contributors)

## Copyright and License

    Copyright 2016-2022 Open Food Facts

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and 
    limitations under the License.
","img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1

 open food facts android app
note this codebase also benefits open beauty facts open pet food facts and open products facts
open food facts is collaborative food products database made by everyone for everyone open food facts contributors gathers information and data on food products from around the world using mobile apps

project statushttpsopensourceboxcombadgesactivesvghttpsopensourceboxcombadges
quality gatehttpssonarcloudioapiprojectbadgesmeasureprojectopenfoodfactsopenfoodfactsandroidappmetricalertstatushttpssonarcloudiodashboardindexopenfoodfactsopenfoodfactsandroidapp
crowdinhttpsd322cqt584bo4ocloudfrontnetopenfoodfactslocalizedsvghttpscrowdincomprojectopenfoodfacts
android master prhttpsgithubcomopenfoodfactsopenfoodfactsandroidappworkflowsandroid20master2020prbadgesvg
buildhttpsgithubcomopenfoodfactsopenfoodfactsandroidappworkflowsandroid20integrationbadgesvg
open source helpershttpswwwcodetriagecomopenfoodfactsopenfoodfactsandroidappbadgesuserssvghttpswwwcodetriagecomopenfoodfactsopenfoodfactsandroidapp
br

join the play store betahttpsplaygooglecomstoreappsdetailsidorgopenfoodfactsscanner rather stable join the play store internal buildhttpsplaygooglecomappsinternaltest4699092342921529278 bleeding edge you might need communicating your email for whitelisting to teolemon on slack or pierre at openfoodfacts org

open beauty factshttpsplaygooglecomstoreappsdetailsidorgopenbeautyfactsscanner open pet food factshttpsplaygooglecomstoreappsdetailsidorgopenpetfoodfactsscanner and open products factshttpsplaygooglecomstoreappsdetailsidorgopenproductsfactsscanner are also built from this codebase

 what is open food facts

 a food products database

open food facts is a database of food products with ingredients allergens nutrition facts which allow us to compute scores like nutriscore nova groups and ecoscore

 made by everyone

open food facts is a nonprofit association of volunteers
25000 contributors like you have added 17m products from 150 countries using our android or iphone apps to scan barcodes and upload pictures of products and their labels

 for everyone

data about food is of public interest and has to be open the complete database is published as open data and can be reused by anyone

 user flows
visual documentation of the app on figmahttpswwwfigmacomfilebq7csyfvl7d9ljcxt0ay0unavigationwithintheapp

 documentation of the source code
the documentation is generated automatically from the source code and your improvements to code documentation are published automatically
code documentation on github pageshttpsopenfoodfactsgithubioopenfoodfactsandroidapp

 helping with our next release
here are issues and feature requests you can work on
 366 milestonehttpsgithubcomopenfoodfactsopenfoodfactsandroidappmilestone36

 what can i work on 

open food facts on android has 05m users and 16m products each contribution you make will have a large impact on food transparency worldwide finding the right issue or feature will help you have even more more impact feel free to ask for feedback on the android channel before you start work and to document what you intend to code

 here are issues and feature requests you can work onhttpsgithubcomopenfoodfactsopenfoodfactsandroidappissues4169
 p1 issueshttpsgithubcomopenfoodfactsopenfoodfactsandroidapplabelsp1
 small issues hacktoberfesthttpsgithubcomopenfoodfactsopenfoodfactsandroidapplabelshacktoberfest


if you don ' t have time to contribute code you ' re very welcome to
 scan new products
 make a donation to help pay for the hosting and general costshttpsdonateopenfoodfactsorg 

 help translate open food facts in your language

you can help translate open food facts and the app at no technical knowledge required takes a minute to signup br
httpstranslateopenfoodfactsorg

 installation

 choose the right flavor install steps
 
img srchttpsuserimagesgithubusercontentcom1689815394455098064b2f84cbb11e8908d86bcd61cb4f5png height300 download the latest android studiohttpsdeveloperandroidcomstudio stable build br if you are running the app for the first time android studio will ask you to install the gradle dependencies br if you are a new contributor to opensource we recommend you read our setup guidelineshttpsgithubcomopenfoodfactsopenfoodfactsandroidappblobmastersetupguidelinesmd br in android studio make sure to select off as the default flavor for open food facts obf is open beauty facts opf open products facts opff open pet food facts br you should be able to install open food facts on your phone using an usb cable or run it in an emulator br the package name on the play store is orgopenfoodfactsscanner for historic reasons it ' s openfoodfactsgithubscrachxopenfood in the code and on fdroid

 running a fastlane lane
the project uses fastlane to automate release and screenshots generation
 first time you checkout run bundle install at the root of the project
 then launch lanes using bundle exec fastlane release for example the release lane
 we ' re moving fastlane related things to httpsgithubcomopenfoodfactsfastlanedescriptions

 who do i talk to

 any member of the android team or contactopenfoodfactsorg
 join our android and androidalerts discussion room on slack get an invite httpsslackopenfoodfactsorg

 will you join us 

if you ' re new to opensource we recommend to checkout our contributing guidelineshttpsgithubcomopenfoodfactsopenfoodfactsandroidappblobmastercontributingmd feel free to fork the project and send a pull request

 libraries we use
we use the following libraries and we ' re not closed to changes where relevant 
if you spot any libraries we added or we don ' t use anymore feel free to update this list using a pull request

 dagger 2httpsgithubcomgoogledagger a fast dependency injector for android and java
 retrofithttpssquaregithubioretrofit retrofit turns your rest api into a java interface
 okhttphttpsgithubcomsquareokhttp an httpspdy client for android and java applications
 mockitohttpsgithubcommockitomockito most popular mocking framework for unit tests written in java
 apachehttpsgithubcomapachecommonsio the apache commons io library contains utility classes stream implementations file filters file comparators endian transformation classes and much more
 kotlin coroutineshttpsdeveloperandroidcomkotlincoroutines a coroutine is a concurrency design pattern that you can use on android to simplify code that executes asynchronously 
 hilthttpsdeveloperandroidcomtrainingdependencyinjectionhiltandroid hilt is a dependency injection library for android that reduces the boilerplate of doing manual dependency injection in your project 
 daggerhttpsdeveloperandroidcomtrainingdependencyinjectiondaggerandroid manual dependency injection or service locators in an android app can be problematic depending on the size of your project you can limit your project ' s complexity as it scales up by using dagger to manage dependencies dagger automatically generates code that mimics the code you would otherwise have handwritten
 jacksonhttpsgithubcomfasterxmljackson core part of jackson that defines streaming api as well as basic shared abstractions
 journeyappszxingandroidembeddedhttpsgithubcomjourneyappszxingandroidembedded barcode scanner library for android based on the zxing decoder
 greendao
 mikepenzmaterialdrawerhttpsgithubcommikepenzmaterialdrawer the flexible easy to use all in one drawer library for your android project

big thanks to their contributors

 contributors

the project was initially started by scot scrivenhttpsgithubcomitchix other contributors include
 aurelien leboulangerhttpsgithubcomherau
 pierre slamichhttpsgithubcomteolemon
 friedger muffkehttpsgithubcomfriedger
 qian jinhttpsgithubcomjinqian
 fred denigerhttpsgithubcomdeniger
 vaitonhttpsgithubcomvaiton
 full list of the open food facts android developershttpsgithubcomopenfoodfactsopenfoodfactsandroidappgraphscontributors

 copyright and license

 copyright 20162022 open food facts

 licensed under the apache license version 20 the license
 you may not use this file except in compliance with the license
 you may obtain a copy of the license at

 httpswwwapacheorglicenseslicense20

 unless required by applicable law or agreed to in writing software
 distributed under the license is distributed on an as is basis
 without warranties or conditions of any kind either express or implied
 see the license for the specific language governing permissions and 
 limitations under the license",img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1 open food fact android app note thi codebas also benefit open beauti fact open pet food fact open product fact open food fact collabor food product databas made everyon everyon open food fact contributor gather inform data food product around world use mobil app project statushttpsopensourceboxcombadgesactivesvghttpsopensourceboxcombadg qualiti gatehttpssonarcloudioapiprojectbadgesmeasureprojectopenfoodfactsopenfoodfactsandroidappmetricalertstatushttpssonarcloudiodashboardindexopenfoodfactsopenfoodfactsandroidapp crowdinhttpsd322cqt584bo4ocloudfrontnetopenfoodfactslocalizedsvghttpscrowdincomprojectopenfoodfact android master prhttpsgithubcomopenfoodfactsopenfoodfactsandroidappworkflowsandroid20master2020prbadgesvg buildhttpsgithubcomopenfoodfactsopenfoodfactsandroidappworkflowsandroid20integrationbadgesvg open sourc helpershttpswwwcodetriagecomopenfoodfactsopenfoodfactsandroidappbadgesuserssvghttpswwwcodetriagecomopenfoodfactsopenfoodfactsandroidapp br join play store betahttpsplaygooglecomstoreappsdetailsidorgopenfoodfactsscann rather stabl join play store intern buildhttpsplaygooglecomappsinternaltest4699092342921529278 bleed edg might need commun email whitelist teolemon slack pierr openfoodfact org open beauti factshttpsplaygooglecomstoreappsdetailsidorgopenbeautyfactsscann open pet food factshttpsplaygooglecomstoreappsdetailsidorgopenpetfoodfactsscann open product factshttpsplaygooglecomstoreappsdetailsidorgopenproductsfactsscann also built thi codebas open food fact food product databas open food fact databas food product ingredi allergen nutrit fact allow us comput score like nutriscor nova group ecoscor made everyon open food fact nonprofit associ volunt 25000 contributor like ad 17m product 150 countri use android iphon app scan barcod upload pictur product label everyon data food public interest ha open complet databas publish open data reus anyon user flow visual document app figmahttpswwwfigmacomfilebq7csyfvl7d9ljcxt0ay0unavigationwithintheapp document sourc code document gener automat sourc code improv code document publish automat code document github pageshttpsopenfoodfactsgithubioopenfoodfactsandroidapp help next releas issu featur request work 366 milestonehttpsgithubcomopenfoodfactsopenfoodfactsandroidappmilestone36 work open food fact android ha 05m user 16m product contribut make larg impact food transpar worldwid find right issu featur help even impact feel free ask feedback android channel befor start work document intend code issu featur request work onhttpsgithubcomopenfoodfactsopenfoodfactsandroidappissues4169 p1 issueshttpsgithubcomopenfoodfactsopenfoodfactsandroidapplabelsp1 small issu hacktoberfesthttpsgithubcomopenfoodfactsopenfoodfactsandroidapplabelshacktoberfest ' time contribut code ' veri welcom scan new product make donat help pay host gener costshttpsdonateopenfoodfactsorg help translat open food fact languag help translat open food fact app technic knowledg requir take minut signup br httpstranslateopenfoodfactsorg instal choos right flavor instal step img srchttpsuserimagesgithubusercontentcom1689815394455098064b2f84cbb11e8908d86bcd61cb4f5png height300 download latest android studiohttpsdeveloperandroidcomstudio stabl build br run app first time android studio ask instal gradl depend br new contributor opensourc recommend read setup guidelineshttpsgithubcomopenfoodfactsopenfoodfactsandroidappblobmastersetupguidelinesmd br android studio make sure select default flavor open food fact obf open beauti fact opf open product fact opff open pet food fact br abl instal open food fact phone use usb cabl run emul br packag name play store orgopenfoodfactsscann histor reason ' openfoodfactsgithubscrachxopenfood code fdroid run fastlan lane project use fastlan autom releas screenshot gener first time checkout run bundl instal root project launch lane use bundl exec fastlan releas exampl releas lane ' move fastlan relat thing httpsgithubcomopenfoodfactsfastlanedescript talk ani member android team contactopenfoodfactsorg join android androidalert discuss room slack get invit httpsslackopenfoodfactsorg join us ' new opensourc recommend checkout contribut guidelineshttpsgithubcomopenfoodfactsopenfoodfactsandroidappblobmastercontributingmd feel free fork project send pull request librari use use follow librari ' close chang relev spot ani librari ad ' use anymor feel free updat thi list use pull request dagger 2httpsgithubcomgoogledagg fast depend injector android java retrofithttpssquaregithubioretrofit retrofit turn rest api java interfac okhttphttpsgithubcomsquareokhttp httpspdi client android java applic mockitohttpsgithubcommockitomockito popular mock framework unit test written java apachehttpsgithubcomapachecommonsio apach common io librari contain util class stream implement file filter file compar endian transform class much kotlin coroutineshttpsdeveloperandroidcomkotlincoroutin coroutin concurr design pattern use android simplifi code execut asynchron hilthttpsdeveloperandroidcomtrainingdependencyinjectionhiltandroid hilt depend inject librari android reduc boilerpl manual depend inject project daggerhttpsdeveloperandroidcomtrainingdependencyinjectiondaggerandroid manual depend inject servic locat android app problemat depend size project limit project ' complex scale use dagger manag depend dagger automat gener code mimic code would otherwis handwritten jacksonhttpsgithubcomfasterxmljackson core part jackson defin stream api well basic share abstract journeyappszxingandroidembeddedhttpsgithubcomjourneyappszxingandroidembed barcod scanner librari android base zxing decod greendao mikepenzmaterialdrawerhttpsgithubcommikepenzmaterialdraw flexibl easi use one drawer librari android project big thank contributor contributor project wa initi start scot scrivenhttpsgithubcomitchix contributor includ aurelien leboulangerhttpsgithubcomherau pierr slamichhttpsgithubcomteolemon friedger muffkehttpsgithubcomfriedg qian jinhttpsgithubcomjinqian fred denigerhttpsgithubcomdenig vaitonhttpsgithubcomvaiton full list open food fact android developershttpsgithubcomopenfoodfactsopenfoodfactsandroidappgraphscontributor copyright licens copyright 20162022 open food fact licens apach licens version 20 licens may use thi file except complianc licens may obtain copi licens httpswwwapacheorglicenseslicense20 unless requir applic law agre write softwar distribut licens distribut basi without warranti condit ani kind either express impli see licens specif languag govern permiss limit licens,img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1 open food fact android app note codebase also benefit open beauty fact open pet food fact open product fact open food fact collaborative food product database made everyone everyone open food fact contributor gather information data food product around world using mobile apps project statushttpsopensourceboxcombadgesactivesvghttpsopensourceboxcombadges quality gatehttpssonarcloudioapiprojectbadgesmeasureprojectopenfoodfactsopenfoodfactsandroidappmetricalertstatushttpssonarcloudiodashboardindexopenfoodfactsopenfoodfactsandroidapp crowdinhttpsd322cqt584bo4ocloudfrontnetopenfoodfactslocalizedsvghttpscrowdincomprojectopenfoodfacts android master prhttpsgithubcomopenfoodfactsopenfoodfactsandroidappworkflowsandroid20master2020prbadgesvg buildhttpsgithubcomopenfoodfactsopenfoodfactsandroidappworkflowsandroid20integrationbadgesvg open source helpershttpswwwcodetriagecomopenfoodfactsopenfoodfactsandroidappbadgesuserssvghttpswwwcodetriagecomopenfoodfactsopenfoodfactsandroidapp br join play store betahttpsplaygooglecomstoreappsdetailsidorgopenfoodfactsscanner rather stable join play store internal buildhttpsplaygooglecomappsinternaltest4699092342921529278 bleeding edge might need communicating email whitelisting teolemon slack pierre openfoodfacts org open beauty factshttpsplaygooglecomstoreappsdetailsidorgopenbeautyfactsscanner open pet food factshttpsplaygooglecomstoreappsdetailsidorgopenpetfoodfactsscanner open product factshttpsplaygooglecomstoreappsdetailsidorgopenproductsfactsscanner also built codebase open food fact food product database open food fact database food product ingredient allergen nutrition fact allow u compute score like nutriscore nova group ecoscore made everyone open food fact nonprofit association volunteer 25000 contributor like added 17m product 150 country using android iphone apps scan barcodes upload picture product label everyone data food public interest ha open complete database published open data reused anyone user flow visual documentation app figmahttpswwwfigmacomfilebq7csyfvl7d9ljcxt0ay0unavigationwithintheapp documentation source code documentation generated automatically source code improvement code documentation published automatically code documentation github pageshttpsopenfoodfactsgithubioopenfoodfactsandroidapp helping next release issue feature request work 366 milestonehttpsgithubcomopenfoodfactsopenfoodfactsandroidappmilestone36 work open food fact android ha 05m user 16m product contribution make large impact food transparency worldwide finding right issue feature help even impact feel free ask feedback android channel start work document intend code issue feature request work onhttpsgithubcomopenfoodfactsopenfoodfactsandroidappissues4169 p1 issueshttpsgithubcomopenfoodfactsopenfoodfactsandroidapplabelsp1 small issue hacktoberfesthttpsgithubcomopenfoodfactsopenfoodfactsandroidapplabelshacktoberfest ' time contribute code ' welcome scan new product make donation help pay hosting general costshttpsdonateopenfoodfactsorg help translate open food fact language help translate open food fact app technical knowledge required take minute signup br httpstranslateopenfoodfactsorg installation choose right flavor install step img srchttpsuserimagesgithubusercontentcom1689815394455098064b2f84cbb11e8908d86bcd61cb4f5png height300 download latest android studiohttpsdeveloperandroidcomstudio stable build br running app first time android studio ask install gradle dependency br new contributor opensource recommend read setup guidelineshttpsgithubcomopenfoodfactsopenfoodfactsandroidappblobmastersetupguidelinesmd br android studio make sure select default flavor open food fact obf open beauty fact opf open product fact opff open pet food fact br able install open food fact phone using usb cable run emulator br package name play store orgopenfoodfactsscanner historic reason ' openfoodfactsgithubscrachxopenfood code fdroid running fastlane lane project us fastlane automate release screenshots generation first time checkout run bundle install root project launch lane using bundle exec fastlane release example release lane ' moving fastlane related thing httpsgithubcomopenfoodfactsfastlanedescriptions talk member android team contactopenfoodfactsorg join android androidalerts discussion room slack get invite httpsslackopenfoodfactsorg join u ' new opensource recommend checkout contributing guidelineshttpsgithubcomopenfoodfactsopenfoodfactsandroidappblobmastercontributingmd feel free fork project send pull request library use use following library ' closed change relevant spot library added ' use anymore feel free update list using pull request dagger 2httpsgithubcomgoogledagger fast dependency injector android java retrofithttpssquaregithubioretrofit retrofit turn rest api java interface okhttphttpsgithubcomsquareokhttp httpspdy client android java application mockitohttpsgithubcommockitomockito popular mocking framework unit test written java apachehttpsgithubcomapachecommonsio apache common io library contains utility class stream implementation file filter file comparators endian transformation class much kotlin coroutineshttpsdeveloperandroidcomkotlincoroutines coroutine concurrency design pattern use android simplify code executes asynchronously hilthttpsdeveloperandroidcomtrainingdependencyinjectionhiltandroid hilt dependency injection library android reduces boilerplate manual dependency injection project daggerhttpsdeveloperandroidcomtrainingdependencyinjectiondaggerandroid manual dependency injection service locator android app problematic depending size project limit project ' complexity scale using dagger manage dependency dagger automatically generates code mimic code would otherwise handwritten jacksonhttpsgithubcomfasterxmljackson core part jackson defines streaming api well basic shared abstraction journeyappszxingandroidembeddedhttpsgithubcomjourneyappszxingandroidembedded barcode scanner library android based zxing decoder greendao mikepenzmaterialdrawerhttpsgithubcommikepenzmaterialdrawer flexible easy use one drawer library android project big thanks contributor contributor project wa initially started scot scrivenhttpsgithubcomitchix contributor include aurelien leboulangerhttpsgithubcomherau pierre slamichhttpsgithubcomteolemon friedger muffkehttpsgithubcomfriedger qian jinhttpsgithubcomjinqian fred denigerhttpsgithubcomdeniger vaitonhttpsgithubcomvaiton full list open food fact android developershttpsgithubcomopenfoodfactsopenfoodfactsandroidappgraphscontributors copyright license copyright 20162022 open food fact licensed apache license version 20 license may use file except compliance license may obtain copy license httpswwwapacheorglicenseslicense20 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license
TypeScript,"[![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fhertzg%2Fetekcity%2Fbadge%3Fref%3Dmaster&style=flat)](https://actions-badge.atrox.dev/hertzg/etekcity/goto?ref=master)
[![codecov](https://codecov.io/gh/hertzg/node-net-keepalive/branch/master/graph/badge.svg)](https://codecov.io/gh/hertzg/node-net-keepalive)

# ETEKCITY Smart Nutrition Scale

:warning: Very much work in progress :warning:

This is a potential project that tries to reverse engineer the BLE protocol that
ETEKCITY Smart Nutrition Scale (ESN00) uses.

[ETEKCITY Smart Nutrition Scale (ESN00)](https://www.etekcity.com/product/100334) ([DE](https://www.amazon.de/gp/product/B07RJV9QPF) | [US](https://www.amazon.com/Etekcity-ESN00-Nutrition-Counting-Bluetooth/dp/B07FCZSC41))

![](https://image.etekcity.com/thumb/201810/28/7f248c75a139b66b9d0e6b081c25a0a1.jpg)

## BLE Protocol

This section describes the protocol (what was researched so far)

### Finding device

Device address is random so the way to find it is based on the advertisement name (tested) or manufacturer data (not tested)
Device reports weight and status on service `1801` and characteristic `2c12`.

## Protocol

All packets have this structure

![](https://kroki.io/packetdiag/svg/eNorSEzOTi1JyUxMV6jmUlAw0DW2UvBITUxJLbJWQAL6-grO-XnFJYl5JVYKBhVpqalpyQaJRkAdJlYKIZUFqQrRRfkliSWptkbmBrHWEB0BYLPB0kCFplYKPql56SUZaEqBCl0SSxKBkkA5oDotCDc6JzXP1jTWGtkJIAmwCmcPbwwLIY7MSE3OLi7N5arlAgALMjve)

### Data Packets

Data packet depends on the packet type values:

| Name    | Value | Length  | When                                  | What                                                                                                                                                                                                          |
| ------- | :---: | :-----: | ------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Error   | `E0`  | 1 byte  | Error mode is triggered or reset      | `0x00` (error reset) / `0x01` (error triggered)                                                                                                                                                               |
| Tare    | `D3`  | 1 byte  | Tare is updated (set) or reset        | `0x00` (no tare) / `0x01` (tare mode)                                                                                                                                                                         |
| Item    | `E4`  | 1 byte  | Item is put or removed from the scale | `0x00` (has item) / `0x01` (no item)                                                                                                                                                                          |
| Weight  | `D0`  | 5 bytes | Weight is measuring or stabilized     | ![](https://kroki.io/packetdiag/svg/eNorSEzOTi1JyUxMV6jmUlDIy09Jjc9IzUzPKFGwVTAzsOYCCmopBGem5ylAQHROap6toY5CUX5JYkmqrZG5Qaw1SFxfH6wKrDwcYgBcuRFECTIAKoeoAmsIzcssKSZoPkgVxDkliUk5qQSdk1pSkpOawlXLxcUFAOOQPE8=) |
| Unknown | `D2`  | 1 byte  | Characteristic listening started      | Unknown (maybe nutrition value states)                                                                                                                                                                        |

#### Data Packet: Weight Measurement (0xE0)

Device will be constantly spamming packet with this data

![](https://kroki.io/packetdiag/svg/eNorSEzOTi1JyUxMV6jmUlDIy09Jjc9IzUzPKFGwVTAzsOYCCmopBGem5ylAQHROap6toY5CUX5JYkmqrZG5Qaw1SFxfH6wKrDwcYgBcuRFECTIAKoeoAmsIzcssKSZoPkgVxDkliUk5qQSdk1pSkpOawlXLxcUFAOOQPE8=)

| Field  | Description                                                                                 | Note                                                            |
| ------ | ------------------------------------------------------------------------------------------- | --------------------------------------------------------------- |
| Sign   | `0x00` (positive) / `0x01` (negative)                                                       |                                                                 |
| Weight | 16 bit int (big-endian)                                                                     | In grams value is multiplied by 10 (not sure about other units) |
| Unit   | `0x00`(g),`0x02`(ml),`0x04`(ml milk),`0x03`(floz),`0x05`(floz milk),`0x06`(oz),`0x01`(lboz) | Does not seem like bitmask just enum                            |
| Stable | `0x00` (measuring) / `0x01` (settled)                                                       | `0x00` means weight is not yet settled                          |

## Hardware

Nothing too interesting...

![](https://github.com/hertzg/etekcity/raw/master/research/hardware/esn00/photo_2020-09-04_01-17-35.jpg)

![](https://github.com/hertzg/etekcity/raw/master/research/hardware/esn00/photo_2020-09-04_01-17-34.jpg)
","build statushttpsimgshieldsioendpointsvgurlhttps3a2f2factionsbadgeatroxdev2fhertzg2fetekcity2fbadge3fref3dmasterstyleflathttpsactionsbadgeatroxdevhertzgetekcitygotorefmaster
codecovhttpscodecovioghhertzgnodenetkeepalivebranchmastergraphbadgesvghttpscodecovioghhertzgnodenetkeepalive

 etekcity smart nutrition scale

warning very much work in progress warning

this is a potential project that tries to reverse engineer the ble protocol that
etekcity smart nutrition scale esn00 uses

etekcity smart nutrition scale esn00httpswwwetekcitycomproduct100334 dehttpswwwamazondegpproductb07rjv9qpf ushttpswwwamazoncometekcityesn00nutritioncountingbluetoothdpb07fczsc41

httpsimageetekcitycomthumb201810287f248c75a139b66b9d0e6b081c25a0a1jpg

 ble protocol

this section describes the protocol what was researched so far

 finding device

device address is random so the way to find it is based on the advertisement name tested or manufacturer data not tested
device reports weight and status on service 1801 and characteristic 2c12

 protocol

all packets have this structure

httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmulaw0dw2uvbituxjlbjwqal6groxnfjyl5jvykbhvpqalpyqajrkadjlykizufqqrrrfkliswptkbmbrhweb0bylpb0kcfplykpql56suzaeqbcl0ssxkbkka5odotcdc6jzxp1jtwgtkjiamwcmcpbwwliy7mse3oli7n5arlagalmjve

 data packets

data packet depends on the packet type values

 name value length when what 
 
 error e0 1 byte error mode is triggered or reset 0x00 error reset 0x01 error triggered 
 tare d3 1 byte tare is updated set or reset 0x00 no tare 0x01 tare mode 
 item e4 1 byte item is put or removed from the scale 0x00 has item 0x01 no item 
 weight d0 5 bytes weight is measuring or stabilized httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmuldiy09jjc9izuzpkfgwvtazsoyccmopbgem5ylaqhroap6toy5cux5jykmqrzg5qaw1sfxfh6wkrdwcygbcurfectiakoeoamsizcsskszopkgvxdkliuk5qqsdk1pskpoawlxlxcufaooqpe8 
 unknown d2 1 byte characteristic listening started unknown maybe nutrition value states 

 data packet weight measurement 0xe0

device will be constantly spamming packet with this data

httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmuldiy09jjc9izuzpkfgwvtazsoyccmopbgem5ylaqhroap6toy5cux5jykmqrzg5qaw1sfxfh6wkrdwcygbcurfectiakoeoamsizcsskszopkgvxdkliuk5qqsdk1pskpoawlxlxcufaooqpe8

 field description note 
 
 sign 0x00 positive 0x01 negative 
 weight 16 bit int bigendian in grams value is multiplied by 10 not sure about other units 
 unit 0x00g0x02ml0x04ml milk0x03floz0x05floz milk0x06oz0x01lboz does not seem like bitmask just enum 
 stable 0x00 measuring 0x01 settled 0x00 means weight is not yet settled 

 hardware

nothing too interesting

httpsgithubcomhertzgetekcityrawmasterresearchhardwareesn00photo20200904011735jpg

httpsgithubcomhertzgetekcityrawmasterresearchhardwareesn00photo20200904011734jpg",build statushttpsimgshieldsioendpointsvgurlhttps3a2f2factionsbadgeatroxdev2fhertzg2fetekcity2fbadge3fref3dmasterstyleflathttpsactionsbadgeatroxdevhertzgetekcitygotorefmast codecovhttpscodecovioghhertzgnodenetkeepalivebranchmastergraphbadgesvghttpscodecovioghhertzgnodenetkeepal etekc smart nutrit scale warn veri much work progress warn thi potenti project tri revers engin ble protocol etekc smart nutrit scale esn00 use etekc smart nutrit scale esn00httpswwwetekcitycomproduct100334 dehttpswwwamazondegpproductb07rjv9qpf ushttpswwwamazoncometekcityesn00nutritioncountingbluetoothdpb07fczsc41 httpsimageetekcitycomthumb201810287f248c75a139b66b9d0e6b081c25a0a1jpg ble protocol thi section describ protocol wa research far find devic devic address random way find base advertis name test manufactur data test devic report weight statu servic 1801 characterist 2c12 protocol packet thi structur httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmulaw0dw2uvbituxjlbjwqal6groxnfjyl5jvykbhvpqalpyqajrkadjlykizufqqrrrfkliswptkbmbrhweb0bylpb0kcfplykpql56suzaeqbcl0ssxkbkka5odotcdc6jzxp1jtwgtkjiamwcmcpbwwliy7mse3oli7n5arlagalmjv data packet data packet depend packet type valu name valu length error e0 1 byte error mode trigger reset 0x00 error reset 0x01 error trigger tare d3 1 byte tare updat set reset 0x00 tare 0x01 tare mode item e4 1 byte item put remov scale 0x00 ha item 0x01 item weight d0 5 byte weight measur stabil httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmuldiy09jjc9izuzpkfgwvtazsoyccmopbgem5ylaqhroap6toy5cux5jykmqrzg5qaw1sfxfh6wkrdwcygbcurfectiakoeoamsizcsskszopkgvxdkliuk5qqsdk1pskpoawlxlxcufaooqpe8 unknown d2 1 byte characterist listen start unknown mayb nutrit valu state data packet weight measur 0xe0 devic constantli spam packet thi data httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmuldiy09jjc9izuzpkfgwvtazsoyccmopbgem5ylaqhroap6toy5cux5jykmqrzg5qaw1sfxfh6wkrdwcygbcurfectiakoeoamsizcsskszopkgvxdkliuk5qqsdk1pskpoawlxlxcufaooqpe8 field descript note sign 0x00 posit 0x01 neg weight 16 bit int bigendian gram valu multipli 10 sure unit unit 0x00g0x02ml0x04ml milk0x03floz0x05floz milk0x06oz0x01lboz doe seem like bitmask enum stabl 0x00 measur 0x01 settl 0x00 mean weight yet settl hardwar noth interest httpsgithubcomhertzgetekcityrawmasterresearchhardwareesn00photo20200904011735jpg httpsgithubcomhertzgetekcityrawmasterresearchhardwareesn00photo20200904011734jpg,build statushttpsimgshieldsioendpointsvgurlhttps3a2f2factionsbadgeatroxdev2fhertzg2fetekcity2fbadge3fref3dmasterstyleflathttpsactionsbadgeatroxdevhertzgetekcitygotorefmaster codecovhttpscodecovioghhertzgnodenetkeepalivebranchmastergraphbadgesvghttpscodecovioghhertzgnodenetkeepalive etekcity smart nutrition scale warning much work progress warning potential project try reverse engineer ble protocol etekcity smart nutrition scale esn00 us etekcity smart nutrition scale esn00httpswwwetekcitycomproduct100334 dehttpswwwamazondegpproductb07rjv9qpf ushttpswwwamazoncometekcityesn00nutritioncountingbluetoothdpb07fczsc41 httpsimageetekcitycomthumb201810287f248c75a139b66b9d0e6b081c25a0a1jpg ble protocol section describes protocol wa researched far finding device device address random way find based advertisement name tested manufacturer data tested device report weight status service 1801 characteristic 2c12 protocol packet structure httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmulaw0dw2uvbituxjlbjwqal6groxnfjyl5jvykbhvpqalpyqajrkadjlykizufqqrrrfkliswptkbmbrhweb0bylpb0kcfplykpql56suzaeqbcl0ssxkbkka5odotcdc6jzxp1jtwgtkjiamwcmcpbwwliy7mse3oli7n5arlagalmjve data packet data packet depends packet type value name value length error e0 1 byte error mode triggered reset 0x00 error reset 0x01 error triggered tare d3 1 byte tare updated set reset 0x00 tare 0x01 tare mode item e4 1 byte item put removed scale 0x00 ha item 0x01 item weight d0 5 byte weight measuring stabilized httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmuldiy09jjc9izuzpkfgwvtazsoyccmopbgem5ylaqhroap6toy5cux5jykmqrzg5qaw1sfxfh6wkrdwcygbcurfectiakoeoamsizcsskszopkgvxdkliuk5qqsdk1pskpoawlxlxcufaooqpe8 unknown d2 1 byte characteristic listening started unknown maybe nutrition value state data packet weight measurement 0xe0 device constantly spamming packet data httpskrokiiopacketdiagsvgenorsezoti1jyuxmv6jmuldiy09jjc9izuzpkfgwvtazsoyccmopbgem5ylaqhroap6toy5cux5jykmqrzg5qaw1sfxfh6wkrdwcygbcurfectiakoeoamsizcsskszopkgvxdkliuk5qqsdk1pskpoawlxlxcufaooqpe8 field description note sign 0x00 positive 0x01 negative weight 16 bit int bigendian gram value multiplied 10 sure unit unit 0x00g0x02ml0x04ml milk0x03floz0x05floz milk0x06oz0x01lboz doe seem like bitmask enum stable 0x00 measuring 0x01 settled 0x00 mean weight yet settled hardware nothing interesting httpsgithubcomhertzgetekcityrawmasterresearchhardwareesn00photo20200904011735jpg httpsgithubcomhertzgetekcityrawmasterresearchhardwareesn00photo20200904011734jpg
Python,"# Nutrient Object Management System (noms)

Note: I'm not able to maintain this package right now, so there is a chance that the current API integration is broken/will break given the new FoodData Central API from the USDA.

noms is a fun and simple Python package that allows you to obtain and work with highly detailed nutrition data for nearly 8,000 entries from the USDA Standard Reference Food Composition Database. No mainstream nutrition tracker apps reflect the level of detail that the USDA has compiled. With noms you can track:
1. Proximates including macronutrients (protein, carbs, and fat), calories, fiber and water content
2. 11 minerals
3. 13 vitamins
4. Specific lipids including EPA and DHA (the most important omega-3s found in fish oil)

This amounts to 41 nutrients being tracked, but many more are available from the database such as amino acids and other lipids. These can be viewed in all_nutrient_ids.txt, and support for other nutrients will be added in the future as requested. You can add support for these yourself by editing noms/objects/nutrient_ids.json accordingly with entries from all_nutrient_ids.txt.

Note: The Standard Reference Database is used explicitly without the addition of the USDA's Branded Foods database, as only the former allows for highly detailed reports which track 168 different nutrients -- much more information than you would find on an item's nutrition facts! This is especially valuable for nutritionists or people interested in their own health to explore the nutritional content of whole foods. 

## Installation
The noms package is listed on PyPI and can be installed with pip. Simply do:
```
pip install noms
```
If you already have it installed and want to upgrade to the most recent version, do:
```
pip install noms --upgrade
```

## Getting Started
1. Get a data.gov API key for free from here: https://api.data.gov/signup/
2. Initialize a client object with the key you received.
```python
import noms
client = noms.Client(""api key"")
```
## Searching the Database
```python
search_results = client.search_query(""Raw Broccoli"")
print(search_results)
```
```
================================================================================================================
Search results for 'Raw Broccoli' on USDA Standard Reference Database
================================================================================================================
Name                                                                                 Group                    ID
Broccoli, raw                                                            Vegetables and Vegetable Pro..    11090
Broccoli raab, raw                                                       Vegetables and Vegetable Pro..    11096
Broccoli, leaves, raw                                                    Vegetables and Vegetable Pro..    11739
Broccoli, stalks, raw                                                    Vegetables and Vegetable Pro..    11741
Broccoli, chinese, raw                                                   Vegetables and Vegetable Pro..    11994
Broccoli, flower clusters, raw                                           Vegetables and Vegetable Pro..    11740
================================================================================================================
```
## Requesting Food Data From the Database
In this example, the ids correlate with Raw Broccoli (11090) and a Cola Beverage (14400). The numbers afterwards represent the mass of that food, in grams. More mass for a given food equals a greater amount of each nutrient in equal proportion (twice the broccoli has twice the vitamins).
```python
food_list = client.get_foods({'11090':100, '14400':100})
```
## Initializing a Meal With a List of Foods
The foods() method returned a list of two Food objects when given the arguments above, but if you would like to generate a report, analyze or sort a group of foods, they should be merged into a Meal object. This is done by simply constructing a Meal instance with a list of Food objects.
```python
m = noms.Meal(food_list)
```

## Generating and Displaying a Report 
The report is a dictionary which shows if RDAs (or Adequate Intakes) are being met or exceeded. These values are assigned by default in noms.objects.nutrient_dict, but support will be added to modify these settings in the future.
```python
r = noms.report(m)
for i in r:
    print(i)
```
```
{'name': 'Protein', 'rda': 125.0, 'limit': None, 'value': 2.89, 'state': 'deficient', 'unit': 'g'}
{'name': 'Fat', 'rda': 55.56, 'limit': None, 'value': 0.39, 'state': 'deficient', 'unit': 'g'}
{'name': 'Carbs', 'rda': 250.0, 'limit': None, 'value': 16.2, 'state': 'deficient', 'unit': 'g'}
{'name': 'Calories', 'rda': 2000, 'limit': None, 'value': 71.0, 'state': 'deficient', 'unit': 'kcal'}
{'name': 'Water', 'rda': 2000, 'limit': None, 'value': 179.61, 'state': 'deficient', 'unit': 'g'}
{'name': 'Caffeine', 'rda': 0, 'limit': 400, 'value': 8.0, 'state': 'satisfactory', 'unit': 'mg'}
{'name': 'Theobromine', 'rda': 0, 'limit': 300, 'value': 0.0, 'state': 'satisfactory', 'unit': 'mg'}
{'name': 'Sugar', 'rda': 0, 'limit': 50.0, 'value': 10.67, 'state': 'satisfactory', 'unit': 'g'}
{'name': 'Fiber', 'rda': 28.0, 'limit': None, 'value': 2.6, 'state': 'deficient', 'unit': 'g'}
{'name': 'Calcium', 'rda': 1000, 'limit': 2500, 'value': 49.0, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Iron', 'rda': 8, 'limit': 45, 'value': 0.84, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Magnesium', 'rda': 300, 'limit': 700, 'value': 21.0, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Phosphorus', 'rda': 700, 'limit': 4000, 'value': 76.0, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Potassium', 'rda': 1400, 'limit': 6000, 'value': 318.0, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Sodium', 'rda': 1000, 'limit': 2300, 'value': 37.0, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Zinc', 'rda': 12, 'limit': 100, 'value': 0.43, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Copper', 'rda': 0.9, 'limit': 10, 'value': 0.05, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Fluoride', 'rda': 400, 'limit': 10000, 'value': 57.0, 'state': 'deficient', 'unit': 'µg'}
{'name': 'Manganese', 'rda': 1.8, 'limit': None, 'value': 0.21, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Selenium', 'rda': 70, 'limit': 400, 'value': 2.6, 'state': 'deficient', 'unit': 'µg'}
{'name': 'Vitamin A', 'rda': 900, 'limit': 20000, 'value': 623.0, 'state': 'deficient', 'unit': 'IU'}
{'name': 'Vitamin E', 'rda': 15, 'limit': 1000, 'value': 0.78, 'state': 'deficient', 'unit': 'mg'}
{'name': 'Vitamin D', 'rda': 1000, 'limit': 8000, 'value': 0.0, 'state': 'deficient', 'unit': 'IU'}
... continued
```
## Sorting Foods in a Meal By a Specific Nutrient
Sometimes it is helpful to see which foods contain the most of a given nutrient in a meal. For example, you may want to see which foods contributed the most sugar for a given day. This can be achieved through the following code:
```python
# index_from_name returns the index that nutrient information exists in an array of nutrients
m.sort_by_top(""Sugar"")
ni = noms.index_from_name(""Sugar"")
for food in m.foods:
    print(food.nutrients[ni])
```
```
{'nutrient_id': 269, 'name': 'Sugar', 'group': 'Proximates', 'unit': 'g', 'value': 8.97}
{'nutrient_id': 269, 'name': 'Sugar', 'group': 'Proximates', 'unit': 'g', 'value': 1.7}
```
Note that this sorts the foods in the Meal object from greatest to least in terms of how much sugar each food has.

## Generate Food Recommendations in Context of a Meal and Pantry
Because it would be computationally expensive to generate a food recommendation in the context of every food in the database, and it may be unrealistic to recommend any food from the database as it may be hard to access, you must define a list of foods that will serve as a pantry object. Here is an example pantry object containing many common whole foods.

```python
    pantry = {
    # DAIRY AND EGG
    ""01001"":100, # butter, salted
    ""01145"":100, # butter, without salt
    ""01079"":100, # 2% milk
    ""01077"":100, # milk, whole
    ""01086"":100, # skim milk
    ""01132"":100, # scrambled eggs
    ""01129"":100, # hard boiled eggs
    ""01128"":100, # fried egg
    # MEAT
    ""15076"":100, # atlantic salmon
    ""07935"":100, # chicken breast oven-roasted
    ""13647"":100, # steak
    ""05192"":100, # turkey
    # FRUIT
    ""09037"":100, # avocado
    ""09316"":100, # strawberries
    ""09050"":100, # blueberry
    ""09302"":100, # raspberry
    ""09500"":100, # red delicious apple
    ""09040"":100, # banana
    ""09150"":100, # lemon
    ""09201"":100, # oranges
    ""09132"":100, # grapes
    # PROCESSED
    ""21250"":100, # hamburger
    ""21272"":100, # pizza
    ""19088"":100, # ice cream
    ""18249"":100, # donut
    # DRINK
    ""14400"":100, # coke
    ""14429"":100, # tap water
    ""14433"":100, # bottled water
    ""09206"":100, # orange juice
    ""14278"":100, # brewed green tea
    ""14209"":100, # coffee brewed with tap water
    # (milk is included in dairy group)
    # GRAIN
    ""12006"":100, # chia
    ""12220"":100, # flaxseed
    ""20137"":100, # quinoa, cooked
    ""20006"":100, # pearled barley
    ""20051"":100, # white rice enriched cooked
    ""20041"":100, # brown rice cooked
    ""12151"":100, # pistachio
    ""19047"":100, # pretzel
    ""12061"":100, # almond
    # LEGUME
    ""16057"":100, # chickpeas
    ""16015"":100, # black beans
    ""16043"":100, # pinto beans
    ""16072"":100, # lima beans
    ""16167"":100, # peanut butter smooth
    # VEGETABLE
    ""11124"":100, # raw carrots
    ""11090"":100, # broccoli
    ""11457"":100, # spinach, raw
    ""11357"":100, # baked potato
    ""11508"":100, # baked sweet potato
    ""11530"":100, # tomato, red, cooked
    ""11253"":100, # lettuce
    ""11233"":100, # kale
    ""11313"":100, # peas
    ""11215"":100, # garlic
    # OTHER
    ""04053"":100, # olive oil
    ""19904"":100, # dark chocolate
    ""11238"":100, # shiitake mushrooms
    ""19165"":100, # cocoa powder
    }
    pantry_food = client.get_foods(pantry)
```
Now, with a list of possible foods to recommend, you can call noms.generate_recommendations with the meal we set up earlier, which consists of just broccoli and brown rice.
```python
recommendations = noms.generate_recommendations(m, pantry_food, noms.nutrient_dict, 3)
for rec in recommendations:
    # a recommendation is a list containing the calculated loss after the recommendation
    # is applied, the index of the pantry for the recommendation, and the amount of that
    # food / 100g
    print(str(round(rec[2] * 100, 2)) + ""g"", ""of"", pantry_food[rec[1]].desc[""name""])
```
```
50.36g of Seeds, chia seeds, dried
53.3g of Nuts, almonds
56.76g of Peanut Butter, smooth (Includes foods for USDA's Food Distribution Program)
```
It is reasonable that the function returned these foods from the pantry as the current daily nutrition is low in protein and Omega-3s, which chia seeds satisfy the most.
","nutrient object management system noms

note i ' m not able to maintain this package right now so there is a chance that the current api integration is brokenwill break given the new fooddata central api from the usda

noms is a fun and simple python package that allows you to obtain and work with highly detailed nutrition data for nearly 8000 entries from the usda standard reference food composition database no mainstream nutrition tracker apps reflect the level of detail that the usda has compiled with noms you can track
1 proximates including macronutrients protein carbs and fat calories fiber and water content
2 11 minerals
3 13 vitamins
4 specific lipids including epa and dha the most important omega3s found in fish oil

this amounts to 41 nutrients being tracked but many more are available from the database such as amino acids and other lipids these can be viewed in allnutrientidstxt and support for other nutrients will be added in the future as requested you can add support for these yourself by editing nomsobjectsnutrientidsjson accordingly with entries from allnutrientidstxt

note the standard reference database is used explicitly without the addition of the usda ' s branded foods database as only the former allows for highly detailed reports which track 168 different nutrients much more information than you would find on an item ' s nutrition facts this is especially valuable for nutritionists or people interested in their own health to explore the nutritional content of whole foods 

 installation
the noms package is listed on pypi and can be installed with pip simply do

pip install noms

if you already have it installed and want to upgrade to the most recent version do

pip install noms upgrade


 getting started
1 get a datagov api key for free from here httpsapidatagovsignup
2 initialize a client object with the key you received
python
import noms
client nomsclientapi key

 searching the database
python
searchresults clientsearchqueryraw broccoli
printsearchresults



search results for ' raw broccoli ' on usda standard reference database

name group id
broccoli raw vegetables and vegetable pro 11090
broccoli raab raw vegetables and vegetable pro 11096
broccoli leaves raw vegetables and vegetable pro 11739
broccoli stalks raw vegetables and vegetable pro 11741
broccoli chinese raw vegetables and vegetable pro 11994
broccoli flower clusters raw vegetables and vegetable pro 11740


 requesting food data from the database
in this example the ids correlate with raw broccoli 11090 and a cola beverage 14400 the numbers afterwards represent the mass of that food in grams more mass for a given food equals a greater amount of each nutrient in equal proportion twice the broccoli has twice the vitamins
python
foodlist clientgetfoods ' 11090 ' 100 ' 14400 ' 100

 initializing a meal with a list of foods
the foods method returned a list of two food objects when given the arguments above but if you would like to generate a report analyze or sort a group of foods they should be merged into a meal object this is done by simply constructing a meal instance with a list of food objects
python
m nomsmealfoodlist


 generating and displaying a report 
the report is a dictionary which shows if rdas or adequate intakes are being met or exceeded these values are assigned by default in nomsobjectsnutrientdict but support will be added to modify these settings in the future
python
r nomsreportm
for i in r
 printi


 ' name ' ' protein ' ' rda ' 1250 ' limit ' none ' value ' 289 ' state ' ' deficient ' ' unit ' ' g ' 
 ' name ' ' fat ' ' rda ' 5556 ' limit ' none ' value ' 039 ' state ' ' deficient ' ' unit ' ' g ' 
 ' name ' ' carbs ' ' rda ' 2500 ' limit ' none ' value ' 162 ' state ' ' deficient ' ' unit ' ' g ' 
 ' name ' ' calories ' ' rda ' 2000 ' limit ' none ' value ' 710 ' state ' ' deficient ' ' unit ' ' kcal ' 
 ' name ' ' water ' ' rda ' 2000 ' limit ' none ' value ' 17961 ' state ' ' deficient ' ' unit ' ' g ' 
 ' name ' ' caffeine ' ' rda ' 0 ' limit ' 400 ' value ' 80 ' state ' ' satisfactory ' ' unit ' ' mg ' 
 ' name ' ' theobromine ' ' rda ' 0 ' limit ' 300 ' value ' 00 ' state ' ' satisfactory ' ' unit ' ' mg ' 
 ' name ' ' sugar ' ' rda ' 0 ' limit ' 500 ' value ' 1067 ' state ' ' satisfactory ' ' unit ' ' g ' 
 ' name ' ' fiber ' ' rda ' 280 ' limit ' none ' value ' 26 ' state ' ' deficient ' ' unit ' ' g ' 
 ' name ' ' calcium ' ' rda ' 1000 ' limit ' 2500 ' value ' 490 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' iron ' ' rda ' 8 ' limit ' 45 ' value ' 084 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' magnesium ' ' rda ' 300 ' limit ' 700 ' value ' 210 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' phosphorus ' ' rda ' 700 ' limit ' 4000 ' value ' 760 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' potassium ' ' rda ' 1400 ' limit ' 6000 ' value ' 3180 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' sodium ' ' rda ' 1000 ' limit ' 2300 ' value ' 370 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' zinc ' ' rda ' 12 ' limit ' 100 ' value ' 043 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' copper ' ' rda ' 09 ' limit ' 10 ' value ' 005 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' fluoride ' ' rda ' 400 ' limit ' 10000 ' value ' 570 ' state ' ' deficient ' ' unit ' ' g ' 
 ' name ' ' manganese ' ' rda ' 18 ' limit ' none ' value ' 021 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' selenium ' ' rda ' 70 ' limit ' 400 ' value ' 26 ' state ' ' deficient ' ' unit ' ' g ' 
 ' name ' ' vitamin a ' ' rda ' 900 ' limit ' 20000 ' value ' 6230 ' state ' ' deficient ' ' unit ' ' iu ' 
 ' name ' ' vitamin e ' ' rda ' 15 ' limit ' 1000 ' value ' 078 ' state ' ' deficient ' ' unit ' ' mg ' 
 ' name ' ' vitamin d ' ' rda ' 1000 ' limit ' 8000 ' value ' 00 ' state ' ' deficient ' ' unit ' ' iu ' 
 continued

 sorting foods in a meal by a specific nutrient
sometimes it is helpful to see which foods contain the most of a given nutrient in a meal for example you may want to see which foods contributed the most sugar for a given day this can be achieved through the following code
python
 indexfromname returns the index that nutrient information exists in an array of nutrients
msortbytopsugar
ni nomsindexfromnamesugar
for food in mfoods
 printfoodnutrientsni


 ' nutrientid ' 269 ' name ' ' sugar ' ' group ' ' proximates ' ' unit ' ' g ' ' value ' 897
 ' nutrientid ' 269 ' name ' ' sugar ' ' group ' ' proximates ' ' unit ' ' g ' ' value ' 17

note that this sorts the foods in the meal object from greatest to least in terms of how much sugar each food has

 generate food recommendations in context of a meal and pantry
because it would be computationally expensive to generate a food recommendation in the context of every food in the database and it may be unrealistic to recommend any food from the database as it may be hard to access you must define a list of foods that will serve as a pantry object here is an example pantry object containing many common whole foods

python
 pantry 
 dairy and egg
 01001100 butter salted
 01145100 butter without salt
 01079100 2 milk
 01077100 milk whole
 01086100 skim milk
 01132100 scrambled eggs
 01129100 hard boiled eggs
 01128100 fried egg
 meat
 15076100 atlantic salmon
 07935100 chicken breast ovenroasted
 13647100 steak
 05192100 turkey
 fruit
 09037100 avocado
 09316100 strawberries
 09050100 blueberry
 09302100 raspberry
 09500100 red delicious apple
 09040100 banana
 09150100 lemon
 09201100 oranges
 09132100 grapes
 processed
 21250100 hamburger
 21272100 pizza
 19088100 ice cream
 18249100 donut
 drink
 14400100 coke
 14429100 tap water
 14433100 bottled water
 09206100 orange juice
 14278100 brewed green tea
 14209100 coffee brewed with tap water
 milk is included in dairy group
 grain
 12006100 chia
 12220100 flaxseed
 20137100 quinoa cooked
 20006100 pearled barley
 20051100 white rice enriched cooked
 20041100 brown rice cooked
 12151100 pistachio
 19047100 pretzel
 12061100 almond
 legume
 16057100 chickpeas
 16015100 black beans
 16043100 pinto beans
 16072100 lima beans
 16167100 peanut butter smooth
 vegetable
 11124100 raw carrots
 11090100 broccoli
 11457100 spinach raw
 11357100 baked potato
 11508100 baked sweet potato
 11530100 tomato red cooked
 11253100 lettuce
 11233100 kale
 11313100 peas
 11215100 garlic
 other
 04053100 olive oil
 19904100 dark chocolate
 11238100 shiitake mushrooms
 19165100 cocoa powder
 
 pantryfood clientgetfoodspantry

now with a list of possible foods to recommend you can call nomsgeneraterecommendations with the meal we set up earlier which consists of just broccoli and brown rice
python
recommendations nomsgeneraterecommendationsm pantryfood nomsnutrientdict 3
for rec in recommendations
 a recommendation is a list containing the calculated loss after the recommendation
 is applied the index of the pantry for the recommendation and the amount of that
 food 100g
 printstrroundrec2 100 2 g of pantryfoodrec1descname


5036g of seeds chia seeds dried
533g of nuts almonds
5676g of peanut butter smooth includes foods for usda ' s food distribution program

it is reasonable that the function returned these foods from the pantry as the current daily nutrition is low in protein and omega3s which chia seeds satisfy the most",nutrient object manag system nom note ' abl maintain thi packag right chanc current api integr brokenwil break given new fooddata central api usda nom fun simpl python packag allow obtain work highli detail nutrit data nearli 8000 entri usda standard refer food composit databas mainstream nutrit tracker app reflect level detail usda ha compil nom track 1 proxim includ macronutri protein carb fat calori fiber water content 2 11 miner 3 13 vitamin 4 specif lipid includ epa dha import omega3 found fish oil thi amount 41 nutrient track mani avail databas amino acid lipid view allnutrientidstxt support nutrient ad futur request add support edit nomsobjectsnutrientidsjson accordingli entri allnutrientidstxt note standard refer databas use explicitli without addit usda ' brand food databas onli former allow highli detail report track 168 differ nutrient much inform would find item ' nutrit fact thi especi valuabl nutritionist peopl interest health explor nutrit content whole food instal nom packag list pypi instal pip simpli pip instal nom alreadi instal want upgrad recent version pip instal nom upgrad get start 1 get datagov api key free httpsapidatagovsignup 2 initi client object key receiv python import nom client nomsclientapi key search databas python searchresult clientsearchqueryraw broccoli printsearchresult search result ' raw broccoli ' usda standard refer databas name group id broccoli raw veget veget pro 11090 broccoli raab raw veget veget pro 11096 broccoli leav raw veget veget pro 11739 broccoli stalk raw veget veget pro 11741 broccoli chines raw veget veget pro 11994 broccoli flower cluster raw veget veget pro 11740 request food data databas thi exampl id correl raw broccoli 11090 cola beverag 14400 number afterward repres mass food gram mass given food equal greater amount nutrient equal proport twice broccoli ha twice vitamin python foodlist clientgetfood ' 11090 ' 100 ' 14400 ' 100 initi meal list food food method return list two food object given argument abov would like gener report analyz sort group food merg meal object thi done simpli construct meal instanc list food object python nomsmealfoodlist gener display report report dictionari show rda adequ intak met exceed valu assign default nomsobjectsnutrientdict support ad modifi set futur python r nomsreportm r printi ' name ' ' protein ' ' rda ' 1250 ' limit ' none ' valu ' 289 ' state ' ' defici ' ' unit ' ' g ' ' name ' ' fat ' ' rda ' 5556 ' limit ' none ' valu ' 039 ' state ' ' defici ' ' unit ' ' g ' ' name ' ' carb ' ' rda ' 2500 ' limit ' none ' valu ' 162 ' state ' ' defici ' ' unit ' ' g ' ' name ' ' calori ' ' rda ' 2000 ' limit ' none ' valu ' 710 ' state ' ' defici ' ' unit ' ' kcal ' ' name ' ' water ' ' rda ' 2000 ' limit ' none ' valu ' 17961 ' state ' ' defici ' ' unit ' ' g ' ' name ' ' caffein ' ' rda ' 0 ' limit ' 400 ' valu ' 80 ' state ' ' satisfactori ' ' unit ' ' mg ' ' name ' ' theobromin ' ' rda ' 0 ' limit ' 300 ' valu ' 00 ' state ' ' satisfactori ' ' unit ' ' mg ' ' name ' ' sugar ' ' rda ' 0 ' limit ' 500 ' valu ' 1067 ' state ' ' satisfactori ' ' unit ' ' g ' ' name ' ' fiber ' ' rda ' 280 ' limit ' none ' valu ' 26 ' state ' ' defici ' ' unit ' ' g ' ' name ' ' calcium ' ' rda ' 1000 ' limit ' 2500 ' valu ' 490 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' iron ' ' rda ' 8 ' limit ' 45 ' valu ' 084 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' magnesium ' ' rda ' 300 ' limit ' 700 ' valu ' 210 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' phosphoru ' ' rda ' 700 ' limit ' 4000 ' valu ' 760 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' potassium ' ' rda ' 1400 ' limit ' 6000 ' valu ' 3180 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' sodium ' ' rda ' 1000 ' limit ' 2300 ' valu ' 370 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' zinc ' ' rda ' 12 ' limit ' 100 ' valu ' 043 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' copper ' ' rda ' 09 ' limit ' 10 ' valu ' 005 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' fluorid ' ' rda ' 400 ' limit ' 10000 ' valu ' 570 ' state ' ' defici ' ' unit ' ' g ' ' name ' ' manganes ' ' rda ' 18 ' limit ' none ' valu ' 021 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' selenium ' ' rda ' 70 ' limit ' 400 ' valu ' 26 ' state ' ' defici ' ' unit ' ' g ' ' name ' ' vitamin ' ' rda ' 900 ' limit ' 20000 ' valu ' 6230 ' state ' ' defici ' ' unit ' ' iu ' ' name ' ' vitamin e ' ' rda ' 15 ' limit ' 1000 ' valu ' 078 ' state ' ' defici ' ' unit ' ' mg ' ' name ' ' vitamin ' ' rda ' 1000 ' limit ' 8000 ' valu ' 00 ' state ' ' defici ' ' unit ' ' iu ' continu sort food meal specif nutrient sometim help see food contain given nutrient meal exampl may want see food contribut sugar given day thi achiev follow code python indexfromnam return index nutrient inform exist array nutrient msortbytopsugar ni nomsindexfromnamesugar food mfood printfoodnutrientsni ' nutrientid ' 269 ' name ' ' sugar ' ' group ' ' proxim ' ' unit ' ' g ' ' valu ' 897 ' nutrientid ' 269 ' name ' ' sugar ' ' group ' ' proxim ' ' unit ' ' g ' ' valu ' 17 note thi sort food meal object greatest least term much sugar food ha gener food recommend context meal pantri becaus would comput expens gener food recommend context everi food databas may unrealist recommend ani food databas may hard access must defin list food serv pantri object exampl pantri object contain mani common whole food python pantri dairi egg 01001100 butter salt 01145100 butter without salt 01079100 2 milk 01077100 milk whole 01086100 skim milk 01132100 scrambl egg 01129100 hard boil egg 01128100 fri egg meat 15076100 atlant salmon 07935100 chicken breast ovenroast 13647100 steak 05192100 turkey fruit 09037100 avocado 09316100 strawberri 09050100 blueberri 09302100 raspberri 09500100 red delici appl 09040100 banana 09150100 lemon 09201100 orang 09132100 grape process 21250100 hamburg 21272100 pizza 19088100 ice cream 18249100 donut drink 14400100 coke 14429100 tap water 14433100 bottl water 09206100 orang juic 14278100 brew green tea 14209100 coffe brew tap water milk includ dairi group grain 12006100 chia 12220100 flaxse 20137100 quinoa cook 20006100 pearl barley 20051100 white rice enrich cook 20041100 brown rice cook 12151100 pistachio 19047100 pretzel 12061100 almond legum 16057100 chickpea 16015100 black bean 16043100 pinto bean 16072100 lima bean 16167100 peanut butter smooth veget 11124100 raw carrot 11090100 broccoli 11457100 spinach raw 11357100 bake potato 11508100 bake sweet potato 11530100 tomato red cook 11253100 lettuc 11233100 kale 11313100 pea 11215100 garlic 04053100 oliv oil 19904100 dark chocol 11238100 shiitak mushroom 19165100 cocoa powder pantryfood clientgetfoodspantri list possibl food recommend call nomsgeneraterecommend meal set earlier consist broccoli brown rice python recommend nomsgeneraterecommendationsm pantryfood nomsnutrientdict 3 rec recommend recommend list contain calcul loss recommend appli index pantri recommend amount food 100g printstrroundrec2 100 2 g pantryfoodrec1descnam 5036g seed chia seed dri 533g nut almond 5676g peanut butter smooth includ food usda ' food distribut program reason function return food pantri current daili nutrit low protein omega3 chia seed satisfi,nutrient object management system noms note ' able maintain package right chance current api integration brokenwill break given new fooddata central api usda noms fun simple python package allows obtain work highly detailed nutrition data nearly 8000 entry usda standard reference food composition database mainstream nutrition tracker apps reflect level detail usda ha compiled noms track 1 proximates including macronutrients protein carbs fat calorie fiber water content 2 11 mineral 3 13 vitamin 4 specific lipid including epa dha important omega3s found fish oil amount 41 nutrient tracked many available database amino acid lipid viewed allnutrientidstxt support nutrient added future requested add support editing nomsobjectsnutrientidsjson accordingly entry allnutrientidstxt note standard reference database used explicitly without addition usda ' branded food database former allows highly detailed report track 168 different nutrient much information would find item ' nutrition fact especially valuable nutritionist people interested health explore nutritional content whole food installation noms package listed pypi installed pip simply pip install noms already installed want upgrade recent version pip install noms upgrade getting started 1 get datagov api key free httpsapidatagovsignup 2 initialize client object key received python import noms client nomsclientapi key searching database python searchresults clientsearchqueryraw broccoli printsearchresults search result ' raw broccoli ' usda standard reference database name group id broccoli raw vegetable vegetable pro 11090 broccoli raab raw vegetable vegetable pro 11096 broccoli leaf raw vegetable vegetable pro 11739 broccoli stalk raw vegetable vegetable pro 11741 broccoli chinese raw vegetable vegetable pro 11994 broccoli flower cluster raw vegetable vegetable pro 11740 requesting food data database example id correlate raw broccoli 11090 cola beverage 14400 number afterwards represent mass food gram mass given food equal greater amount nutrient equal proportion twice broccoli ha twice vitamin python foodlist clientgetfoods ' 11090 ' 100 ' 14400 ' 100 initializing meal list food food method returned list two food object given argument would like generate report analyze sort group food merged meal object done simply constructing meal instance list food object python nomsmealfoodlist generating displaying report report dictionary show rdas adequate intake met exceeded value assigned default nomsobjectsnutrientdict support added modify setting future python r nomsreportm r printi ' name ' ' protein ' ' rda ' 1250 ' limit ' none ' value ' 289 ' state ' ' deficient ' ' unit ' ' g ' ' name ' ' fat ' ' rda ' 5556 ' limit ' none ' value ' 039 ' state ' ' deficient ' ' unit ' ' g ' ' name ' ' carbs ' ' rda ' 2500 ' limit ' none ' value ' 162 ' state ' ' deficient ' ' unit ' ' g ' ' name ' ' calorie ' ' rda ' 2000 ' limit ' none ' value ' 710 ' state ' ' deficient ' ' unit ' ' kcal ' ' name ' ' water ' ' rda ' 2000 ' limit ' none ' value ' 17961 ' state ' ' deficient ' ' unit ' ' g ' ' name ' ' caffeine ' ' rda ' 0 ' limit ' 400 ' value ' 80 ' state ' ' satisfactory ' ' unit ' ' mg ' ' name ' ' theobromine ' ' rda ' 0 ' limit ' 300 ' value ' 00 ' state ' ' satisfactory ' ' unit ' ' mg ' ' name ' ' sugar ' ' rda ' 0 ' limit ' 500 ' value ' 1067 ' state ' ' satisfactory ' ' unit ' ' g ' ' name ' ' fiber ' ' rda ' 280 ' limit ' none ' value ' 26 ' state ' ' deficient ' ' unit ' ' g ' ' name ' ' calcium ' ' rda ' 1000 ' limit ' 2500 ' value ' 490 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' iron ' ' rda ' 8 ' limit ' 45 ' value ' 084 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' magnesium ' ' rda ' 300 ' limit ' 700 ' value ' 210 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' phosphorus ' ' rda ' 700 ' limit ' 4000 ' value ' 760 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' potassium ' ' rda ' 1400 ' limit ' 6000 ' value ' 3180 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' sodium ' ' rda ' 1000 ' limit ' 2300 ' value ' 370 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' zinc ' ' rda ' 12 ' limit ' 100 ' value ' 043 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' copper ' ' rda ' 09 ' limit ' 10 ' value ' 005 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' fluoride ' ' rda ' 400 ' limit ' 10000 ' value ' 570 ' state ' ' deficient ' ' unit ' ' g ' ' name ' ' manganese ' ' rda ' 18 ' limit ' none ' value ' 021 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' selenium ' ' rda ' 70 ' limit ' 400 ' value ' 26 ' state ' ' deficient ' ' unit ' ' g ' ' name ' ' vitamin ' ' rda ' 900 ' limit ' 20000 ' value ' 6230 ' state ' ' deficient ' ' unit ' ' iu ' ' name ' ' vitamin e ' ' rda ' 15 ' limit ' 1000 ' value ' 078 ' state ' ' deficient ' ' unit ' ' mg ' ' name ' ' vitamin ' ' rda ' 1000 ' limit ' 8000 ' value ' 00 ' state ' ' deficient ' ' unit ' ' iu ' continued sorting food meal specific nutrient sometimes helpful see food contain given nutrient meal example may want see food contributed sugar given day achieved following code python indexfromname return index nutrient information exists array nutrient msortbytopsugar ni nomsindexfromnamesugar food mfoods printfoodnutrientsni ' nutrientid ' 269 ' name ' ' sugar ' ' group ' ' proximates ' ' unit ' ' g ' ' value ' 897 ' nutrientid ' 269 ' name ' ' sugar ' ' group ' ' proximates ' ' unit ' ' g ' ' value ' 17 note sort food meal object greatest least term much sugar food ha generate food recommendation context meal pantry would computationally expensive generate food recommendation context every food database may unrealistic recommend food database may hard access must define list food serve pantry object example pantry object containing many common whole food python pantry dairy egg 01001100 butter salted 01145100 butter without salt 01079100 2 milk 01077100 milk whole 01086100 skim milk 01132100 scrambled egg 01129100 hard boiled egg 01128100 fried egg meat 15076100 atlantic salmon 07935100 chicken breast ovenroasted 13647100 steak 05192100 turkey fruit 09037100 avocado 09316100 strawberry 09050100 blueberry 09302100 raspberry 09500100 red delicious apple 09040100 banana 09150100 lemon 09201100 orange 09132100 grape processed 21250100 hamburger 21272100 pizza 19088100 ice cream 18249100 donut drink 14400100 coke 14429100 tap water 14433100 bottled water 09206100 orange juice 14278100 brewed green tea 14209100 coffee brewed tap water milk included dairy group grain 12006100 chia 12220100 flaxseed 20137100 quinoa cooked 20006100 pearled barley 20051100 white rice enriched cooked 20041100 brown rice cooked 12151100 pistachio 19047100 pretzel 12061100 almond legume 16057100 chickpea 16015100 black bean 16043100 pinto bean 16072100 lima bean 16167100 peanut butter smooth vegetable 11124100 raw carrot 11090100 broccoli 11457100 spinach raw 11357100 baked potato 11508100 baked sweet potato 11530100 tomato red cooked 11253100 lettuce 11233100 kale 11313100 pea 11215100 garlic 04053100 olive oil 19904100 dark chocolate 11238100 shiitake mushroom 19165100 cocoa powder pantryfood clientgetfoodspantry list possible food recommend call nomsgeneraterecommendations meal set earlier consists broccoli brown rice python recommendation nomsgeneraterecommendationsm pantryfood nomsnutrientdict 3 rec recommendation recommendation list containing calculated loss recommendation applied index pantry recommendation amount food 100g printstrroundrec2 100 2 g pantryfoodrec1descname 5036g seed chia seed dried 533g nut almond 5676g peanut butter smooth includes food usda ' food distribution program reasonable function returned food pantry current daily nutrition low protein omega3s chia seed satisfy
TypeScript,"# snips-action-nutrition

Snips action code for the Nutrition app

## Setup

```sh
# Install the dependencies, builds the action and creates the config.ini file.
sh setup.sh
```

Don't forget to edit the `config.ini` file.

To be able to make calls to the API, you must have a [FatSecret Platform REST API key](https://platform.fatsecret.com/api/Default.aspx?screen=rapih).

An assistant containing the intents listed below must be installed on your system. Deploy it following [these instructions](https://docs.snips.ai/articles/console/actions/deploy-your-assistant).

## Run

- Dev mode:

```sh
# Dev mode watches for file changes and restarts the action.
npm run dev
```

- Prod mode:

```sh
# 1) Lint, transpile and test.
npm start
# 2) Run the action.
npm run launch
```

## Test & Demo cases

This app only supports english 🇬🇧. French 🇫🇷 will probably be supported in the future.

### `GetNutritionalInfo`

#### Get nutritional info for a given food

Get nutritional information for the given food
> *Hey Snips, how many calories are in a serving of spaghetti?*

> *Hey Snips, how much vitamin A is in a carrot?*

### `CompareNutritionalInfo`

#### Compare the nutritional info between two given foods

Compare the nutritional info between the two given foods
> *Hey Snips, how much vitamin C in an orange compared to a lemon?*

## Debug

In the `src/index.ts` file:

```js
// Uncomment this line to print everything
// debug.enable(name + ':*')
```

## Test

*Requires [mosquitto](https://mosquitto.org/download/) to be installed.*

```sh
npm run test
```

**In test mode, i18n output and http calls are mocked.**

- **http**: are written in `tests/httpMocks/index.ts`
- **i18n**: mocked by `snips-toolkit`, see the [documentation](https://github.com/snipsco/snips-javascript-toolkit#i18n).
","snipsactionnutrition

snips action code for the nutrition app

 setup

sh
 install the dependencies builds the action and creates the configini file
sh setupsh


don ' t forget to edit the configini file

to be able to make calls to the api you must have a fatsecret platform rest api keyhttpsplatformfatsecretcomapidefaultaspxscreenrapih

an assistant containing the intents listed below must be installed on your system deploy it following these instructionshttpsdocssnipsaiarticlesconsoleactionsdeployyourassistant

 run

 dev mode

sh
 dev mode watches for file changes and restarts the action
npm run dev


 prod mode

sh
 1 lint transpile and test
npm start
 2 run the action
npm run launch


 test demo cases

this app only supports english french will probably be supported in the future

 getnutritionalinfo

 get nutritional info for a given food

get nutritional information for the given food
 hey snips how many calories are in a serving of spaghetti

 hey snips how much vitamin a is in a carrot

 comparenutritionalinfo

 compare the nutritional info between two given foods

compare the nutritional info between the two given foods
 hey snips how much vitamin c in an orange compared to a lemon

 debug

in the srcindexts file

js
 uncomment this line to print everything
 debugenablename ' ' 


 test

requires mosquittohttpsmosquittoorgdownload to be installed

sh
npm run test


in test mode i18n output and http calls are mocked

 http are written in testshttpmocksindexts
 i18n mocked by snipstoolkit see the documentationhttpsgithubcomsnipscosnipsjavascripttoolkiti18n",snipsactionnutrit snip action code nutrit app setup sh instal depend build action creat configini file sh setupsh ' forget edit configini file abl make call api must fatsecret platform rest api keyhttpsplatformfatsecretcomapidefaultaspxscreenrapih assist contain intent list must instal system deploy follow instructionshttpsdocssnipsaiarticlesconsoleactionsdeployyourassist run dev mode sh dev mode watch file chang restart action npm run dev prod mode sh 1 lint transpil test npm start 2 run action npm run launch test demo case thi app onli support english french probabl support futur getnutritionalinfo get nutrit info given food get nutrit inform given food hey snip mani calori serv spaghetti hey snip much vitamin carrot comparenutritionalinfo compar nutrit info two given food compar nutrit info two given food hey snip much vitamin c orang compar lemon debug srcindext file js uncom thi line print everyth debugenablenam ' ' test requir mosquittohttpsmosquittoorgdownload instal sh npm run test test mode i18n output http call mock http written testshttpmocksindext i18n mock snipstoolkit see documentationhttpsgithubcomsnipscosnipsjavascripttoolkiti18n,snipsactionnutrition snip action code nutrition app setup sh install dependency build action creates configini file sh setupsh ' forget edit configini file able make call api must fatsecret platform rest api keyhttpsplatformfatsecretcomapidefaultaspxscreenrapih assistant containing intent listed must installed system deploy following instructionshttpsdocssnipsaiarticlesconsoleactionsdeployyourassistant run dev mode sh dev mode watch file change restarts action npm run dev prod mode sh 1 lint transpile test npm start 2 run action npm run launch test demo case app support english french probably supported future getnutritionalinfo get nutritional info given food get nutritional information given food hey snip many calorie serving spaghetti hey snip much vitamin carrot comparenutritionalinfo compare nutritional info two given food compare nutritional info two given food hey snip much vitamin c orange compared lemon debug srcindexts file j uncomment line print everything debugenablename ' ' test requires mosquittohttpsmosquittoorgdownload installed sh npm run test test mode i18n output http call mocked http written testshttpmocksindexts i18n mocked snipstoolkit see documentationhttpsgithubcomsnipscosnipsjavascripttoolkiti18n
CSS,"# Nutirition UI

A [video series project](https://www.youtube.com/watch?v=Z8LFbc3zFTE&list=PLKFUh46KjXESnnC7TZwd_qc-GwdPRiOnl) by [Build UX](https://youtube.com/buildux) to craft a nutrition website design with expert HTML and CSS.

## Attributions

### Design

The design used for this project is [Nutrition UI by Giga Tamarashvili on Dribbble](https://dribbble.com/shots/4896266-Nutrition-UI).

[View and inspect the recreated design in Figma](https://www.figma.com/file/PJ1eDnAob5PCQxxBnOBIuacM/Nutrition-UI-by-Giga-Tamarashvili?node-id=0%3A1).

### Fonts

This project uses two open-source fonts from [Google fonts](https://fonts.google.com/):

- [Muli](https://fonts.google.com/specimen/Muli)
- [Yeseva One](https://fonts.google.com/specimen/Yeseva+One)

### Images

This project uses two free high-resolution photos from [Unsplash](https://unsplash.com/):

- [A berry full glass](https://unsplash.com/photos/0uns8eQn_g8) by [Jess Watters](https://unsplash.com/@designedbyjess) on Unsplash
- [Chia pudding](https://unsplash.com/photos/sBDJADrnsbY) by [Alex Loup](https://unsplash.com/@alexloup) on Unsplash

### Icons

This project uses two free SVG icons from [FontAwesome](https://fontawesome.com/).
","nutirition ui

a video series projecthttpswwwyoutubecomwatchvz8lfbc3zftelistplkfuh46kjxesnnc7tzwdqcgwdprionl by build uxhttpsyoutubecombuildux to craft a nutrition website design with expert html and css

 attributions

 design

the design used for this project is nutrition ui by giga tamarashvili on dribbblehttpsdribbblecomshots4896266nutritionui

view and inspect the recreated design in figmahttpswwwfigmacomfilepj1ednaob5pcqxxbnobiuacmnutritionuibygigatamarashvilinodeid03a1

 fonts

this project uses two opensource fonts from google fontshttpsfontsgooglecom

 mulihttpsfontsgooglecomspecimenmuli
 yeseva onehttpsfontsgooglecomspecimenyesevaone

 images

this project uses two free highresolution photos from unsplashhttpsunsplashcom

 a berry full glasshttpsunsplashcomphotos0uns8eqng8 by jess wattershttpsunsplashcomdesignedbyjess on unsplash
 chia puddinghttpsunsplashcomphotossbdjadrnsby by alex louphttpsunsplashcomalexloup on unsplash

 icons

this project uses two free svg icons from fontawesomehttpsfontawesomecom",nutirit ui video seri projecthttpswwwyoutubecomwatchvz8lfbc3zftelistplkfuh46kjxesnnc7tzwdqcgwdprionl build uxhttpsyoutubecombuildux craft nutrit websit design expert html css attribut design design use thi project nutrit ui giga tamarashvili dribbblehttpsdribbblecomshots4896266nutritionui view inspect recreat design figmahttpswwwfigmacomfilepj1ednaob5pcqxxbnobiuacmnutritionuibygigatamarashvilinodeid03a1 font thi project use two opensourc font googl fontshttpsfontsgooglecom mulihttpsfontsgooglecomspecimenmuli yeseva onehttpsfontsgooglecomspecimenyesevaon imag thi project use two free highresolut photo unsplashhttpsunsplashcom berri full glasshttpsunsplashcomphotos0uns8eqng8 jess wattershttpsunsplashcomdesignedbyjess unsplash chia puddinghttpsunsplashcomphotossbdjadrnsbi alex louphttpsunsplashcomalexloup unsplash icon thi project use two free svg icon fontawesomehttpsfontawesomecom,nutirition ui video series projecthttpswwwyoutubecomwatchvz8lfbc3zftelistplkfuh46kjxesnnc7tzwdqcgwdprionl build uxhttpsyoutubecombuildux craft nutrition website design expert html cs attribution design design used project nutrition ui giga tamarashvili dribbblehttpsdribbblecomshots4896266nutritionui view inspect recreated design figmahttpswwwfigmacomfilepj1ednaob5pcqxxbnobiuacmnutritionuibygigatamarashvilinodeid03a1 font project us two opensource font google fontshttpsfontsgooglecom mulihttpsfontsgooglecomspecimenmuli yeseva onehttpsfontsgooglecomspecimenyesevaone image project us two free highresolution photo unsplashhttpsunsplashcom berry full glasshttpsunsplashcomphotos0uns8eqng8 jess wattershttpsunsplashcomdesignedbyjess unsplash chia puddinghttpsunsplashcomphotossbdjadrnsby alex louphttpsunsplashcomalexloup unsplash icon project us two free svg icon fontawesomehttpsfontawesomecom
PHP,"# Laravel Open Food Facts API

[![Latest Version on Packagist](https://img.shields.io/packagist/v/openfoodfacts/openfoodfacts-laravel.svg?style=flat-square)](https://packagist.org/packages/openfoodfacts/openfoodfacts-laravel)
[![Code Coverage](https://scrutinizer-ci.com/g/openfoodfacts/openfoodfacts-laravel/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/openfoodfacts/openfoodfacts-laravel/?branch=master)
[![Quality Score](https://img.shields.io/scrutinizer/g/openfoodfacts/openfoodfacts-laravel.svg?style=flat-square)](https://scrutinizer-ci.com/g/openfoodfacts/openfoodfacts-laravel)

This package provides a convenient wrapper to the [Open Food Facts API](https://en.wiki.openfoodfacts.org/API) for Laravel applications.

## Requirements

- PHP 8.0+
- Laravel 9.x

*Legacy support (PHP 7.2+ and Laravel 5.7-8.x) at [v0.2.x](https://github.com/openfoodfacts/openfoodfacts-laravel/tree/v0.2.2).*

## Installation

You can install the package via composer:

```bash
composer require openfoodfacts/openfoodfacts-laravel
```

## Usage

#### Find product details by barcode
``` php
OpenFoodFacts::barcode('20203467');
```
it returns an array with product details:
```
Array
(
    [product_name] => Cantuccini with hazelnuts
    [image_url] => https://static.openfoodfacts.org/images/products/20203467/front_fr.4.400.jpg
    ...    
)    
```

#### Find products that match a search term:
``` php
$collection = OpenFoodFacts::find('Coca Cola Zero');

// returns a Illuminate\Support\Collection of arrays with details of each product found
```


## Contributing
You're very welcome to contribute. We coordinate on the Open Food Facts slack, on the #PHP channel : https://slack.openfoodfacts.org
Please see [CONTRIBUTING](CONTRIBUTING.md) for details.

## License

The MIT License (MIT). Please see [License File](LICENSE.md) for more information.
","laravel open food facts api

latest version on packagisthttpsimgshieldsiopackagistvopenfoodfactsopenfoodfactslaravelsvgstyleflatsquarehttpspackagistorgpackagesopenfoodfactsopenfoodfactslaravel
code coveragehttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravelbadgescoveragepngbmasterhttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravelbranchmaster
quality scorehttpsimgshieldsioscrutinizergopenfoodfactsopenfoodfactslaravelsvgstyleflatsquarehttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravel

this package provides a convenient wrapper to the open food facts apihttpsenwikiopenfoodfactsorgapi for laravel applications

 requirements

 php 80
 laravel 9x

legacy support php 72 and laravel 578x at v02xhttpsgithubcomopenfoodfactsopenfoodfactslaraveltreev022

 installation

you can install the package via composer

bash
composer require openfoodfactsopenfoodfactslaravel


 usage

 find product details by barcode
 php
openfoodfactsbarcode ' 20203467 ' 

it returns an array with product details

array

 productname cantuccini with hazelnuts
 imageurl httpsstaticopenfoodfactsorgimagesproducts20203467frontfr4400jpg
 
 


 find products that match a search term
 php
collection openfoodfactsfind ' coca cola zero ' 

 returns a illuminatesupportcollection of arrays with details of each product found



 contributing
you ' re very welcome to contribute we coordinate on the open food facts slack on the php channel httpsslackopenfoodfactsorg
please see contributingcontributingmd for details

 license

the mit license mit please see license filelicensemd for more information",laravel open food fact api latest version packagisthttpsimgshieldsiopackagistvopenfoodfactsopenfoodfactslaravelsvgstyleflatsquarehttpspackagistorgpackagesopenfoodfactsopenfoodfactslaravel code coveragehttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravelbadgescoveragepngbmasterhttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravelbranchmast qualiti scorehttpsimgshieldsioscrutinizergopenfoodfactsopenfoodfactslaravelsvgstyleflatsquarehttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravel thi packag provid conveni wrapper open food fact apihttpsenwikiopenfoodfactsorgapi laravel applic requir php 80 laravel 9x legaci support php 72 laravel 578x v02xhttpsgithubcomopenfoodfactsopenfoodfactslaraveltreev022 instal instal packag via compos bash compos requir openfoodfactsopenfoodfactslaravel usag find product detail barcod php openfoodfactsbarcod ' 20203467 ' return array product detail array productnam cantuccini hazelnut imageurl httpsstaticopenfoodfactsorgimagesproducts20203467frontfr4400jpg find product match search term php collect openfoodfactsfind ' coca cola zero ' return illuminatesupportcollect array detail product found contribut ' veri welcom contribut coordin open food fact slack php channel httpsslackopenfoodfactsorg pleas see contributingcontributingmd detail licens mit licens mit pleas see licens filelicensemd inform,laravel open food fact api latest version packagisthttpsimgshieldsiopackagistvopenfoodfactsopenfoodfactslaravelsvgstyleflatsquarehttpspackagistorgpackagesopenfoodfactsopenfoodfactslaravel code coveragehttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravelbadgescoveragepngbmasterhttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravelbranchmaster quality scorehttpsimgshieldsioscrutinizergopenfoodfactsopenfoodfactslaravelsvgstyleflatsquarehttpsscrutinizercicomgopenfoodfactsopenfoodfactslaravel package provides convenient wrapper open food fact apihttpsenwikiopenfoodfactsorgapi laravel application requirement php 80 laravel 9x legacy support php 72 laravel 578x v02xhttpsgithubcomopenfoodfactsopenfoodfactslaraveltreev022 installation install package via composer bash composer require openfoodfactsopenfoodfactslaravel usage find product detail barcode php openfoodfactsbarcode ' 20203467 ' return array product detail array productname cantuccini hazelnut imageurl httpsstaticopenfoodfactsorgimagesproducts20203467frontfr4400jpg find product match search term php collection openfoodfactsfind ' coca cola zero ' return illuminatesupportcollection array detail product found contributing ' welcome contribute coordinate open food fact slack php channel httpsslackopenfoodfactsorg please see contributingcontributingmd detail license mit license mit please see license filelicensemd information
JavaScript,"# Nutrition Facts Label

Tags: food, nutrition, nutrition facts, nutrition label, food-cook, recipe plugin, shortcode, global food book

Requires at least: 3.0.1

Tested up to: 4.4

Stable tag: 1

License: GPLv2 or later

License URI: http://www.gnu.org/licenses/gpl-2.0.html

This plugin provides food bloggers with the ability to add nutrition facts label to their recipe post(s).

## Description

Our motivation for releasing this plugin is based on a forum discussion on the food-cook theme support site.

We felt that we already had some code that could serve as a basis for producing this plugin, other food bloggers could benefit and possibly improve on.

This plugin will work best on blogs that use [food-cook](http://themeforest.net/item/food-cook-multipurpose-food-recipe-wp-theme/4915630) theme.

For food blogs that are not based on the food-cook theme, It is possible to create a [custom post type](https://wordpress.org/plugins/custom-post-type-ui/) called ""recipe"" and an ingredients post_meta entry with key ""RECIPE_META_ingredients"".

We strongly recommended taking this route or using this plugin under the guidance of a Wordpress developer.

From a more technical side, In order to generate a nutrition facts label, you can either generate an image or generate a post_meta key (gfb_recipe_meta_nutrition_facts) that holds JSON data (for each recipe) which is used to generate a nutrition label.

This plugin also includes a meta box within the recipe post edit page in the admin area, which automatically reads the post_meta entry with key ""RECIPE_META_ingredients"" which mainly contains your ingredients list and uses that to generate the nutrition label.

In order to automatically display a nutrition label on the every recipe, your Wordpress developer should add this line of code to the best possible place.

```
  <?php echo do_shortcode( '[embed_nutrition_label]' ) ?>
```
It is also possible to embed this as a short-code from the text editor.

But based on the food-cook recipe page layout your options may appear limited, hence why it is best that a Wordpress developer helps out here.

```
  [embed_nutrition_label]
```
### How to Video
[![Nutrition Facts Label Wordpress Plugin Video](http://img.youtube.com/vi/oM1LoVSacss/0.jpg)](https://www.youtube.com/watch?v=oM1LoVSacss)

This plugin provides food bloggers with the ability to add a nutrition facts label to their recipe post(s).

This plugin provides image download option or short-codes as possible ways of sharing nutritive insights. It also provides an update facility that adds a nutrition facts label to already existing recipe posts.

Big thanks to the guys at nutritionix for sharing their [javascript nutrition label](https://github.com/nutritionix/nutrition-label) which we have tweaked and used here.  

We at [www.globalfoodbook.com](http://www.globalfoodbook.com) are open source and agile proponents. We have open sourced this plugin on [github](https://github.com/globalfoodbook/nutrition-facts-label) and will continue to improve this.

We appreciate the help we have received from using other plugins and would like to contribute back to this awesome Wordpress community at every chance possible.

At the moment we are working on improving our algorithms on the backend and would like it if you could join us.

We would love to hear from you on ways this can be improved, give us a shout via the our website or via email (we [at] globalfoodbook.com).

Thanks and Keep pushing

### How to Use this Nutrition Label?
Login into your Wordpress account.
Scroll down to the ""Ingredients Section"" and list the Ingredients.
Press ""Generate Label"" on the Nutrition Facts Label Generator.
The nutrition facts are automatically generated for you.
N:B List the ingredients individually including the quantities.

### How to Include Nutrition Label on Existing Recipes?
To include nutrition label on existing food recipes, simply press the ""Go"" button for automatic generation of the nutrition label.
For any unsuccessful updates, make sure that the ingredients are placed line by line and in each line they are without commas or fullstops.
Then press the ""Go"" button to generate label.


## Installation

1. Upload /nutrition-facts-label to the /wp-content/plugins directory
2. Activate the plugin through the Plugins menu in WordPress

## Frequently Asked Questions

### How do I use this Nutrition Label ?
Login into your Wordpress account.
Scroll down to the ""Ingredients Section"" and list the Ingredients.
Press ""Generate Label"" on the Nutrition Facts Label Generator.
The nutrition facts are automatically generated for you.
N:B List the ingredients individually including the quantities.

### How to Include Nutrition Label on Existing Recipes
To include nutrition label on existing food recipes, simply press the ""Go"" button for automatic generation of the nutrition label.
For the unsuccessful updates, make sure that the ingredients are placed line by line and in each line they are without commas or fullstops.
Then press the ""Go"" button.

## Screenshots

1. Generate Nutrition Facts Label
2. Update existing recipes.
3. Sample on the recipe page.

## Changelog

### 1.0
* Initial Release

### 1.1
* Fixes and Modifications
* Documentation

### 1.2
* Bump wordpress compatibile versions

### 1.5
* Add configrable NUT_API environment variable

## Upgrade Notice

### 1
* Initial Release

### 1.1
* Fixes and Modifications
* Documentation

### 1.2
* Bump wordpress compatibile versions

### 1.5
* Add configrable NUT_API environment variable

## Notes to developers

#### Contributing

If you would like to contribute to our suite of plugins, head on over to [Global Food Book Labs](https://github.com/globalfoodbook). Feel free to fork and contribute back.

1. Fork it (https://github.com/globalfoodbook/nutrition-facts-label)
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create a new Pull Request

#### Adding Screenshots to the Wordpress repo

1. Rename each screenshot for each step like this. For step 1 the screenshot is screenshot-1.png.
2. The banner image is named as banner-772x250.png.
3. Use an SVN client like smart svn or rapid svn etc to upload these images to the /assets folder.
4. After this, commit and all will be picked up.

#### Pushing plugin to Wordpress svn repo

1. Clone this repo

          `git clone git@github.com:globalfoodbook/nutrition-facts-label.git`

2. cd path/to/nutrition-facts-label
3. vim .git/config
4. Add the code below:

          [svn-remote ""svn""]
                  url = http://plugins.svn.wordpress.org/[plugin_name]/trunk
                  fetch = :refs/remotes/git-svn

5. Then merge the master into the new branch:

          `git svn fetch svn`
          `git checkout -b svn git-svn`
          `git merge master`
          `git svn dcommit --username [Wordpress.org username]`

6. Then rebase that branch to the master, and you can dcommit from the master to svn

          `git checkout master`
          `git rebase svn`
          `git branch -d svn`
          `git svn dcommit --username [Wordpress.org username]`


# Contributors

* [Ikenna N. Okpala](http://ikennaokpala.com)
","nutrition facts label

tags food nutrition nutrition facts nutrition label foodcook recipe plugin shortcode global food book

requires at least 301

tested up to 44

stable tag 1

license gplv2 or later

license uri httpwwwgnuorglicensesgpl20html

this plugin provides food bloggers with the ability to add nutrition facts label to their recipe posts

 description

our motivation for releasing this plugin is based on a forum discussion on the foodcook theme support site

we felt that we already had some code that could serve as a basis for producing this plugin other food bloggers could benefit and possibly improve on

this plugin will work best on blogs that use foodcookhttpthemeforestnetitemfoodcookmultipurposefoodrecipewptheme4915630 theme

for food blogs that are not based on the foodcook theme it is possible to create a custom post typehttpswordpressorgpluginscustomposttypeui called recipe and an ingredients postmeta entry with key recipemetaingredients

we strongly recommended taking this route or using this plugin under the guidance of a wordpress developer

from a more technical side in order to generate a nutrition facts label you can either generate an image or generate a postmeta key gfbrecipemetanutritionfacts that holds json data for each recipe which is used to generate a nutrition label

this plugin also includes a meta box within the recipe post edit page in the admin area which automatically reads the postmeta entry with key recipemetaingredients which mainly contains your ingredients list and uses that to generate the nutrition label

in order to automatically display a nutrition label on the every recipe your wordpress developer should add this line of code to the best possible place


 php echo doshortcode ' embednutritionlabel ' 

it is also possible to embed this as a shortcode from the text editor

but based on the foodcook recipe page layout your options may appear limited hence why it is best that a wordpress developer helps out here


 embednutritionlabel

 how to video
nutrition facts label wordpress plugin videohttpimgyoutubecomviom1lovsacss0jpghttpswwwyoutubecomwatchvom1lovsacss

this plugin provides food bloggers with the ability to add a nutrition facts label to their recipe posts

this plugin provides image download option or shortcodes as possible ways of sharing nutritive insights it also provides an update facility that adds a nutrition facts label to already existing recipe posts

big thanks to the guys at nutritionix for sharing their javascript nutrition labelhttpsgithubcomnutritionixnutritionlabel which we have tweaked and used here 

we at wwwglobalfoodbookcomhttpwwwglobalfoodbookcom are open source and agile proponents we have open sourced this plugin on githubhttpsgithubcomglobalfoodbooknutritionfactslabel and will continue to improve this

we appreciate the help we have received from using other plugins and would like to contribute back to this awesome wordpress community at every chance possible

at the moment we are working on improving our algorithms on the backend and would like it if you could join us

we would love to hear from you on ways this can be improved give us a shout via the our website or via email we at globalfoodbookcom

thanks and keep pushing

 how to use this nutrition label
login into your wordpress account
scroll down to the ingredients section and list the ingredients
press generate label on the nutrition facts label generator
the nutrition facts are automatically generated for you
nb list the ingredients individually including the quantities

 how to include nutrition label on existing recipes
to include nutrition label on existing food recipes simply press the go button for automatic generation of the nutrition label
for any unsuccessful updates make sure that the ingredients are placed line by line and in each line they are without commas or fullstops
then press the go button to generate label


 installation

1 upload nutritionfactslabel to the wpcontentplugins directory
2 activate the plugin through the plugins menu in wordpress

 frequently asked questions

 how do i use this nutrition label 
login into your wordpress account
scroll down to the ingredients section and list the ingredients
press generate label on the nutrition facts label generator
the nutrition facts are automatically generated for you
nb list the ingredients individually including the quantities

 how to include nutrition label on existing recipes
to include nutrition label on existing food recipes simply press the go button for automatic generation of the nutrition label
for the unsuccessful updates make sure that the ingredients are placed line by line and in each line they are without commas or fullstops
then press the go button

 screenshots

1 generate nutrition facts label
2 update existing recipes
3 sample on the recipe page

 changelog

 10
 initial release

 11
 fixes and modifications
 documentation

 12
 bump wordpress compatibile versions

 15
 add configrable nutapi environment variable

 upgrade notice

 1
 initial release

 11
 fixes and modifications
 documentation

 12
 bump wordpress compatibile versions

 15
 add configrable nutapi environment variable

 notes to developers

 contributing

if you would like to contribute to our suite of plugins head on over to global food book labshttpsgithubcomglobalfoodbook feel free to fork and contribute back

1 fork it httpsgithubcomglobalfoodbooknutritionfactslabel
2 create your feature branch git checkout b mynewfeature
3 commit your changes git commit am ' add some feature ' 
4 push to the branch git push origin mynewfeature
5 create a new pull request

 adding screenshots to the wordpress repo

1 rename each screenshot for each step like this for step 1 the screenshot is screenshot1png
2 the banner image is named as banner772x250png
3 use an svn client like smart svn or rapid svn etc to upload these images to the assets folder
4 after this commit and all will be picked up

 pushing plugin to wordpress svn repo

1 clone this repo

 git clone gitgithubcomglobalfoodbooknutritionfactslabelgit

2 cd pathtonutritionfactslabel
3 vim gitconfig
4 add the code below

 svnremote svn
 url httppluginssvnwordpressorgpluginnametrunk
 fetch refsremotesgitsvn

5 then merge the master into the new branch

 git svn fetch svn
 git checkout b svn gitsvn
 git merge master
 git svn dcommit username wordpressorg username

6 then rebase that branch to the master and you can dcommit from the master to svn

 git checkout master
 git rebase svn
 git branch d svn
 git svn dcommit username wordpressorg username


 contributors

 ikenna n okpalahttpikennaokpalacom",nutrit fact label tag food nutrit nutrit fact nutrit label foodcook recip plugin shortcod global food book requir least 301 test 44 stabl tag 1 licens gplv2 later licens uri httpwwwgnuorglicensesgpl20html thi plugin provid food blogger abil add nutrit fact label recip post descript motiv releas thi plugin base forum discuss foodcook theme support site felt alreadi code could serv basi produc thi plugin food blogger could benefit possibl improv thi plugin work best blog use foodcookhttpthemeforestnetitemfoodcookmultipurposefoodrecipewptheme4915630 theme food blog base foodcook theme possibl creat custom post typehttpswordpressorgpluginscustomposttypeui call recip ingredi postmeta entri key recipemetaingredi strongli recommend take thi rout use thi plugin guidanc wordpress develop technic side order gener nutrit fact label either gener imag gener postmeta key gfbrecipemetanutritionfact hold json data recip use gener nutrit label thi plugin also includ meta box within recip post edit page admin area automat read postmeta entri key recipemetaingredi mainli contain ingredi list use gener nutrit label order automat display nutrit label everi recip wordpress develop add thi line code best possibl place php echo doshortcod ' embednutritionlabel ' also possibl emb thi shortcod text editor base foodcook recip page layout option may appear limit henc whi best wordpress develop help embednutritionlabel video nutrit fact label wordpress plugin videohttpimgyoutubecomviom1lovsacss0jpghttpswwwyoutubecomwatchvom1lovsacss thi plugin provid food blogger abil add nutrit fact label recip post thi plugin provid imag download option shortcod possibl way share nutrit insight also provid updat facil add nutrit fact label alreadi exist recip post big thank guy nutritionix share javascript nutrit labelhttpsgithubcomnutritionixnutritionlabel tweak use wwwglobalfoodbookcomhttpwwwglobalfoodbookcom open sourc agil propon open sourc thi plugin githubhttpsgithubcomglobalfoodbooknutritionfactslabel continu improv thi appreci help receiv use plugin would like contribut back thi awesom wordpress commun everi chanc possibl moment work improv algorithm backend would like could join us would love hear way thi improv give us shout via websit via email globalfoodbookcom thank keep push use thi nutrit label login wordpress account scroll ingredi section list ingredi press gener label nutrit fact label gener nutrit fact automat gener nb list ingredi individu includ quantiti includ nutrit label exist recip includ nutrit label exist food recip simpli press go button automat gener nutrit label ani unsuccess updat make sure ingredi place line line line without comma fullstop press go button gener label instal 1 upload nutritionfactslabel wpcontentplugin directori 2 activ plugin plugin menu wordpress frequent ask question use thi nutrit label login wordpress account scroll ingredi section list ingredi press gener label nutrit fact label gener nutrit fact automat gener nb list ingredi individu includ quantiti includ nutrit label exist recip includ nutrit label exist food recip simpli press go button automat gener nutrit label unsuccess updat make sure ingredi place line line line without comma fullstop press go button screenshot 1 gener nutrit fact label 2 updat exist recip 3 sampl recip page changelog 10 initi releas 11 fix modif document 12 bump wordpress compatibil version 15 add configr nutapi environ variabl upgrad notic 1 initi releas 11 fix modif document 12 bump wordpress compatibil version 15 add configr nutapi environ variabl note develop contribut would like contribut suit plugin head global food book labshttpsgithubcomglobalfoodbook feel free fork contribut back 1 fork httpsgithubcomglobalfoodbooknutritionfactslabel 2 creat featur branch git checkout b mynewfeatur 3 commit chang git commit ' add featur ' 4 push branch git push origin mynewfeatur 5 creat new pull request ad screenshot wordpress repo 1 renam screenshot step like thi step 1 screenshot screenshot1png 2 banner imag name banner772x250png 3 use svn client like smart svn rapid svn etc upload imag asset folder 4 thi commit pick push plugin wordpress svn repo 1 clone thi repo git clone gitgithubcomglobalfoodbooknutritionfactslabelgit 2 cd pathtonutritionfactslabel 3 vim gitconfig 4 add code svnremot svn url httppluginssvnwordpressorgpluginnametrunk fetch refsremotesgitsvn 5 merg master new branch git svn fetch svn git checkout b svn gitsvn git merg master git svn dcommit usernam wordpressorg usernam 6 rebas branch master dcommit master svn git checkout master git rebas svn git branch svn git svn dcommit usernam wordpressorg usernam contributor ikenna n okpalahttpikennaokpalacom,nutrition fact label tag food nutrition nutrition fact nutrition label foodcook recipe plugin shortcode global food book requires least 301 tested 44 stable tag 1 license gplv2 later license uri httpwwwgnuorglicensesgpl20html plugin provides food blogger ability add nutrition fact label recipe post description motivation releasing plugin based forum discussion foodcook theme support site felt already code could serve basis producing plugin food blogger could benefit possibly improve plugin work best blog use foodcookhttpthemeforestnetitemfoodcookmultipurposefoodrecipewptheme4915630 theme food blog based foodcook theme possible create custom post typehttpswordpressorgpluginscustomposttypeui called recipe ingredient postmeta entry key recipemetaingredients strongly recommended taking route using plugin guidance wordpress developer technical side order generate nutrition fact label either generate image generate postmeta key gfbrecipemetanutritionfacts hold json data recipe used generate nutrition label plugin also includes meta box within recipe post edit page admin area automatically read postmeta entry key recipemetaingredients mainly contains ingredient list us generate nutrition label order automatically display nutrition label every recipe wordpress developer add line code best possible place php echo doshortcode ' embednutritionlabel ' also possible embed shortcode text editor based foodcook recipe page layout option may appear limited hence best wordpress developer help embednutritionlabel video nutrition fact label wordpress plugin videohttpimgyoutubecomviom1lovsacss0jpghttpswwwyoutubecomwatchvom1lovsacss plugin provides food blogger ability add nutrition fact label recipe post plugin provides image download option shortcodes possible way sharing nutritive insight also provides update facility add nutrition fact label already existing recipe post big thanks guy nutritionix sharing javascript nutrition labelhttpsgithubcomnutritionixnutritionlabel tweaked used wwwglobalfoodbookcomhttpwwwglobalfoodbookcom open source agile proponent open sourced plugin githubhttpsgithubcomglobalfoodbooknutritionfactslabel continue improve appreciate help received using plugins would like contribute back awesome wordpress community every chance possible moment working improving algorithm backend would like could join u would love hear way improved give u shout via website via email globalfoodbookcom thanks keep pushing use nutrition label login wordpress account scroll ingredient section list ingredient press generate label nutrition fact label generator nutrition fact automatically generated nb list ingredient individually including quantity include nutrition label existing recipe include nutrition label existing food recipe simply press go button automatic generation nutrition label unsuccessful update make sure ingredient placed line line line without comma fullstops press go button generate label installation 1 upload nutritionfactslabel wpcontentplugins directory 2 activate plugin plugins menu wordpress frequently asked question use nutrition label login wordpress account scroll ingredient section list ingredient press generate label nutrition fact label generator nutrition fact automatically generated nb list ingredient individually including quantity include nutrition label existing recipe include nutrition label existing food recipe simply press go button automatic generation nutrition label unsuccessful update make sure ingredient placed line line line without comma fullstops press go button screenshots 1 generate nutrition fact label 2 update existing recipe 3 sample recipe page changelog 10 initial release 11 fix modification documentation 12 bump wordpress compatibile version 15 add configrable nutapi environment variable upgrade notice 1 initial release 11 fix modification documentation 12 bump wordpress compatibile version 15 add configrable nutapi environment variable note developer contributing would like contribute suite plugins head global food book labshttpsgithubcomglobalfoodbook feel free fork contribute back 1 fork httpsgithubcomglobalfoodbooknutritionfactslabel 2 create feature branch git checkout b mynewfeature 3 commit change git commit ' add feature ' 4 push branch git push origin mynewfeature 5 create new pull request adding screenshots wordpress repo 1 rename screenshot step like step 1 screenshot screenshot1png 2 banner image named banner772x250png 3 use svn client like smart svn rapid svn etc upload image asset folder 4 commit picked pushing plugin wordpress svn repo 1 clone repo git clone gitgithubcomglobalfoodbooknutritionfactslabelgit 2 cd pathtonutritionfactslabel 3 vim gitconfig 4 add code svnremote svn url httppluginssvnwordpressorgpluginnametrunk fetch refsremotesgitsvn 5 merge master new branch git svn fetch svn git checkout b svn gitsvn git merge master git svn dcommit username wordpressorg username 6 rebase branch master dcommit master svn git checkout master git rebase svn git branch svn git svn dcommit username wordpressorg username contributor ikenna n okpalahttpikennaokpalacom
Java,"Nutrition Tracker Initial Loadout.

- Uses the USDA - SR25 nutritional database. 
- Uses FMDB for direct connection to SQLITE
- Searchable Nutrition database
- Calculable nutrition amounts

TODO:
- macro ratio calculation
- timers, reminders for feed window.
- recommendation model 
- daily values tracking 
","nutrition tracker initial loadout

 uses the usda sr25 nutritional database 
 uses fmdb for direct connection to sqlite
 searchable nutrition database
 calculable nutrition amounts

todo
 macro ratio calculation
 timers reminders for feed window
 recommendation model 
 daily values tracking",nutrit tracker initi loadout use usda sr25 nutrit databas use fmdb direct connect sqlite searchabl nutrit databas calcul nutrit amount todo macro ratio calcul timer remind feed window recommend model daili valu track,nutrition tracker initial loadout us usda sr25 nutritional database us fmdb direct connection sqlite searchable nutrition database calculable nutrition amount todo macro ratio calculation timer reminder feed window recommendation model daily value tracking
Python,"# Recipe-Recommendation

## Introduction
People always face same problem in their daily life: What to eat and how to eat healthily. What’s more, people who love cooking usually don’t know how to start when facing too many ingredient pairings. Our Recipe Recommendation System gives users nutritious recipe choices which also satisfy their personal taste. Our target users are busy students and professionals who want to eat healthy. Our goal is to help people with their meal decision and bring up their health consciousness.

## Data
[Yummly’s API](https://developer.yummly.com/) <br />
[Open Food Facts Dataset](https://www.kaggle.com/openfoodfacts/world-food-facts) <br />
[Ingredient and Compound matching](https://www.nature.com/articles/srep00196) <br />
Estimated Energy Requirements Diagram

## Project Architecture
![alt tag](https://raw.githubusercontent.com/Flourishlove/Recipe-Recommendation/master/Architecture.png) <br />
1. Combine two original dataset into one big recipe-compound matrix. 
2. With recipe-compound data on hand, we use two machine learning algorithms, hierarchical clustering and DBSCAN, to cluster flavor of recipes based on their compound. In final implementation, we use DBSCAN because it discard those isolated recipes and make recipe distribution better.
3. Use information of user’s body condition to further filter out the recipes to recommend.


## Installation
### 1. Running locally
In command prompt, enter code folder and install all necessary python libraries:
```
$ cd code
$ sudo pip install -r requirements.txt
$ python application.py
```
Then you will see something like
```
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger pin code: 103-344-409
```
Which means you run our demo successfully. Go to you browse and enter [localhost:5000](http://127.0.0.1:5000/), you will see our webapplication.

If you don’t want to install all the libraries and packages in your system, you can use virtualenv to setup virtual environment:
```
$ sudo pip install virtualenv
$ cd code
$ virtualenv venv
$ . venv/bin/activate  (For Windows user: $ venv\Scripts\activate)
$ pip install -r requirements.txt
$ python application.py
```
This option provides you with a virtual environment in folder venv. Whenever you want to run the demo, you can just use command $ . venv/bin/activate. After testing demo, use
```
$ deactivate
```
to exist virtual environment.

## Interface 
There are two pages of our webapp. <br />
Choose flavor and enter body condition in the first page.
![alt tag](https://raw.githubusercontent.com/Flourishlove/Recipe-Recommendation/master/page1.png) <br />

Display recommendation on the second page.
![alt tag](https://raw.githubusercontent.com/Flourishlove/Recipe-Recommendation/master/page2.png) <br />

## Dependencies
Flask <br />
scikit-learn <br />

## Solutions to some problems
[Create and Connect to a MySQL Database with Amazon RDS](https://aws.amazon.com/getting-started/tutorials/create-mysql-db/) <br />
[Deploy a flask application on AWS](https://medium.com/@rodkey/deploying-a-flask-application-on-aws-a72daba6bb80) <br />
[Import CSV file into MySQL](https://dev.mysql.com/doc/workbench/en/wb-admin-export-import-table.html) <br />


### SQL to load CSV data in workbench for escapsing comma:
```
USE recipe;
LOAD DATA LOCAL INFILE '/Users/meteor/Gatech/Recipe-Recommendation/cleaned_data/recipe_final.csv' INTO TABLE recipe_info FIELDS TERMINATED BY ',' ENCLOSED BY '""' LINES TERMINATED BY '\n';
```
","reciperecommendation

 introduction
people always face same problem in their daily life what to eat and how to eat healthily whats more people who love cooking usually dont know how to start when facing too many ingredient pairings our recipe recommendation system gives users nutritious recipe choices which also satisfy their personal taste our target users are busy students and professionals who want to eat healthy our goal is to help people with their meal decision and bring up their health consciousness

 data
yummlys apihttpsdeveloperyummlycom br 
open food facts datasethttpswwwkagglecomopenfoodfactsworldfoodfacts br 
ingredient and compound matchinghttpswwwnaturecomarticlessrep00196 br 
estimated energy requirements diagram

 project architecture
alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterarchitecturepng br 
1 combine two original dataset into one big recipecompound matrix 
2 with recipecompound data on hand we use two machine learning algorithms hierarchical clustering and dbscan to cluster flavor of recipes based on their compound in final implementation we use dbscan because it discard those isolated recipes and make recipe distribution better
3 use information of users body condition to further filter out the recipes to recommend


 installation
 1 running locally
in command prompt enter code folder and install all necessary python libraries

 cd code
 sudo pip install r requirementstxt
 python applicationpy

then you will see something like

 running on http1270015000 press ctrlc to quit
 restarting with stat
 debugger is active
 debugger pin code 103344409

which means you run our demo successfully go to you browse and enter localhost5000http1270015000 you will see our webapplication

if you dont want to install all the libraries and packages in your system you can use virtualenv to setup virtual environment

 sudo pip install virtualenv
 cd code
 virtualenv venv
 venvbinactivate for windows user venvscriptsactivate
 pip install r requirementstxt
 python applicationpy

this option provides you with a virtual environment in folder venv whenever you want to run the demo you can just use command venvbinactivate after testing demo use

 deactivate

to exist virtual environment

 interface 
there are two pages of our webapp br 
choose flavor and enter body condition in the first page
alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterpage1png br 

display recommendation on the second page
alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterpage2png br 

 dependencies
flask br 
scikitlearn br 

 solutions to some problems
create and connect to a mysql database with amazon rdshttpsawsamazoncomgettingstartedtutorialscreatemysqldb br 
deploy a flask application on awshttpsmediumcomrodkeydeployingaflaskapplicationonawsa72daba6bb80 br 
import csv file into mysqlhttpsdevmysqlcomdocworkbenchenwbadminexportimporttablehtml br 


 sql to load csv data in workbench for escapsing comma

use recipe
load data local infile ' usersmeteorgatechreciperecommendationcleaneddatarecipefinalcsv ' into table recipeinfo fields terminated by ' ' enclosed by ' ' lines terminated by ' n '",reciperecommend introduct peopl alway face problem daili life eat eat healthili peopl love cook usual dont know start face mani ingredi pair recip recommend system give user nutriti recip choic also satisfi person tast target user busi student profession want eat healthi goal help peopl meal decis bring health conscious data yummli apihttpsdeveloperyummlycom br open food fact datasethttpswwwkagglecomopenfoodfactsworldfoodfact br ingredi compound matchinghttpswwwnaturecomarticlessrep00196 br estim energi requir diagram project architectur alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterarchitecturepng br 1 combin two origin dataset one big recipecompound matrix 2 recipecompound data hand use two machin learn algorithm hierarch cluster dbscan cluster flavor recip base compound final implement use dbscan becaus discard isol recip make recip distribut better 3 use inform user bodi condit filter recip recommend instal 1 run local command prompt enter code folder instal necessari python librari cd code sudo pip instal r requirementstxt python applicationpi see someth like run http1270015000 press ctrlc quit restart stat debugg activ debugg pin code 103344409 mean run demo success go brows enter localhost5000http1270015000 see webappl dont want instal librari packag system use virtualenv setup virtual environ sudo pip instal virtualenv cd code virtualenv venv venvbinactiv window user venvscriptsactiv pip instal r requirementstxt python applicationpi thi option provid virtual environ folder venv whenev want run demo use command venvbinactiv test demo use deactiv exist virtual environ interfac two page webapp br choos flavor enter bodi condit first page alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterpage1png br display recommend second page alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterpage2png br depend flask br scikitlearn br solut problem creat connect mysql databas amazon rdshttpsawsamazoncomgettingstartedtutorialscreatemysqldb br deploy flask applic awshttpsmediumcomrodkeydeployingaflaskapplicationonawsa72daba6bb80 br import csv file mysqlhttpsdevmysqlcomdocworkbenchenwbadminexportimporttablehtml br sql load csv data workbench escaps comma use recip load data local infil ' usersmeteorgatechreciperecommendationcleaneddatarecipefinalcsv ' tabl recipeinfo field termin ' ' enclos ' ' line termin ' n ',reciperecommendation introduction people always face problem daily life eat eat healthily whats people love cooking usually dont know start facing many ingredient pairing recipe recommendation system give user nutritious recipe choice also satisfy personal taste target user busy student professional want eat healthy goal help people meal decision bring health consciousness data yummlys apihttpsdeveloperyummlycom br open food fact datasethttpswwwkagglecomopenfoodfactsworldfoodfacts br ingredient compound matchinghttpswwwnaturecomarticlessrep00196 br estimated energy requirement diagram project architecture alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterarchitecturepng br 1 combine two original dataset one big recipecompound matrix 2 recipecompound data hand use two machine learning algorithm hierarchical clustering dbscan cluster flavor recipe based compound final implementation use dbscan discard isolated recipe make recipe distribution better 3 use information user body condition filter recipe recommend installation 1 running locally command prompt enter code folder install necessary python library cd code sudo pip install r requirementstxt python applicationpy see something like running http1270015000 press ctrlc quit restarting stat debugger active debugger pin code 103344409 mean run demo successfully go browse enter localhost5000http1270015000 see webapplication dont want install library package system use virtualenv setup virtual environment sudo pip install virtualenv cd code virtualenv venv venvbinactivate window user venvscriptsactivate pip install r requirementstxt python applicationpy option provides virtual environment folder venv whenever want run demo use command venvbinactivate testing demo use deactivate exist virtual environment interface two page webapp br choose flavor enter body condition first page alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterpage1png br display recommendation second page alt taghttpsrawgithubusercontentcomflourishlovereciperecommendationmasterpage2png br dependency flask br scikitlearn br solution problem create connect mysql database amazon rdshttpsawsamazoncomgettingstartedtutorialscreatemysqldb br deploy flask application awshttpsmediumcomrodkeydeployingaflaskapplicationonawsa72daba6bb80 br import csv file mysqlhttpsdevmysqlcomdocworkbenchenwbadminexportimporttablehtml br sql load csv data workbench escapsing comma use recipe load data local infile ' usersmeteorgatechreciperecommendationcleaneddatarecipefinalcsv ' table recipeinfo field terminated ' ' enclosed ' ' line terminated ' n '
JavaScript,"# Ping An Nutrition Doctor - Mobile Client

During the Microsoft One Week Hackathon, we [Microsoft] collaborated with Ping An to build Nutrition Doctor. Nutrition Doctor is an application that allows users to take a photo of a food item whereupon the app will identify the food item and present the user with nutritional information such as calories, fat, etc. 

## Architecture

![architecture](https://raw.githubusercontent.com/CatalystCode/NutritionDoctorApi/master/docs/architecture.png)

----

![call graph](https://raw.githubusercontent.com/CatalystCode/NutritionDoctorApi/master/docs/call_graph.png)

Each component is separated into its own Git repository:

* [Mobile Client](https://github.com/CatalystCode/NutritionDoctor)
* [Web Api](https://github.com/CatalystCode/NutritionDoctorApi) 
* [Functions](https://github.com/CatalystCode/NutritionDoctorFunctions)
* [Image Classifier](https://github.com/CatalystCode/NutritionDoctorImageClassifier)

## Getting Started

The Mobile Client is a react-native application that communicates with a REST API to persist and read user information.

1. [Install Yarn](https://yarnpkg.com/en/docs/install)
2. `npm install -g react-native-cli`
3. `git clone git@github.com:CatalystCode/NutritionDoctor.git`
4. `cd NutritionDoctor`
5. `yarn install`
6. `react-native run-ios`
","ping an nutrition doctor mobile client

during the microsoft one week hackathon we microsoft collaborated with ping an to build nutrition doctor nutrition doctor is an application that allows users to take a photo of a food item whereupon the app will identify the food item and present the user with nutritional information such as calories fat etc 

 architecture

architecturehttpsrawgithubusercontentcomcatalystcodenutritiondoctorapimasterdocsarchitecturepng



call graphhttpsrawgithubusercontentcomcatalystcodenutritiondoctorapimasterdocscallgraphpng

each component is separated into its own git repository

 mobile clienthttpsgithubcomcatalystcodenutritiondoctor
 web apihttpsgithubcomcatalystcodenutritiondoctorapi 
 functionshttpsgithubcomcatalystcodenutritiondoctorfunctions
 image classifierhttpsgithubcomcatalystcodenutritiondoctorimageclassifier

 getting started

the mobile client is a reactnative application that communicates with a rest api to persist and read user information

1 install yarnhttpsyarnpkgcomendocsinstall
2 npm install g reactnativecli
3 git clone gitgithubcomcatalystcodenutritiondoctorgit
4 cd nutritiondoctor
5 yarn install
6 reactnative runios",ping nutrit doctor mobil client dure microsoft one week hackathon microsoft collabor ping build nutrit doctor nutrit doctor applic allow user take photo food item whereupon app identifi food item present user nutrit inform calori fat etc architectur architecturehttpsrawgithubusercontentcomcatalystcodenutritiondoctorapimasterdocsarchitecturepng call graphhttpsrawgithubusercontentcomcatalystcodenutritiondoctorapimasterdocscallgraphpng compon separ git repositori mobil clienthttpsgithubcomcatalystcodenutritiondoctor web apihttpsgithubcomcatalystcodenutritiondoctorapi functionshttpsgithubcomcatalystcodenutritiondoctorfunct imag classifierhttpsgithubcomcatalystcodenutritiondoctorimageclassifi get start mobil client reactn applic commun rest api persist read user inform 1 instal yarnhttpsyarnpkgcomendocsinstal 2 npm instal g reactnativecli 3 git clone gitgithubcomcatalystcodenutritiondoctorgit 4 cd nutritiondoctor 5 yarn instal 6 reactn runio,ping nutrition doctor mobile client microsoft one week hackathon microsoft collaborated ping build nutrition doctor nutrition doctor application allows user take photo food item whereupon app identify food item present user nutritional information calorie fat etc architecture architecturehttpsrawgithubusercontentcomcatalystcodenutritiondoctorapimasterdocsarchitecturepng call graphhttpsrawgithubusercontentcomcatalystcodenutritiondoctorapimasterdocscallgraphpng component separated git repository mobile clienthttpsgithubcomcatalystcodenutritiondoctor web apihttpsgithubcomcatalystcodenutritiondoctorapi functionshttpsgithubcomcatalystcodenutritiondoctorfunctions image classifierhttpsgithubcomcatalystcodenutritiondoctorimageclassifier getting started mobile client reactnative application communicates rest api persist read user information 1 install yarnhttpsyarnpkgcomendocsinstall 2 npm install g reactnativecli 3 git clone gitgithubcomcatalystcodenutritiondoctorgit 4 cd nutritiondoctor 5 yarn install 6 reactnative runios
Ruby,"# Nutritionix

TODO: Write a gem description

## Installation

Add this line to your application's Gemfile:

    gem 'nutritionix'

And then execute:

    $ bundle

Or install it yourself as:

    $ gem install nutritionix

## Usage

* For NXQL Supported search:

        app_id = '<YOUR_APP_ID>'
        app_key = '<YOUR_APP_KEY>'
        provider = Nutritionix::Api_1_1.new(app_id, app_key)
        search_params = {
          offset: 0,
          limit: 50,
          fields: ['brand_id', 'brand_name', 'item_id', 'item_name', 'nf_calories'],
          query: 'potato'
        }
        results_json = provider.nxql_search(search_params)
        puts ""Results: #{results_json}""

* Note:
  * There is a standalone test script **/script/test_api_1_1.rb** available
    which can be readily used for testing.You only need to replace &lt;YOUR_APP_ID&gt;
    and &lt;YOUR_APP_KEY&gt; with your nutritionix app credentials.

  * Logs generated can be found at default location &lt;HOME_DIRECTORY&gt;/nutritionix_api_logs.txt

## Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request
","nutritionix

todo write a gem description

 installation

add this line to your application ' s gemfile

 gem ' nutritionix ' 

and then execute

 bundle

or install it yourself as

 gem install nutritionix

 usage

 for nxql supported search

 appid ' yourappid ' 
 appkey ' yourappkey ' 
 provider nutritionixapi11newappid appkey
 searchparams 
 offset 0
 limit 50
 fields ' brandid ' ' brandname ' ' itemid ' ' itemname ' ' nfcalories ' 
 query ' potato ' 
 
 resultsjson providernxqlsearchsearchparams
 puts results resultsjson

 note
 there is a standalone test script scripttestapi11rb available
 which can be readily used for testingyou only need to replace ltyourappidgt
 and ltyourappkeygt with your nutritionix app credentials

 logs generated can be found at default location lthomedirectorygtnutritionixapilogstxt

 contributing

1 fork it
2 create your feature branch git checkout b mynewfeature
3 commit your changes git commit am ' add some feature ' 
4 push to the branch git push origin mynewfeature
5 create new pull request",nutritionix todo write gem descript instal add thi line applic ' gemfil gem ' nutritionix ' execut bundl instal gem instal nutritionix usag nxql support search appid ' yourappid ' appkey ' yourappkey ' provid nutritionixapi11newappid appkey searchparam offset 0 limit 50 field ' brandid ' ' brandnam ' ' itemid ' ' itemnam ' ' nfcalori ' queri ' potato ' resultsjson providernxqlsearchsearchparam put result resultsjson note standalon test script scripttestapi11rb avail readili use testingy onli need replac ltyourappidgt ltyourappkeygt nutritionix app credenti log gener found default locat lthomedirectorygtnutritionixapilogstxt contribut 1 fork 2 creat featur branch git checkout b mynewfeatur 3 commit chang git commit ' add featur ' 4 push branch git push origin mynewfeatur 5 creat new pull request,nutritionix todo write gem description installation add line application ' gemfile gem ' nutritionix ' execute bundle install gem install nutritionix usage nxql supported search appid ' yourappid ' appkey ' yourappkey ' provider nutritionixapi11newappid appkey searchparams offset 0 limit 50 field ' brandid ' ' brandname ' ' itemid ' ' itemname ' ' nfcalories ' query ' potato ' resultsjson providernxqlsearchsearchparams put result resultsjson note standalone test script scripttestapi11rb available readily used testingyou need replace ltyourappidgt ltyourappkeygt nutritionix app credential log generated found default location lthomedirectorygtnutritionixapilogstxt contributing 1 fork 2 create feature branch git checkout b mynewfeature 3 commit change git commit ' add feature ' 4 push branch git push origin mynewfeature 5 create new pull request
Python,"# usda-fns-ingestor

An experiment in ingesting data for the USDA's Food and Nutrition Service
using [ReVAL](https://github.com/18F/ReVAL).

Use [the webform](https://usda-fns-ingestor.app.cloud.gov/data_ingest/api/validate/) 
to interactively upload files and see
validation results, or the [API](api.md) to simply see the validation results.

## Development

To start development, clone this repository:

	git clone https://github.com/18F/usda-fns-ingest.git

You will need to install [Python 3.6](http://www.python.org/)

Install development dependencies using [Pipenv](http://docs.python-guide.org/en/latest/dev/virtualenvs/):

	pipenv install --dev

This tool makes use of the [ReVAL](https://github.com/18F/ReVAL) tool, if you also are developing that tool at the same time, you will need to have a local copy of it.  You can then install and point to the local copy so the changes you make there will reflect on this tool immediately.

	pipenv install -d -e <path to ReVAL>

Copy `.env_sample` to `.env` and update the variables according to cloud.gov `env`.

You can then activate the Python virtual environment:

	pipenv shell

## Deploying locally 

You'll need to install [PostgreSQL](https://www.postgresql.org/), then

    createdb usda_fns_ingestor
    cd usda_fns_ingestor
    python manage.py runserver
    
You can use other PostgreSQL configurations (database name, user, 
require a password, etc); just `export DATABASE_URL=<database url>`.
See [dj-database-url](https://github.com/kennethreitz/dj-database-url)

Then you can access the system at 
[http://localhost:8000/data_ingest/](http://localhost:8000/data_ingest/)

## Deploying to cloud.gov 

Once [logged into a cloud.gov workspace](https://cloud.gov/docs/apps/deployment/),
you can 

    cd usda_fns_ingestor
    cf create-service aws-rds shared-psql usda-fns-ingestor-db
    cf push

Other CloudFoundry platforms and Heroku should work similarly,
though different plans may be available (see `cf marketplace`)

## Contributing

See [CONTRIBUTING](CONTRIBUTING.md) for additional information.

## Public domain

This project is in the worldwide [public domain](LICENSE.md). As stated in [CONTRIBUTING](CONTRIBUTING.md):

> This project is in the public domain within the United States, and copyright and related rights in the work worldwide are waived through the [CC0 1.0 Universal public domain dedication](https://creativecommons.org/publicdomain/zero/1.0/).
>
> All contributions to this project will be released under the CC0 dedication. By submitting a pull request, you are agreeing to comply with this waiver of copyright interest.
","usdafnsingestor

an experiment in ingesting data for the usda ' s food and nutrition service
using revalhttpsgithubcom18freval

use the webformhttpsusdafnsingestorappcloudgovdataingestapivalidate 
to interactively upload files and see
validation results or the apiapimd to simply see the validation results

 development

to start development clone this repository

 &#9; git clone httpsgithubcom18fusdafnsingestgit

you will need to install python 36httpwwwpythonorg

install development dependencies using pipenvhttpdocspythonguideorgenlatestdevvirtualenvs

 &#9; pipenv install dev

this tool makes use of the revalhttpsgithubcom18freval tool if you also are developing that tool at the same time you will need to have a local copy of it you can then install and point to the local copy so the changes you make there will reflect on this tool immediately

 &#9; pipenv install d e path to reval

copy envsample to env and update the variables according to cloudgov env

you can then activate the python virtual environment

 &#9; pipenv shell

 deploying locally 

you ' ll need to install postgresqlhttpswwwpostgresqlorg then

 createdb usdafnsingestor
 cd usdafnsingestor
 python managepy runserver
 
you can use other postgresql configurations database name user 
require a password etc just export databaseurldatabase url
see djdatabaseurlhttpsgithubcomkennethreitzdjdatabaseurl

then you can access the system at 
httplocalhost8000dataingesthttplocalhost8000dataingest

 deploying to cloudgov 

once logged into a cloudgov workspacehttpscloudgovdocsappsdeployment
you can 

 cd usdafnsingestor
 cf createservice awsrds sharedpsql usdafnsingestordb
 cf push

other cloudfoundry platforms and heroku should work similarly
though different plans may be available see cf marketplace

 contributing

see contributingcontributingmd for additional information

 public domain

this project is in the worldwide public domainlicensemd as stated in contributingcontributingmd

 this project is in the public domain within the united states and copyright and related rights in the work worldwide are waived through the cc0 10 universal public domain dedicationhttpscreativecommonsorgpublicdomainzero10

 all contributions to this project will be released under the cc0 dedication by submitting a pull request you are agreeing to comply with this waiver of copyright interest",usdafnsingestor experi ingest data usda ' food nutrit servic use revalhttpsgithubcom18frev use webformhttpsusdafnsingestorappcloudgovdataingestapivalid interact upload file see valid result apiapimd simpli see valid result develop start develop clone thi repositori &#9; git clone httpsgithubcom18fusdafnsingestgit need instal python 36httpwwwpythonorg instal develop depend use pipenvhttpdocspythonguideorgenlatestdevvirtualenv &#9; pipenv instal dev thi tool make use revalhttpsgithubcom18frev tool also develop tool time need local copi instal point local copi chang make reflect thi tool immedi &#9; pipenv instal e path reval copi envsampl env updat variabl accord cloudgov env activ python virtual environ &#9; pipenv shell deploy local ' need instal postgresqlhttpswwwpostgresqlorg createdb usdafnsingestor cd usdafnsingestor python managepi runserv use postgresql configur databas name user requir password etc export databaseurldatabas url see djdatabaseurlhttpsgithubcomkennethreitzdjdatabaseurl access system httplocalhost8000dataingesthttplocalhost8000dataingest deploy cloudgov onc log cloudgov workspacehttpscloudgovdocsappsdeploy cd usdafnsingestor cf createservic awsrd sharedpsql usdafnsingestordb cf push cloudfoundri platform heroku work similarli though differ plan may avail see cf marketplac contribut see contributingcontributingmd addit inform public domain thi project worldwid public domainlicensemd state contributingcontributingmd thi project public domain within unit state copyright relat right work worldwid waiv cc0 10 univers public domain dedicationhttpscreativecommonsorgpublicdomainzero10 contribut thi project releas cc0 dedic submit pull request agre compli thi waiver copyright interest,usdafnsingestor experiment ingesting data usda ' food nutrition service using revalhttpsgithubcom18freval use webformhttpsusdafnsingestorappcloudgovdataingestapivalidate interactively upload file see validation result apiapimd simply see validation result development start development clone repository &#9; git clone httpsgithubcom18fusdafnsingestgit need install python 36httpwwwpythonorg install development dependency using pipenvhttpdocspythonguideorgenlatestdevvirtualenvs &#9; pipenv install dev tool make use revalhttpsgithubcom18freval tool also developing tool time need local copy install point local copy change make reflect tool immediately &#9; pipenv install e path reval copy envsample env update variable according cloudgov env activate python virtual environment &#9; pipenv shell deploying locally ' need install postgresqlhttpswwwpostgresqlorg createdb usdafnsingestor cd usdafnsingestor python managepy runserver use postgresql configuration database name user require password etc export databaseurldatabase url see djdatabaseurlhttpsgithubcomkennethreitzdjdatabaseurl access system httplocalhost8000dataingesthttplocalhost8000dataingest deploying cloudgov logged cloudgov workspacehttpscloudgovdocsappsdeployment cd usdafnsingestor cf createservice awsrds sharedpsql usdafnsingestordb cf push cloudfoundry platform heroku work similarly though different plan may available see cf marketplace contributing see contributingcontributingmd additional information public domain project worldwide public domainlicensemd stated contributingcontributingmd project public domain within united state copyright related right work worldwide waived cc0 10 universal public domain dedicationhttpscreativecommonsorgpublicdomainzero10 contribution project released cc0 dedication submitting pull request agreeing comply waiver copyright interest
R,"# Exposing Hidden Hunger, 2015 HelpMeViz Vizathon

Datasets made available to participants of the [2015 Vizathon](http://helpmeviz.com/2015/05/07/vizathon-with-bread-for-the-world-institute/) through IFPRI/HarvestChoice:

1. **HarvestChoice ""CELL5M"" Indicators**  
   Spatial datasets for sub-Saharan Africa at 10km resolution available for download using [MAPPR](http://apps.harvestchoice.org/mappr) or [TABLR](http://apps.harvestchoice.org/tablr) tools.

2. **Malawi, USAID/Africa RISING Baseline Survey, 2014**  
   Variables constructed from the 2014 ARBES. See [readme](./Malawi/) for a list of variables included in the CSV file provided.

3. **Ethiopia, Household Consumption and Expenditure Survey, 2010/2011**  
   Variables constructed from the 2011 HCES. See [readme](./Ethiopia/) for a list of variables included in the CSV file provided.
","exposing hidden hunger 2015 helpmeviz vizathon

datasets made available to participants of the 2015 vizathonhttphelpmevizcom20150507vizathonwithbreadfortheworldinstitute through ifpriharvestchoice

1 harvestchoice cell5m indicators 
 spatial datasets for subsaharan africa at 10km resolution available for download using mapprhttpappsharvestchoiceorgmappr or tablrhttpappsharvestchoiceorgtablr tools

2 malawi usaidafrica rising baseline survey 2014 
 variables constructed from the 2014 arbes see readmemalawi for a list of variables included in the csv file provided

3 ethiopia household consumption and expenditure survey 20102011 
 variables constructed from the 2011 hces see readmeethiopia for a list of variables included in the csv file provided",expos hidden hunger 2015 helpmeviz vizathon dataset made avail particip 2015 vizathonhttphelpmevizcom20150507vizathonwithbreadfortheworldinstitut ifpriharvestchoic 1 harvestchoic cell5m indic spatial dataset subsaharan africa 10km resolut avail download use mapprhttpappsharvestchoiceorgmappr tablrhttpappsharvestchoiceorgtablr tool 2 malawi usaidafrica rise baselin survey 2014 variabl construct 2014 arb see readmemalawi list variabl includ csv file provid 3 ethiopia household consumpt expenditur survey 20102011 variabl construct 2011 hce see readmeethiopia list variabl includ csv file provid,exposing hidden hunger 2015 helpmeviz vizathon datasets made available participant 2015 vizathonhttphelpmevizcom20150507vizathonwithbreadfortheworldinstitute ifpriharvestchoice 1 harvestchoice cell5m indicator spatial datasets subsaharan africa 10km resolution available download using mapprhttpappsharvestchoiceorgmappr tablrhttpappsharvestchoiceorgtablr tool 2 malawi usaidafrica rising baseline survey 2014 variable constructed 2014 arbes see readmemalawi list variable included csv file provided 3 ethiopia household consumption expenditure survey 20102011 variable constructed 2011 hces see readmeethiopia list variable included csv file provided
JavaScript,"# Personal Nutritionist
**Website Link** - https://personal-nutritionist-ch06rhgys-tanishqa-lalwani.vercel.app
</br> **Youtube Demo Link** - https://youtu.be/Sb0eRm3Y6LY


# Table of Contents

- [Overview](#overview)
- [Features](#features)
- [Tech Stack](#tech-stack)
  - [Front End](#front-end)
  - [Back End](#back-end)
- [Prerequisites](#prerequisites)
- [Contributors](#contributors)


## Overview 
The project aims at being a tool which monitors your nutrient intake, requirements and diet plan. Personal Nutritionist as the name, the system can act as your personal nutritionist while this system can be used also by nutritionists gaining a lot of information and help in many ways. APIs help the system to get the information in many ways. The user can get details about a number of nutrients, vitamins etc of a fruit or vegetable. The user can add his recipes or get recipes using the API. The System basically helps the user in what to eat and which is good, what will help him and etc, the system will help him filter things easily. The System also allows the user to make a diet plan and remind him of his food timings.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src=""https://github.com/tanishqa-lalwani/Personal-Nutritionist/blob/main/Readme_images/Home.PNG"" width=""700"" height=""400"">


## Features 

**1. Sign Up** - The user (client or nutritionist) logs into the system when it creates a new account or logging with existing account using his email id and password

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src=""https://github.com/tanishqa-lalwani/Personal-Nutritionist/blob/main/Readme_images/SignUp.PNG"" width=""350"" height=""200"">

**2. Search recipes/blogs** - Clients can search recipes of their choice or Client can search for blogs posted by nutritionists on various food items or diet plans. Clients also can filter recipes on various parameters like most popular, time to cook, cuisine etc. Blogs can be filtered by topic or nutritionists

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src=""https://github.com/tanishqa-lalwani/Personal-Nutritionist/blob/main/Readme_images/Recipes.PNG"" width=""350"" height=""200""> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src=""https://github.com/tanishqa-lalwani/Personal-Nutritionist/blob/main/Readme_images/blogs.PNG"" width=""350"" height=""200"">

**3. Dashboard** - After the user logs into the system, s/he can go the dashboard to maintain their food log of the day. Clients can add their day to day food logs in each meal of the day, for eg.,breakfast, lunch ,dinner, etc. and maintain their calorie intake. They will also be able to view their intake of calories, proteins, fats and carbs in a day. Clients can also see his/her statistics of calorie intake, weight graph and more in the progress section.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src=""https://github.com/tanishqa-lalwani/Personal-Nutritionist/blob/main/Readme_images/Dashboard.PNG"" width=""350"" height=""200""> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src=""https://github.com/tanishqa-lalwani/Personal-Nutritionist/blob/main/Readme_images/Progress.PNG"" width=""350"" height=""200"">

**4. Edit Profile** - Clients can edit their username, email, password, weight, height etc in the view profile section. Clients can also set his/her goals according to his/her requirements

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src=""https://github.com/tanishqa-lalwani/Personal-Nutritionist/blob/main/Readme_images/Profile.PNG"" width=""350"" height=""200""> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src=""https://github.com/tanishqa-lalwani/Personal-Nutritionist/blob/main/Readme_images/Profile_2.PNG"" width=""350"" height=""200"">

## Tech Stack

### Front End 
- [HTML](https://html.com/) A markup language which does the basic stucturing of the website.
- [CSS](https://www.w3schools.com/css/) a style sheet language used for defining the appearance of the website.
- [React](https://github.com/facebook/react) The front end framework of the website is based on this.

### Back End 
- [NodeJS](https://github.com/nodejs) Backend of the website is scaled using NodeJS
- [Firebase](https://firebase.google.com/) It is used for serverless architecture - CDN Hosting, Realtime Database, Authentication and Storage.

## Prerequisites
- [Firebase](https://firebase.google.com/) account in order to set up the serverless BaaS for the project.
- [Node.js](https://nodejs.org/) (React frontend) 
- [ESLint](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint) and [Babel JavaScript ](https://marketplace.visualstudio.com/items?itemName=mgmcdermott.vscode-language-babel) plug-ins.

## Conclusion 

Our website offers credible information to help you make healthful eating choices. We are developing a goto website for people who are obsessing over fitness and count their calories and hesitate over mouth watering treats. Our aim is to make sure people know what they eat and how much they need for their day. This is a healthy place for people as they are surrounded by world class nutritionists giving them opinions and prescribing diet plans to work with their routine all packaged in one deal.

We aim to help users to find perfect recipes for themselves. Users can set goals and follow the best diet plans for overall health benefits. We use the best food databases across the internet to provide details about the number of nutrients, vitamins etc. of the food items.


## Contributors

Following are the contributors for this project - 

<ul>
  <li><a href=""https://github.com/MetalllD"">Mital Kamani</a> - Team Lead</li>
  <li><a href=""https://github.com/defalt18"">Kushagra Pathak</a></li>
    <li><a href=""https://github.com/tanishqa-lalwani"">Tanishqa Lalwani</a></li>
    <li><a href=""https://github.com/Rushi11111"">Rushi Rajpara</a></li>
    <li><a href=""https://github.com/JigarMarvaniya"">Jigar Marvaniya</a></li>
      <li><a href=""https://github.com/anany01325"">Anany Kashyap</a></li>
    <li><a href=""https://github.com/aakashdabhi23"">Aakash Dabhi</a></li>
    <li><a href=""https://github.com/marmikprajapati"">Marmik Prajapati</a></li>
      <li><a href=""https://github.com/aksharrrrr"">Akshar Rughani</a></li>
      <li><a href=""https://github.com/rushil-09"">Rushil Bangia</a></li>
    
    
</ul>
","personal nutritionist
website link httpspersonalnutritionistch06rhgystanishqalalwanivercelapp
br youtube demo link httpsyoutubesb0erm3y6ly


 table of contents

 overviewoverview
 featuresfeatures
 tech stacktechstack
 front endfrontend
 back endbackend
 prerequisitesprerequisites
 contributorscontributors


 overview 
the project aims at being a tool which monitors your nutrient intake requirements and diet plan personal nutritionist as the name the system can act as your personal nutritionist while this system can be used also by nutritionists gaining a lot of information and help in many ways apis help the system to get the information in many ways the user can get details about a number of nutrients vitamins etc of a fruit or vegetable the user can add his recipes or get recipes using the api the system basically helps the user in what to eat and which is good what will help him and etc the system will help him filter things easily the system also allows the user to make a diet plan and remind him of his food timings

nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimageshomepng width700 height400


 features 

1 sign up the user client or nutritionist logs into the system when it creates a new account or logging with existing account using his email id and password

nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagessignuppng width350 height200

2 search recipesblogs clients can search recipes of their choice or client can search for blogs posted by nutritionists on various food items or diet plans clients also can filter recipes on various parameters like most popular time to cook cuisine etc blogs can be filtered by topic or nutritionists

nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesrecipespng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesblogspng width350 height200

3 dashboard after the user logs into the system she can go the dashboard to maintain their food log of the day clients can add their day to day food logs in each meal of the day for egbreakfast lunch dinner etc and maintain their calorie intake they will also be able to view their intake of calories proteins fats and carbs in a day clients can also see hisher statistics of calorie intake weight graph and more in the progress section

nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesdashboardpng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprogresspng width350 height200

4 edit profile clients can edit their username email password weight height etc in the view profile section clients can also set hisher goals according to hisher requirements

nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprofilepng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprofile2png width350 height200

 tech stack

 front end 
 htmlhttpshtmlcom a markup language which does the basic stucturing of the website
 csshttpswwww3schoolscomcss a style sheet language used for defining the appearance of the website
 reacthttpsgithubcomfacebookreact the front end framework of the website is based on this

 back end 
 nodejshttpsgithubcomnodejs backend of the website is scaled using nodejs
 firebasehttpsfirebasegooglecom it is used for serverless architecture cdn hosting realtime database authentication and storage

 prerequisites
 firebasehttpsfirebasegooglecom account in order to set up the serverless baas for the project
 nodejshttpsnodejsorg react frontend 
 eslinthttpsmarketplacevisualstudiocomitemsitemnamedbaeumervscodeeslint and babel javascript httpsmarketplacevisualstudiocomitemsitemnamemgmcdermottvscodelanguagebabel plugins

 conclusion 

our website offers credible information to help you make healthful eating choices we are developing a goto website for people who are obsessing over fitness and count their calories and hesitate over mouth watering treats our aim is to make sure people know what they eat and how much they need for their day this is a healthy place for people as they are surrounded by world class nutritionists giving them opinions and prescribing diet plans to work with their routine all packaged in one deal

we aim to help users to find perfect recipes for themselves users can set goals and follow the best diet plans for overall health benefits we use the best food databases across the internet to provide details about the number of nutrients vitamins etc of the food items


 contributors

following are the contributors for this project 

ul
 lia hrefhttpsgithubcommetallldmital kamania team leadli
 lia hrefhttpsgithubcomdefalt18kushagra pathakali
 lia hrefhttpsgithubcomtanishqalalwanitanishqa lalwaniali
 lia hrefhttpsgithubcomrushi11111rushi rajparaali
 lia hrefhttpsgithubcomjigarmarvaniyajigar marvaniyaali
 lia hrefhttpsgithubcomanany01325anany kashyapali
 lia hrefhttpsgithubcomaakashdabhi23aakash dabhiali
 lia hrefhttpsgithubcommarmikprajapatimarmik prajapatiali
 lia hrefhttpsgithubcomaksharrrrrakshar rughaniali
 lia hrefhttpsgithubcomrushil09rushil bangiaali
 
 
ul",person nutritionist websit link httpspersonalnutritionistch06rhgystanishqalalwanivercelapp br youtub demo link httpsyoutubesb0erm3y6li tabl content overviewoverview featuresfeatur tech stacktechstack front endfrontend back endbackend prerequisitesprerequisit contributorscontributor overview project aim tool monitor nutrient intak requir diet plan person nutritionist name system act person nutritionist thi system use also nutritionist gain lot inform help mani way api help system get inform mani way user get detail number nutrient vitamin etc fruit veget user add hi recip get recip use api system basic help user eat good help etc system help filter thing easili system also allow user make diet plan remind hi food time nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimageshomepng width700 height400 featur 1 sign user client nutritionist log system creat new account log exist account use hi email id password nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagessignuppng width350 height200 2 search recipesblog client search recip choic client search blog post nutritionist variou food item diet plan client also filter recip variou paramet like popular time cook cuisin etc blog filter topic nutritionist nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesrecipespng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesblogspng width350 height200 3 dashboard user log system go dashboard maintain food log day client add day day food log meal day egbreakfast lunch dinner etc maintain calori intak also abl view intak calori protein fat carb day client also see hisher statist calori intak weight graph progress section nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesdashboardpng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprogresspng width350 height200 4 edit profil client edit usernam email password weight height etc view profil section client also set hisher goal accord hisher requir nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprofilepng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprofile2png width350 height200 tech stack front end htmlhttpshtmlcom markup languag doe basic stuctur websit csshttpswwww3schoolscomcss style sheet languag use defin appear websit reacthttpsgithubcomfacebookreact front end framework websit base thi back end nodejshttpsgithubcomnodej backend websit scale use nodej firebasehttpsfirebasegooglecom use serverless architectur cdn host realtim databas authent storag prerequisit firebasehttpsfirebasegooglecom account order set serverless baa project nodejshttpsnodejsorg react frontend eslinthttpsmarketplacevisualstudiocomitemsitemnamedbaeumervscodeeslint babel javascript httpsmarketplacevisualstudiocomitemsitemnamemgmcdermottvscodelanguagebabel plugin conclus websit offer credibl inform help make health eat choic develop goto websit peopl obsess fit count calori hesit mouth water treat aim make sure peopl know eat much need day thi healthi place peopl surround world class nutritionist give opinion prescrib diet plan work routin packag one deal aim help user find perfect recip themselv user set goal follow best diet plan overal health benefit use best food databas across internet provid detail number nutrient vitamin etc food item contributor follow contributor thi project ul lia hrefhttpsgithubcommetallldmit kamania team leadli lia hrefhttpsgithubcomdefalt18kushagra pathakali lia hrefhttpsgithubcomtanishqalalwanitanishqa lalwaniali lia hrefhttpsgithubcomrushi11111rushi rajparaali lia hrefhttpsgithubcomjigarmarvaniyajigar marvaniyaali lia hrefhttpsgithubcomanany01325anani kashyapali lia hrefhttpsgithubcomaakashdabhi23aakash dabhiali lia hrefhttpsgithubcommarmikprajapatimarmik prajapatiali lia hrefhttpsgithubcomaksharrrrrakshar rughaniali lia hrefhttpsgithubcomrushil09rushil bangiaali ul,personal nutritionist website link httpspersonalnutritionistch06rhgystanishqalalwanivercelapp br youtube demo link httpsyoutubesb0erm3y6ly table content overviewoverview featuresfeatures tech stacktechstack front endfrontend back endbackend prerequisitesprerequisites contributorscontributors overview project aim tool monitor nutrient intake requirement diet plan personal nutritionist name system act personal nutritionist system used also nutritionist gaining lot information help many way apis help system get information many way user get detail number nutrient vitamin etc fruit vegetable user add recipe get recipe using api system basically help user eat good help etc system help filter thing easily system also allows user make diet plan remind food timing nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimageshomepng width700 height400 feature 1 sign user client nutritionist log system creates new account logging existing account using email id password nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagessignuppng width350 height200 2 search recipesblogs client search recipe choice client search blog posted nutritionist various food item diet plan client also filter recipe various parameter like popular time cook cuisine etc blog filtered topic nutritionist nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesrecipespng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesblogspng width350 height200 3 dashboard user log system go dashboard maintain food log day client add day day food log meal day egbreakfast lunch dinner etc maintain calorie intake also able view intake calorie protein fat carbs day client also see hisher statistic calorie intake weight graph progress section nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesdashboardpng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprogresspng width350 height200 4 edit profile client edit username email password weight height etc view profile section client also set hisher goal according hisher requirement nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprofilepng width350 height200 nbspnbspnbspnbspnbsp img srchttpsgithubcomtanishqalalwanipersonalnutritionistblobmainreadmeimagesprofile2png width350 height200 tech stack front end htmlhttpshtmlcom markup language doe basic stucturing website csshttpswwww3schoolscomcss style sheet language used defining appearance website reacthttpsgithubcomfacebookreact front end framework website based back end nodejshttpsgithubcomnodejs backend website scaled using nodejs firebasehttpsfirebasegooglecom used serverless architecture cdn hosting realtime database authentication storage prerequisite firebasehttpsfirebasegooglecom account order set serverless baa project nodejshttpsnodejsorg react frontend eslinthttpsmarketplacevisualstudiocomitemsitemnamedbaeumervscodeeslint babel javascript httpsmarketplacevisualstudiocomitemsitemnamemgmcdermottvscodelanguagebabel plugins conclusion website offer credible information help make healthful eating choice developing goto website people obsessing fitness count calorie hesitate mouth watering treat aim make sure people know eat much need day healthy place people surrounded world class nutritionist giving opinion prescribing diet plan work routine packaged one deal aim help user find perfect recipe user set goal follow best diet plan overall health benefit use best food database across internet provide detail number nutrient vitamin etc food item contributor following contributor project ul lia hrefhttpsgithubcommetallldmital kamania team leadli lia hrefhttpsgithubcomdefalt18kushagra pathakali lia hrefhttpsgithubcomtanishqalalwanitanishqa lalwaniali lia hrefhttpsgithubcomrushi11111rushi rajparaali lia hrefhttpsgithubcomjigarmarvaniyajigar marvaniyaali lia hrefhttpsgithubcomanany01325anany kashyapali lia hrefhttpsgithubcomaakashdabhi23aakash dabhiali lia hrefhttpsgithubcommarmikprajapatimarmik prajapatiali lia hrefhttpsgithubcomaksharrrrrakshar rughaniali lia hrefhttpsgithubcomrushil09rushil bangiaali ul
Swift,"# Daily Dozen iOS App

<p align=""center""><img src=""README_files/github-dailydozen.jpg"" style=""width: 480px""></p>

## About

In the years of research required to create the more than a thousand evidence-based videos on [NutritionFacts.org][nutritionfacts.org], Michael Greger, MD, FACLM, has arrived at a list of what he considers the most important foods to include in a healthy daily diet. Yes, greens are good for you, but how much should we try to eat each day?

Dr. Greger’s Daily Dozen details the healthiest foods and how many servings of each we should try to check off every day. He explains his rationale in his book [How Not to Die][book]. All his proceeds from his books, DVDs, and speaking engagements is all donated to charity.

## Daily Dozen on the App Store

<a href=""https://apps.apple.com/us/app/dr-gregers-daily-dozen/id1060700802"" alt=""Download from the App Store"" target=""%5fblank""><img src=""README_files/app-store.png"" width=""200""></a>

## Contribute

We would love for you to contribute to our source code and to help make the Daily Dozen for Android even better!

Check out our [Contribution Guidelines][contribute] for details on how to get started and our suggested best practices.

## Donate

To help support [NutritionFacts.org][nutritionfacts.org], click [here][donate]

## License

The Daily Dozen iOS App is licensed under the GPLv3

## Contributors

* [Konstantin Khokhlov][justaninja]
* [Will Webb][innerfish]
* [Christi Richards][christirichards]
* [Lauren Hacker][laurenhacker]

**Special thanks to the volunteer efforts of the original creators of the app:**

* **Application Development:** Chan Kruse
* **Application Design:** Allan Portera
* **Photography:** Sangeeta Kumar

## Updates

**3.2.3 (App Store: August 15, 2020)**

* Improved Spanish translation

**3.2.1 (App Store: July 7, 2020)**

* Restructured to support international localization in general
    * Instances of static English `String` replaced with localizable `NSLocalizedString`
    * Modified Storyboard UI layouts to adapt to string length variance of different languages. 
* Adds Spanish
* Improved data synchronization with HealthKit
* Fixed update between Weight checkbox and Weight entry to match on the display
* Fixed weight chart x-axis scaling

**3.1.0 (App Store: December 17, 2019)**

* Adds 21 Tweaks
* Adds Weight Tracking with Health Kit Integration
* Add Application Tab Controller bar

Improvements:

* Adds settings control to choice between using ""Daily Dozen only"" or ""Daily Dozen + 21 Tweaks"".

* Adds settings control to select whether to use Imperial or Metric type units throughout the app.

**2.0.0 (App Store: March 9, 2018)**

* Brand new design
* Daily Dozen tracking now persists over multiple days
* Visualize your progress over time with our new Charts integration
* Enable a daily reminder with a custom time setting in the Daily Reminder Settings
* Backup your data to your files
* Added additional links in the main menu including The Daily Dozen Cookbook
* Updated About information in the main menu

**1.0.2 (App Store: November 13, 2017)**

* Misspelling fix

**1.0.0 (App Store: December 21, 2015)**

* Initial Release

[nutritionfacts.org]: http://nutritionfacts.org ""NutritionFacts.org - The Latest in Nutrition Research""
[contribute]: https://github.com/nutritionfactsorg/daily-dozen-ios/blob/master/CONTRIBUTING.md ""Contribute to the Daily Dozen Android App""
[donate]: https://nutritionfacts.org/donate ""Donate to NutritionFacts.org""
[book]: http://nutritionfacts.org/book ""How Not to Die""
[christirichards]: http://github.com/christirichards ""Christi Richards on GitHub""
[innerfish]: https://github.com/innerfish ""Will Webb on Github""
[justaninja]: https://github.com/justaninja ""Konstantin Khokhlov on Github""
[laurenhacker]: http://github.com/lahacker ""Lauren Hacker on Github""
","daily dozen ios app

p aligncenterimg srcreadmefilesgithubdailydozenjpg stylewidth 480pxp

 about

in the years of research required to create the more than a thousand evidencebased videos on nutritionfactsorgnutritionfactsorg michael greger md faclm has arrived at a list of what he considers the most important foods to include in a healthy daily diet yes greens are good for you but how much should we try to eat each day

dr gregers daily dozen details the healthiest foods and how many servings of each we should try to check off every day he explains his rationale in his book how not to diebook all his proceeds from his books dvds and speaking engagements is all donated to charity

 daily dozen on the app store

a hrefhttpsappsapplecomusappdrgregersdailydozenid1060700802 altdownload from the app store target5fblankimg srcreadmefilesappstorepng width200a

 contribute

we would love for you to contribute to our source code and to help make the daily dozen for android even better

check out our contribution guidelinescontribute for details on how to get started and our suggested best practices

 donate

to help support nutritionfactsorgnutritionfactsorg click heredonate

 license

the daily dozen ios app is licensed under the gplv3

 contributors

 konstantin khokhlovjustaninja
 will webbinnerfish
 christi richardschristirichards
 lauren hackerlaurenhacker

special thanks to the volunteer efforts of the original creators of the app

 application development chan kruse
 application design allan portera
 photography sangeeta kumar

 updates

323 app store august 15 2020

 improved spanish translation

321 app store july 7 2020

 restructured to support international localization in general
 instances of static english string replaced with localizable nslocalizedstring
 modified storyboard ui layouts to adapt to string length variance of different languages 
 adds spanish
 improved data synchronization with healthkit
 fixed update between weight checkbox and weight entry to match on the display
 fixed weight chart xaxis scaling

310 app store december 17 2019

 adds 21 tweaks
 adds weight tracking with health kit integration
 add application tab controller bar

improvements

 adds settings control to choice between using daily dozen only or daily dozen 21 tweaks

 adds settings control to select whether to use imperial or metric type units throughout the app

200 app store march 9 2018

 brand new design
 daily dozen tracking now persists over multiple days
 visualize your progress over time with our new charts integration
 enable a daily reminder with a custom time setting in the daily reminder settings
 backup your data to your files
 added additional links in the main menu including the daily dozen cookbook
 updated about information in the main menu

102 app store november 13 2017

 misspelling fix

100 app store december 21 2015

 initial release

nutritionfactsorg httpnutritionfactsorg nutritionfactsorg the latest in nutrition research
contribute httpsgithubcomnutritionfactsorgdailydozeniosblobmastercontributingmd contribute to the daily dozen android app
donate httpsnutritionfactsorgdonate donate to nutritionfactsorg
book httpnutritionfactsorgbook how not to die
christirichards httpgithubcomchristirichards christi richards on github
innerfish httpsgithubcominnerfish will webb on github
justaninja httpsgithubcomjustaninja konstantin khokhlov on github
laurenhacker httpgithubcomlahacker lauren hacker on github",daili dozen io app p aligncenterimg srcreadmefilesgithubdailydozenjpg stylewidth 480pxp year research requir creat thousand evidencebas video nutritionfactsorgnutritionfactsorg michael greger md faclm ha arriv list consid import food includ healthi daili diet ye green good much tri eat day dr greger daili dozen detail healthiest food mani serv tri check everi day explain hi rational hi book diebook hi proce hi book dvd speak engag donat chariti daili dozen app store hrefhttpsappsapplecomusappdrgregersdailydozenid1060700802 altdownload app store target5fblankimg srcreadmefilesappstorepng width200a contribut would love contribut sourc code help make daili dozen android even better check contribut guidelinescontribut detail get start suggest best practic donat help support nutritionfactsorgnutritionfactsorg click heredon licens daili dozen io app licens gplv3 contributor konstantin khokhlovjustaninja webbinnerfish christi richardschristirichard lauren hackerlaurenhack special thank volunt effort origin creator app applic develop chan kruse applic design allan portera photographi sangeeta kumar updat 323 app store august 15 2020 improv spanish translat 321 app store juli 7 2020 restructur support intern local gener instanc static english string replac localiz nslocalizedstr modifi storyboard ui layout adapt string length varianc differ languag add spanish improv data synchron healthkit fix updat weight checkbox weight entri match display fix weight chart xaxi scale 310 app store decemb 17 2019 add 21 tweak add weight track health kit integr add applic tab control bar improv add set control choic use daili dozen onli daili dozen 21 tweak add set control select whether use imperi metric type unit throughout app 200 app store march 9 2018 brand new design daili dozen track persist multipl day visual progress time new chart integr enabl daili remind custom time set daili remind set backup data file ad addit link main menu includ daili dozen cookbook updat inform main menu 102 app store novemb 13 2017 misspel fix 100 app store decemb 21 2015 initi releas nutritionfactsorg httpnutritionfactsorg nutritionfactsorg latest nutrit research contribut httpsgithubcomnutritionfactsorgdailydozeniosblobmastercontributingmd contribut daili dozen android app donat httpsnutritionfactsorgdon donat nutritionfactsorg book httpnutritionfactsorgbook die christirichard httpgithubcomchristirichard christi richard github innerfish httpsgithubcominnerfish webb github justaninja httpsgithubcomjustaninja konstantin khokhlov github laurenhack httpgithubcomlahack lauren hacker github,daily dozen io app p aligncenterimg srcreadmefilesgithubdailydozenjpg stylewidth 480pxp year research required create thousand evidencebased video nutritionfactsorgnutritionfactsorg michael greger md faclm ha arrived list considers important food include healthy daily diet yes green good much try eat day dr gregers daily dozen detail healthiest food many serving try check every day explains rationale book diebook proceeds book dvd speaking engagement donated charity daily dozen app store hrefhttpsappsapplecomusappdrgregersdailydozenid1060700802 altdownload app store target5fblankimg srcreadmefilesappstorepng width200a contribute would love contribute source code help make daily dozen android even better check contribution guidelinescontribute detail get started suggested best practice donate help support nutritionfactsorgnutritionfactsorg click heredonate license daily dozen io app licensed gplv3 contributor konstantin khokhlovjustaninja webbinnerfish christi richardschristirichards lauren hackerlaurenhacker special thanks volunteer effort original creator app application development chan kruse application design allan portera photography sangeeta kumar update 323 app store august 15 2020 improved spanish translation 321 app store july 7 2020 restructured support international localization general instance static english string replaced localizable nslocalizedstring modified storyboard ui layout adapt string length variance different language add spanish improved data synchronization healthkit fixed update weight checkbox weight entry match display fixed weight chart xaxis scaling 310 app store december 17 2019 add 21 tweak add weight tracking health kit integration add application tab controller bar improvement add setting control choice using daily dozen daily dozen 21 tweak add setting control select whether use imperial metric type unit throughout app 200 app store march 9 2018 brand new design daily dozen tracking persists multiple day visualize progress time new chart integration enable daily reminder custom time setting daily reminder setting backup data file added additional link main menu including daily dozen cookbook updated information main menu 102 app store november 13 2017 misspelling fix 100 app store december 21 2015 initial release nutritionfactsorg httpnutritionfactsorg nutritionfactsorg latest nutrition research contribute httpsgithubcomnutritionfactsorgdailydozeniosblobmastercontributingmd contribute daily dozen android app donate httpsnutritionfactsorgdonate donate nutritionfactsorg book httpnutritionfactsorgbook die christirichards httpgithubcomchristirichards christi richards github innerfish httpsgithubcominnerfish webb github justaninja httpsgithubcomjustaninja konstantin khokhlov github laurenhacker httpgithubcomlahacker lauren hacker github
Perl,"<img height='175' src=""https://static.openfoodfacts.org/images/svg/openfoodfacts-logo-en.svg"" align=""left"" hspace=""1"" vspace=""1"">

# Open Food Facts - Product Opener (Web Server)

[![Project Status](http://opensource.box.com/badges/active.svg)](http://opensource.box.com/badges)
[![Crowdin](https://d322cqt584bo4o.cloudfront.net/openfoodfacts/localized.svg)](https://translate.openfoodfacts.org/)
[![Open Source Helpers](https://www.codetriage.com/openfoodfacts/openfoodfacts-server/badges/users.svg)](https://www.codetriage.com/openfoodfacts/openfoodfacts-server)
[![Backers on Open Collective](https://opencollective.com/openfoodfacts-server/backers/badge.svg)](#backers)
[![Sponsors on Open Collective](https://opencollective.com/openfoodfacts-server/sponsors/badge.svg)](#sponsors)

## Tests
[![Perl::Critic](https://github.com/openfoodfacts/openfoodfacts-server/actions/workflows/perlcritic.yml/badge.svg)](https://github.com/openfoodfacts/openfoodfacts-server/actions/workflows/perlcritic.yml)
[![Pull Requests](https://github.com/openfoodfacts/openfoodfacts-server/actions/workflows/pull_request.yml/badge.svg)](https://github.com/openfoodfacts/openfoodfacts-server/actions/workflows/pull_request.yml)

## What is Product Opener?

**Product Opener** is the server software for **Open Food Facts** and **Open Beauty Facts**. It is released under the AGPL license and is being developed in Perl, HTML and JavaScript as [Free and Open-Source Software](https://en.wikipedia.org/wiki/Free_and_open-source_software).

## What is Open Food Facts?

### A food products database

Open Food Facts is a database of food products with ingredients, allergens, nutrition facts and all the tidbits of information we can find on product labels.

### Made by everyone

Open Food Facts is a non-profit association of volunteers.
25.000+ contributors like you have added 1.7 million + products from 150 countries using our Android, iPhone or Windows Phone app or their camera to scan barcodes and upload pictures of products and their labels.

### For everyone

Data about food is of public interest and has to be open. The complete database is published as open data and can be reused by anyone and for any use. Check-out the cool reuses or make your own!

* <https://world.openfoodfacts.org>

## Priorities
* Please list priority issues here 
* Please add roadmaps here
* [P1 problems](https://github.com/openfoodfacts/openfoodfacts-server/labels/P1)
* [P1 candidates](https://github.com/openfoodfacts/openfoodfacts-server/labels/P1%20candidate)

<!-- ## Libraries used -->

## How do I get started?

* Join us on Slack at <https://openfoodfacts.slack.com/> in the channels: `#api`, `#productopener`, `#dev`.
* Developer documentation:
   * [Quick start guide (Docker)](./docs/introduction/dev-environment-quick-start-guide.md)
   * [Developer guide (Docker)](./docs/how-to-guides/docker-developer-guide.md)
   * [Manual installation](https://wiki.openfoodfacts.org/Product_Opener/Installation)
   * Configuration [TBA]
   * Dependencies [TBA]
   * Database configuration [TBA]
   * How to run tests [TBA]
 * [API Documentation](https://openfoodfacts.github.io/api-documentation/)

Note: documentation follows the [Diátaxis Framework](https://diataxis.fr/)

## Contribution guidelines

If you're new to Open-Source, we recommend you to Checkout our [_Contributing Guidelines_](https://github.com/openfoodfacts/openfoodfacts-server/blob/master/CONTRIBUTING.md). Feel free to fork the project and send us a pull request.

* Writing tests
* Code review
* Other guidelines
* Please add new features to the CHANGELOG.md file before or after merge to make testing easier

## Reporting problems or asking for a feature

Have a bug or a feature request? Please search for existing and closed issues. If your problem or idea is not addressed yet, please [open a new issue](https://github.com/openfoodfacts/openfoodfacts-server/issues). You can ask directly in the discussion room if you're not sure

## Translate Open Food Facts in your language

You can help translate the Open Food Facts web version and the app at :
<https://translate.openfoodfacts.org/> (no technical knowledge required, takes a minute to signup)

## Helping with HTML and CSS

We have [[templatized](https://github.com/openfoodfacts/openfoodfacts-server/tree/master/templates)] Product Opener, we use Gulp and NPM, but you'll need to run the Product Opener docker to be able to see the result (see the How do I get set up? section).

### Who do I talk to?

* Join our discussion room at <https://slack.openfoodfacts.org/> Make sure to join the #productopener and #productopener-alerts channels. Stéphane, Pierre, Charles or Hangy will be around to help you get started.

## Contributors

This project exists thanks to all the people who contribute.
<a href=""https://github.com/openfoodfacts/openfoodfacts-server/graphs/contributors""><img src=""https://opencollective.com/openfoodfacts-server/contributors.svg?width=890&button=false"" /></a>


## Backers

Thank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/openfoodfacts-server#backer)]

<a href=""https://opencollective.com/openfoodfacts-server#backers"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/backers.svg?width=890""></a>


## Sponsors

Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/openfoodfacts-server#sponsor)]

<a href=""https://opencollective.com/openfoodfacts-server/sponsor/0/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/0/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/1/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/1/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/2/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/2/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/3/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/3/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/4/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/4/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/5/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/5/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/6/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/6/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/7/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/7/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/8/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/8/avatar.svg""></a>
<a href=""https://opencollective.com/openfoodfacts-server/sponsor/9/website"" target=""_blank""><img src=""https://opencollective.com/openfoodfacts-server/sponsor/9/avatar.svg""></a>

<a href=""https://nlnet.nl/""><img style=""height:100px"" src=""https://static.openfoodfacts.org/images/misc/nlnet_logo.svg"" alt=""Logo NLnet: abstract logo of four people seen from above Logo NGI Zero: letterlogo shaped like a tag""></a>

Open Food Facts Personal Search project was funded through the <a href=""https://nlnet.nl/discovery/"">NGI0 Discovery</a> Fund,
a fund established by NLnet with financial support from the European Commission's <a href=""https://ngi.eu"">Next Generation Internet</a> programme.
","img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1

 open food facts product opener web server

project statushttpopensourceboxcombadgesactivesvghttpopensourceboxcombadges
crowdinhttpsd322cqt584bo4ocloudfrontnetopenfoodfactslocalizedsvghttpstranslateopenfoodfactsorg
open source helpershttpswwwcodetriagecomopenfoodfactsopenfoodfactsserverbadgesuserssvghttpswwwcodetriagecomopenfoodfactsopenfoodfactsserver
backers on open collectivehttpsopencollectivecomopenfoodfactsserverbackersbadgesvgbackers
sponsors on open collectivehttpsopencollectivecomopenfoodfactsserversponsorsbadgesvgsponsors

 tests
perlcritichttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowsperlcriticymlbadgesvghttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowsperlcriticyml
pull requestshttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowspullrequestymlbadgesvghttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowspullrequestyml

 what is product opener

product opener is the server software for open food facts and open beauty facts it is released under the agpl license and is being developed in perl html and javascript as free and opensource softwarehttpsenwikipediaorgwikifreeandopensourcesoftware

 what is open food facts

 a food products database

open food facts is a database of food products with ingredients allergens nutrition facts and all the tidbits of information we can find on product labels

 made by everyone

open food facts is a nonprofit association of volunteers
25000 contributors like you have added 17 million products from 150 countries using our android iphone or windows phone app or their camera to scan barcodes and upload pictures of products and their labels

 for everyone

data about food is of public interest and has to be open the complete database is published as open data and can be reused by anyone and for any use checkout the cool reuses or make your own

 httpsworldopenfoodfactsorg

 priorities
 please list priority issues here 
 please add roadmaps here
 p1 problemshttpsgithubcomopenfoodfactsopenfoodfactsserverlabelsp1
 p1 candidateshttpsgithubcomopenfoodfactsopenfoodfactsserverlabelsp120candidate

 libraries used 

 how do i get started

 join us on slack at httpsopenfoodfactsslackcom in the channels api productopener dev
 developer documentation
 quick start guide dockerdocsintroductiondevenvironmentquickstartguidemd
 developer guide dockerdocshowtoguidesdockerdeveloperguidemd
 manual installationhttpswikiopenfoodfactsorgproductopenerinstallation
 configuration tba
 dependencies tba
 database configuration tba
 how to run tests tba
 api documentationhttpsopenfoodfactsgithubioapidocumentation

note documentation follows the diataxis frameworkhttpsdiataxisfr

 contribution guidelines

if you ' re new to opensource we recommend you to checkout our contributing guidelineshttpsgithubcomopenfoodfactsopenfoodfactsserverblobmastercontributingmd feel free to fork the project and send us a pull request

 writing tests
 code review
 other guidelines
 please add new features to the changelogmd file before or after merge to make testing easier

 reporting problems or asking for a feature

have a bug or a feature request please search for existing and closed issues if your problem or idea is not addressed yet please open a new issuehttpsgithubcomopenfoodfactsopenfoodfactsserverissues you can ask directly in the discussion room if you ' re not sure

 translate open food facts in your language

you can help translate the open food facts web version and the app at 
httpstranslateopenfoodfactsorg no technical knowledge required takes a minute to signup

 helping with html and css

we have templatizedhttpsgithubcomopenfoodfactsopenfoodfactsservertreemastertemplates product opener we use gulp and npm but you ' ll need to run the product opener docker to be able to see the result see the how do i get set up section

 who do i talk to

 join our discussion room at httpsslackopenfoodfactsorg make sure to join the productopener and productopeneralerts channels stephane pierre charles or hangy will be around to help you get started

 contributors

this project exists thanks to all the people who contribute
a hrefhttpsgithubcomopenfoodfactsopenfoodfactsservergraphscontributorsimg srchttpsopencollectivecomopenfoodfactsservercontributorssvgwidth890buttonfalse a


 backers

thank you to all our backers become a backerhttpsopencollectivecomopenfoodfactsserverbacker

a hrefhttpsopencollectivecomopenfoodfactsserverbackers targetblankimg srchttpsopencollectivecomopenfoodfactsserverbackerssvgwidth890a


 sponsors

support this project by becoming a sponsor your logo will show up here with a link to your website become a sponsorhttpsopencollectivecomopenfoodfactsserversponsor

a hrefhttpsopencollectivecomopenfoodfactsserversponsor0website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor0avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor1website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor1avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor2website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor2avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor3website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor3avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor4website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor4avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor5website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor5avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor6website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor6avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor7website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor7avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor8website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor8avatarsvga
a hrefhttpsopencollectivecomopenfoodfactsserversponsor9website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor9avatarsvga

a hrefhttpsnlnetnlimg styleheight100px srchttpsstaticopenfoodfactsorgimagesmiscnlnetlogosvg altlogo nlnet abstract logo of four people seen from above logo ngi zero letterlogo shaped like a taga

open food facts personal search project was funded through the a hrefhttpsnlnetnldiscoveryngi0 discoverya fund
a fund established by nlnet with financial support from the european commission ' s a hrefhttpsngieunext generation interneta programme",img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1 open food fact product open web server project statushttpopensourceboxcombadgesactivesvghttpopensourceboxcombadg crowdinhttpsd322cqt584bo4ocloudfrontnetopenfoodfactslocalizedsvghttpstranslateopenfoodfactsorg open sourc helpershttpswwwcodetriagecomopenfoodfactsopenfoodfactsserverbadgesuserssvghttpswwwcodetriagecomopenfoodfactsopenfoodfactsserv backer open collectivehttpsopencollectivecomopenfoodfactsserverbackersbadgesvgback sponsor open collectivehttpsopencollectivecomopenfoodfactsserversponsorsbadgesvgsponsor test perlcritichttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowsperlcriticymlbadgesvghttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowsperlcriticyml pull requestshttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowspullrequestymlbadgesvghttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowspullrequestyml product open product open server softwar open food fact open beauti fact releas agpl licens develop perl html javascript free opensourc softwarehttpsenwikipediaorgwikifreeandopensourcesoftwar open food fact food product databas open food fact databas food product ingredi allergen nutrit fact tidbit inform find product label made everyon open food fact nonprofit associ volunt 25000 contributor like ad 17 million product 150 countri use android iphon window phone app camera scan barcod upload pictur product label everyon data food public interest ha open complet databas publish open data reus anyon ani use checkout cool reus make httpsworldopenfoodfactsorg prioriti pleas list prioriti issu pleas add roadmap p1 problemshttpsgithubcomopenfoodfactsopenfoodfactsserverlabelsp1 p1 candidateshttpsgithubcomopenfoodfactsopenfoodfactsserverlabelsp120candid librari use get start join us slack httpsopenfoodfactsslackcom channel api productopen dev develop document quick start guid dockerdocsintroductiondevenvironmentquickstartguidemd develop guid dockerdocshowtoguidesdockerdeveloperguidemd manual installationhttpswikiopenfoodfactsorgproductopenerinstal configur tba depend tba databas configur tba run test tba api documentationhttpsopenfoodfactsgithubioapidocument note document follow diataxi frameworkhttpsdiataxisfr contribut guidelin ' new opensourc recommend checkout contribut guidelineshttpsgithubcomopenfoodfactsopenfoodfactsserverblobmastercontributingmd feel free fork project send us pull request write test code review guidelin pleas add new featur changelogmd file befor merg make test easier report problem ask featur bug featur request pleas search exist close issu problem idea address yet pleas open new issuehttpsgithubcomopenfoodfactsopenfoodfactsserverissu ask directli discuss room ' sure translat open food fact languag help translat open food fact web version app httpstranslateopenfoodfactsorg technic knowledg requir take minut signup help html css templatizedhttpsgithubcomopenfoodfactsopenfoodfactsservertreemastertempl product open use gulp npm ' need run product open docker abl see result see get set section talk join discuss room httpsslackopenfoodfactsorg make sure join productopen productopeneralert channel stephan pierr charl hangi around help get start contributor thi project exist thank peopl contribut hrefhttpsgithubcomopenfoodfactsopenfoodfactsservergraphscontributorsimg srchttpsopencollectivecomopenfoodfactsservercontributorssvgwidth890buttonfals backer thank backer becom backerhttpsopencollectivecomopenfoodfactsserverback hrefhttpsopencollectivecomopenfoodfactsserverback targetblankimg srchttpsopencollectivecomopenfoodfactsserverbackerssvgwidth890a sponsor support thi project becom sponsor logo show link websit becom sponsorhttpsopencollectivecomopenfoodfactsserversponsor hrefhttpsopencollectivecomopenfoodfactsserversponsor0websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor0avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor1websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor1avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor2websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor2avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor3websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor3avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor4websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor4avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor5websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor5avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor6websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor6avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor7websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor7avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor8websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor8avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor9websit targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor9avatarsvga hrefhttpsnlnetnlimg styleheight100px srchttpsstaticopenfoodfactsorgimagesmiscnlnetlogosvg altlogo nlnet abstract logo four peopl seen abov logo ngi zero letterlogo shape like taga open food fact person search project wa fund hrefhttpsnlnetnldiscoveryngi0 discoverya fund fund establish nlnet financi support european commiss ' hrefhttpsngieunext gener interneta programm,img height ' 175 ' srchttpsstaticopenfoodfactsorgimagessvgopenfoodfactslogoensvg alignleft hspace1 vspace1 open food fact product opener web server project statushttpopensourceboxcombadgesactivesvghttpopensourceboxcombadges crowdinhttpsd322cqt584bo4ocloudfrontnetopenfoodfactslocalizedsvghttpstranslateopenfoodfactsorg open source helpershttpswwwcodetriagecomopenfoodfactsopenfoodfactsserverbadgesuserssvghttpswwwcodetriagecomopenfoodfactsopenfoodfactsserver backer open collectivehttpsopencollectivecomopenfoodfactsserverbackersbadgesvgbackers sponsor open collectivehttpsopencollectivecomopenfoodfactsserversponsorsbadgesvgsponsors test perlcritichttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowsperlcriticymlbadgesvghttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowsperlcriticyml pull requestshttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowspullrequestymlbadgesvghttpsgithubcomopenfoodfactsopenfoodfactsserveractionsworkflowspullrequestyml product opener product opener server software open food fact open beauty fact released agpl license developed perl html javascript free opensource softwarehttpsenwikipediaorgwikifreeandopensourcesoftware open food fact food product database open food fact database food product ingredient allergen nutrition fact tidbit information find product label made everyone open food fact nonprofit association volunteer 25000 contributor like added 17 million product 150 country using android iphone window phone app camera scan barcodes upload picture product label everyone data food public interest ha open complete database published open data reused anyone use checkout cool reuses make httpsworldopenfoodfactsorg priority please list priority issue please add roadmaps p1 problemshttpsgithubcomopenfoodfactsopenfoodfactsserverlabelsp1 p1 candidateshttpsgithubcomopenfoodfactsopenfoodfactsserverlabelsp120candidate library used get started join u slack httpsopenfoodfactsslackcom channel api productopener dev developer documentation quick start guide dockerdocsintroductiondevenvironmentquickstartguidemd developer guide dockerdocshowtoguidesdockerdeveloperguidemd manual installationhttpswikiopenfoodfactsorgproductopenerinstallation configuration tba dependency tba database configuration tba run test tba api documentationhttpsopenfoodfactsgithubioapidocumentation note documentation follows diataxis frameworkhttpsdiataxisfr contribution guideline ' new opensource recommend checkout contributing guidelineshttpsgithubcomopenfoodfactsopenfoodfactsserverblobmastercontributingmd feel free fork project send u pull request writing test code review guideline please add new feature changelogmd file merge make testing easier reporting problem asking feature bug feature request please search existing closed issue problem idea addressed yet please open new issuehttpsgithubcomopenfoodfactsopenfoodfactsserverissues ask directly discussion room ' sure translate open food fact language help translate open food fact web version app httpstranslateopenfoodfactsorg technical knowledge required take minute signup helping html cs templatizedhttpsgithubcomopenfoodfactsopenfoodfactsservertreemastertemplates product opener use gulp npm ' need run product opener docker able see result see get set section talk join discussion room httpsslackopenfoodfactsorg make sure join productopener productopeneralerts channel stephane pierre charles hangy around help get started contributor project exists thanks people contribute hrefhttpsgithubcomopenfoodfactsopenfoodfactsservergraphscontributorsimg srchttpsopencollectivecomopenfoodfactsservercontributorssvgwidth890buttonfalse backer thank backer become backerhttpsopencollectivecomopenfoodfactsserverbacker hrefhttpsopencollectivecomopenfoodfactsserverbackers targetblankimg srchttpsopencollectivecomopenfoodfactsserverbackerssvgwidth890a sponsor support project becoming sponsor logo show link website become sponsorhttpsopencollectivecomopenfoodfactsserversponsor hrefhttpsopencollectivecomopenfoodfactsserversponsor0website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor0avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor1website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor1avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor2website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor2avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor3website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor3avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor4website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor4avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor5website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor5avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor6website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor6avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor7website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor7avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor8website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor8avatarsvga hrefhttpsopencollectivecomopenfoodfactsserversponsor9website targetblankimg srchttpsopencollectivecomopenfoodfactsserversponsor9avatarsvga hrefhttpsnlnetnlimg styleheight100px srchttpsstaticopenfoodfactsorgimagesmiscnlnetlogosvg altlogo nlnet abstract logo four people seen logo ngi zero letterlogo shaped like taga open food fact personal search project wa funded hrefhttpsnlnetnldiscoveryngi0 discoverya fund fund established nlnet financial support european commission ' hrefhttpsngieunext generation interneta programme
JavaScript,"![Ironhack logo](https://i.imgur.com/1QgrNNw.png)

# React | IronNutrition

## Introduction

At this point in the course, some of us may be reminiscing about times before the course, when we used to work out and we were fit and in shape.  Surprising as it may be, spending many hours each day sitting in front of the computer is not an effective way to attain, and maintain, a rock-hard physique.  

Our solution: A nutrition app. 

And it's your job to build it. 

![](https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/upload_0e106e84e22155f1d2775e37cd4aa865.gif)

## Requirements

- [Fork this repo](https://github.com/DeividZavala/PP-React-IronNutrition)
- Clone this repo into your `~/code/labs`

In the starter code, we've provided a list of foods in the form of an array of objects.

## Submission

Upon completion, run the following commands
```
$ git add .
$ git commit -m ""done""
$ git push origin master
```
Navigate to your repo and create a pull request from your master branch to the original repository master branch.

In the pull request name, add your name and last names separated by a dash ""-""

## Instructions

### Iteration 1 | Display Foods

Display a list of the foods. This should include the food's image, its name, and its calorie count. the array of foods is already in the state

**Make sure the image's src property is properly bound** the change is reflected in the DOM.  

### Iteration 2 | Search Foods

Create an input box to search through the foods by name.

You're going to need to generate a custom *filter method* to do this.

Consider using the method `filter` of javascript

### Iteration 3 | Add New Foods

Create a button to add new foods.

When a user clicks the button, a form will appear with fields for a name, number of calories, and an image.

When the user clicks submit, the food will be added to the list.

The form should disappear when the user clicks the submit button.  

### Iteration 4 | Today's Foods List

Create a button next to each item. When a user clicks the button, the corresponding food should be added to a special list of foods which are ""today's foods"".

Somewhere on the page, display a list of today's foods, with a total calorie count.

### Bonus | Quantities

In addition to the ""Add to today's list"" button, create an input for quantity. Whenever a user enters a number into the input, you should add that many of the item to their list.

The default quanitity should be 1.

**Super Bonus**

If the user has added more than one item of the same type to their list, don't display it twice. Instead, display the item's name, and the number of times it has been added.

For instance:

- `Banana x2`
- `Salmon x5`
- `Cake`","ironhack logohttpsiimgurcom1qgrnnwpng

 react ironnutrition

 introduction

at this point in the course some of us may be reminiscing about times before the course when we used to work out and we were fit and in shape surprising as it may be spending many hours each day sitting in front of the computer is not an effective way to attain and maintain a rockhard physique 

our solution a nutrition app 

and it ' s your job to build it 

httpss3euwest1amazonawscomihmaterialsuploadsupload0e106e84e22155f1d2775e37cd4aa865gif

 requirements

 fork this repohttpsgithubcomdeividzavalappreactironnutrition
 clone this repo into your codelabs

in the starter code we ' ve provided a list of foods in the form of an array of objects

 submission

upon completion run the following commands

 git add 
 git commit m done
 git push origin master

navigate to your repo and create a pull request from your master branch to the original repository master branch

in the pull request name add your name and last names separated by a dash 

 instructions

 iteration 1 display foods

display a list of the foods this should include the food ' s image its name and its calorie count the array of foods is already in the state

make sure the image ' s src property is properly bound the change is reflected in the dom 

 iteration 2 search foods

create an input box to search through the foods by name

you ' re going to need to generate a custom filter method to do this

consider using the method filter of javascript

 iteration 3 add new foods

create a button to add new foods

when a user clicks the button a form will appear with fields for a name number of calories and an image

when the user clicks submit the food will be added to the list

the form should disappear when the user clicks the submit button 

 iteration 4 today ' s foods list

create a button next to each item when a user clicks the button the corresponding food should be added to a special list of foods which are today ' s foods

somewhere on the page display a list of today ' s foods with a total calorie count

 bonus quantities

in addition to the add to today ' s list button create an input for quantity whenever a user enters a number into the input you should add that many of the item to their list

the default quanitity should be 1

super bonus

if the user has added more than one item of the same type to their list don ' t display it twice instead display the item ' s name and the number of times it has been added

for instance

 banana x2
 salmon x5
 cake",ironhack logohttpsiimgurcom1qgrnnwpng react ironnutrit introduct thi point cours us may reminisc time befor cours use work fit shape surpris may spend mani hour day sit front comput effect way attain maintain rockhard physiqu solut nutrit app ' job build httpss3euwest1amazonawscomihmaterialsuploadsupload0e106e84e22155f1d2775e37cd4aa865gif requir fork thi repohttpsgithubcomdeividzavalappreactironnutrit clone thi repo codelab starter code ' provid list food form array object submiss upon complet run follow command git add git commit done git push origin master navig repo creat pull request master branch origin repositori master branch pull request name add name last name separ dash instruct iter 1 display food display list food thi includ food ' imag name calori count array food alreadi state make sure imag ' src properti properli bound chang reflect dom iter 2 search food creat input box search food name ' go need gener custom filter method thi consid use method filter javascript iter 3 add new food creat button add new food user click button form appear field name number calori imag user click submit food ad list form disappear user click submit button iter 4 today ' food list creat button next item user click button correspond food ad special list food today ' food somewher page display list today ' food total calori count bonu quantiti addit add today ' list button creat input quantiti whenev user enter number input add mani item list default quanit 1 super bonu user ha ad one item type list ' display twice instead display item ' name number time ha ad instanc banana x2 salmon x5 cake,ironhack logohttpsiimgurcom1qgrnnwpng react ironnutrition introduction point course u may reminiscing time course used work fit shape surprising may spending many hour day sitting front computer effective way attain maintain rockhard physique solution nutrition app ' job build httpss3euwest1amazonawscomihmaterialsuploadsupload0e106e84e22155f1d2775e37cd4aa865gif requirement fork repohttpsgithubcomdeividzavalappreactironnutrition clone repo codelabs starter code ' provided list food form array object submission upon completion run following command git add git commit done git push origin master navigate repo create pull request master branch original repository master branch pull request name add name last name separated dash instruction iteration 1 display food display list food include food ' image name calorie count array food already state make sure image ' src property properly bound change reflected dom iteration 2 search food create input box search food name ' going need generate custom filter method consider using method filter javascript iteration 3 add new food create button add new food user click button form appear field name number calorie image user click submit food added list form disappear user click submit button iteration 4 today ' food list create button next item user click button corresponding food added special list food today ' food somewhere page display list today ' food total calorie count bonus quantity addition add today ' list button create input quantity whenever user enters number input add many item list default quanitity 1 super bonus user ha added one item type list ' display twice instead display item ' name number time ha added instance banana x2 salmon x5 cake
JavaScript,"🚫 Note: All lines that start with 🚫 are instructions and should be deleted before this is posted to your portfolio. This is intended to be a guideline. Feel free to add your own flare to it.

🚫 The numbers 1️⃣ through 3️⃣ next to each item represent the week that part of the docs needs to be comepleted by.  Make sure to delete the numbers by the end of Labs.

🚫 Each student has a required minimum number of meaningful PRs each week per the rubric.  Contributing to docs does NOT count as a PR to meet your weekly requirements.

# API Documentation

#### 1️⃣ Backend delpoyed at [🚫name service here](🚫add URL here) <br>

## 1️⃣ Getting started

To get the server running locally:

🚫 adjust these scripts to match your project

- Clone this repo
- **yarn install** to install all required dependencies
- **yarn server** to start the local server
- **yarn test** to start server using testing environment

### Backend framework goes here

🚫 Why did you choose this framework?

-    Point One
-    Point Two
-    Point Three
-    Point Four

## Production Dependencies

- [cors](https://www.npmjs.com/package/cors)
- [dotenv](https://www.npmjs.com/package/dotenv)
- [express](https://expressjs.com/)
- [helmet](https://helmetjs.github.io/)
- [knex](http://knexjs.org/)
- [knex-cleaner](https://www.npmjs.com/package/knex-cleaner)
- [mixpanel](https://docs.google.com/document/d/1YabpIkgGi6J4AJ-mhcspcWf-z0NP56gIY344lf20E5o/edit)
- [moment](https://momentjs.com/)
- [morgan](https://github.com/expressjs/morgan)
- [pg](https://node-postgres.com/)
- [uuid](https://www.npmjs.com/package/uuid)
- [sentry](https://blog.sentry.io/2018/03/06/the-sentry-workflow)
- [axios](https://github.com/axios/axios)
- [heroku](https://devcenter.heroku.com/articles/getting-started-with-nodejs)
- [validator](https://www.npmjs.com/package/validator)



## Development Dependencies

- [cross-env](https://www.npmjs.com/package/cross-env)
- [jest](https://jestjs.io/)
- [nodemon](https://nodemon.io/)
- [supertest](https://github.com/visionmedia/supertest)


## 2️⃣ Endpoints

🚫This is a placeholder, replace the endpoints, access controll, and descriptioin to match your project

#### Organization Routes

| Method | Endpoint                | Access Control | Description                                  |
| ------ | ----------------------- | -------------- | -------------------------------------------- |
| GET    | `/organizations/:orgId` | all users      | Returns the information for an organization. |
| PUT    | `/organizatoins/:orgId` | owners         | Modify an existing organization.             |
| DELETE | `/organizations/:orgId` | owners         | Delete an organization.                      |

#### User Routes

| Method | Endpoint                | Access Control      | Description                                        |
| ------ | ----------------------- | ------------------- | -------------------------------------------------- |
| GET    | `/users/current`        | all users           | Returns info for the logged in user.               |
| GET    | `/users/org/:userId`    | owners, supervisors | Returns all users for an organization.             |
| GET    | `/users/:userId`        | owners, supervisors | Returns info for a single user.                    |
| POST   | `/users/register/owner` | none                | Creates a new user as owner of a new organization. |
| PUT    | `/users/:userId`        | owners, supervisors |                                                    |
| DELETE | `/users/:userId`        | owners, supervisors |                                                    |

# Data Model

🚫This is just an example. Replace this with your data model

#### 2️⃣ ORGANIZATIONS

---

```
{
  id: UUID
  name: STRING
  industry: STRING
  paid: BOOLEAN
  customer_id: STRING
  subscription_id: STRING
}
```

#### USERS

---

```
{
  id: UUID
  organization_id: UUID foreign key in ORGANIZATIONS table
  first_name: STRING
  last_name: STRING
  role: STRING [ 'owner', 'supervisor', 'employee' ]
  email: STRING
  phone: STRING
  cal_visit: BOOLEAN
  emp_visit: BOOLEAN
  emailpref: BOOLEAN
  phonepref: BOOLEAN
}
```

## 2️⃣ Actions

🚫 This is an example, replace this with the actions that pertain to your backend

`getOrgs()` -> Returns all organizations

`getOrg(orgId)` -> Returns a single organization by ID

`addOrg(org)` -> Returns the created org

`updateOrg(orgId)` -> Update an organization by ID

`deleteOrg(orgId)` -> Delete an organization by ID
<br>
<br>
<br>
`getUsers(orgId)` -> if no param all users

`getUser(userId)` -> Returns a single user by user ID

`addUser(user object)` --> Creates a new user and returns that user. Also creates 7 availabilities defaulted to hours of operation for their organization.

`updateUser(userId, changes object)` -> Updates a single user by ID.

`deleteUser(userId)` -> deletes everything dependent on the user

## 3️⃣ Environment Variables

In order for the app to function correctly, the user must set up their own environment variables.

create a .env file that includes the following:

🚫 These are just examples, replace them with the specifics for your app
    
    *  SENTRY_DSN - Optional secret key for https://sentry.io error logging
    * PORT - dynamic port variable resolution when testing locally
    * DATABASE_URL - Postgres database url
    
## Contributing

When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change.

Please note we have a [code of conduct](./code_of_conduct.md). Please follow it in all your interactions with the project.

### Issue/Bug Request

 **If you are having an issue with the existing project code, please submit a bug report under the following guidelines:**
 - Check first to see if your issue has already been reported.
 - Check to see if the issue has recently been fixed by attempting to reproduce the issue using the latest master branch in the repository.
 - Create a live example of the problem.
 - Submit a detailed bug report including your environment & browser, steps to reproduce the issue, actual and expected outcomes,  where you believe the issue is originating from, and any potential solutions you have considered.

### Feature Requests

We would love to hear from you about new features which would improve this app and further the aims of our project. Please provide as much detail and information as possible to show us why you think your new feature should be implemented.

### Pull Requests

If you have developed a patch, bug fix, or new feature that would improve this app, please submit a pull request. It is best to communicate your ideas with the developers first before investing a great deal of time into a pull request to ensure that it will mesh smoothly with the project.

Remember that this project is licensed under the MIT license, and by submitting a pull request, you agree that your work will be, too.

#### Pull Request Guidelines

- Ensure any install or build dependencies are removed before the end of the layer when doing a build.
- Update the README.md with details of changes to the interface, including new plist variables, exposed ports, useful file locations and container parameters.
- Ensure that your code conforms to our existing code conventions and test coverage.
- Include the relevant issue number, if applicable.
- You may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.

### Attribution

These contribution guidelines have been adapted from [this good-Contributing.md-template](https://gist.github.com/PurpleBooth/b24679402957c63ec426).

## Documentation

See [Frontend Documentation](🚫link to your frontend readme here) for details on the fronend of our project.
🚫 Add DS iOS and/or Andriod links here if applicable.
","note all lines that start with are instructions and should be deleted before this is posted to your portfolio this is intended to be a guideline feel free to add your own flare to it

 the numbers 1 through 3 next to each item represent the week that part of the docs needs to be comepleted by make sure to delete the numbers by the end of labs

 each student has a required minimum number of meaningful prs each week per the rubric contributing to docs does not count as a pr to meet your weekly requirements

 api documentation

 1 backend delpoyed at name service hereadd url here br

 1 getting started

to get the server running locally

 adjust these scripts to match your project

 clone this repo
 yarn install to install all required dependencies
 yarn server to start the local server
 yarn test to start server using testing environment

 backend framework goes here

 why did you choose this framework

 point one
 point two
 point three
 point four

 production dependencies

 corshttpswwwnpmjscompackagecors
 dotenvhttpswwwnpmjscompackagedotenv
 expresshttpsexpressjscom
 helmethttpshelmetjsgithubio
 knexhttpknexjsorg
 knexcleanerhttpswwwnpmjscompackageknexcleaner
 mixpanelhttpsdocsgooglecomdocumentd1yabpikggi6j4ajmhcspcwfz0np56giy344lf20e5oedit
 momenthttpsmomentjscom
 morganhttpsgithubcomexpressjsmorgan
 pghttpsnodepostgrescom
 uuidhttpswwwnpmjscompackageuuid
 sentryhttpsblogsentryio20180306thesentryworkflow
 axioshttpsgithubcomaxiosaxios
 herokuhttpsdevcenterherokucomarticlesgettingstartedwithnodejs
 validatorhttpswwwnpmjscompackagevalidator



 development dependencies

 crossenvhttpswwwnpmjscompackagecrossenv
 jesthttpsjestjsio
 nodemonhttpsnodemonio
 supertesthttpsgithubcomvisionmediasupertest


 2 endpoints

this is a placeholder replace the endpoints access controll and descriptioin to match your project

 organization routes

 method endpoint access control description 
 
 get organizationsorgid all users returns the information for an organization 
 put organizatoinsorgid owners modify an existing organization 
 delete organizationsorgid owners delete an organization 

 user routes

 method endpoint access control description 
 
 get userscurrent all users returns info for the logged in user 
 get usersorguserid owners supervisors returns all users for an organization 
 get usersuserid owners supervisors returns info for a single user 
 post usersregisterowner none creates a new user as owner of a new organization 
 put usersuserid owners supervisors 
 delete usersuserid owners supervisors 

 data model

this is just an example replace this with your data model

 2 organizations





 id uuid
 name string
 industry string
 paid boolean
 customerid string
 subscriptionid string



 users





 id uuid
 organizationid uuid foreign key in organizations table
 firstname string
 lastname string
 role string ' owner ' ' supervisor ' ' employee ' 
 email string
 phone string
 calvisit boolean
 empvisit boolean
 emailpref boolean
 phonepref boolean



 2 actions

 this is an example replace this with the actions that pertain to your backend

getorgs returns all organizations

getorgorgid returns a single organization by id

addorgorg returns the created org

updateorgorgid update an organization by id

deleteorgorgid delete an organization by id
br
br
br
getusersorgid if no param all users

getuseruserid returns a single user by user id

adduseruser object creates a new user and returns that user also creates 7 availabilities defaulted to hours of operation for their organization

updateuseruserid changes object updates a single user by id

deleteuseruserid deletes everything dependent on the user

 3 environment variables

in order for the app to function correctly the user must set up their own environment variables

create a env file that includes the following

 these are just examples replace them with the specifics for your app
 
 sentrydsn optional secret key for httpssentryio error logging
 port dynamic port variable resolution when testing locally
 databaseurl postgres database url
 
 contributing

when contributing to this repository please first discuss the change you wish to make via issue email or any other method with the owners of this repository before making a change

please note we have a code of conductcodeofconductmd please follow it in all your interactions with the project

 issuebug request

 if you are having an issue with the existing project code please submit a bug report under the following guidelines
 check first to see if your issue has already been reported
 check to see if the issue has recently been fixed by attempting to reproduce the issue using the latest master branch in the repository
 create a live example of the problem
 submit a detailed bug report including your environment browser steps to reproduce the issue actual and expected outcomes where you believe the issue is originating from and any potential solutions you have considered

 feature requests

we would love to hear from you about new features which would improve this app and further the aims of our project please provide as much detail and information as possible to show us why you think your new feature should be implemented

 pull requests

if you have developed a patch bug fix or new feature that would improve this app please submit a pull request it is best to communicate your ideas with the developers first before investing a great deal of time into a pull request to ensure that it will mesh smoothly with the project

remember that this project is licensed under the mit license and by submitting a pull request you agree that your work will be too

 pull request guidelines

 ensure any install or build dependencies are removed before the end of the layer when doing a build
 update the readmemd with details of changes to the interface including new plist variables exposed ports useful file locations and container parameters
 ensure that your code conforms to our existing code conventions and test coverage
 include the relevant issue number if applicable
 you may merge the pull request in once you have the signoff of two other developers or if you do not have permission to do that you may request the second reviewer to merge it for you

 attribution

these contribution guidelines have been adapted from this goodcontributingmdtemplatehttpsgistgithubcompurpleboothb24679402957c63ec426

 documentation

see frontend documentationlink to your frontend readme here for details on the fronend of our project
 add ds ios andor andriod links here if applicable",note line start instruct delet befor thi post portfolio thi intend guidelin feel free add flare number 1 3 next item repres week part doc need comeplet make sure delet number end lab student ha requir minimum number meaning pr week per rubric contribut doc doe count pr meet weekli requir api document 1 backend delpoy name servic hereadd url br 1 get start get server run local adjust script match project clone thi repo yarn instal instal requir depend yarn server start local server yarn test start server use test environ backend framework goe whi choos thi framework point one point two point three point four product depend corshttpswwwnpmjscompackagecor dotenvhttpswwwnpmjscompackagedotenv expresshttpsexpressjscom helmethttpshelmetjsgithubio knexhttpknexjsorg knexcleanerhttpswwwnpmjscompackageknexclean mixpanelhttpsdocsgooglecomdocumentd1yabpikggi6j4ajmhcspcwfz0np56giy344lf20e5oedit momenthttpsmomentjscom morganhttpsgithubcomexpressjsmorgan pghttpsnodepostgrescom uuidhttpswwwnpmjscompackageuuid sentryhttpsblogsentryio20180306thesentryworkflow axioshttpsgithubcomaxiosaxio herokuhttpsdevcenterherokucomarticlesgettingstartedwithnodej validatorhttpswwwnpmjscompackagevalid develop depend crossenvhttpswwwnpmjscompackagecrossenv jesthttpsjestjsio nodemonhttpsnodemonio supertesthttpsgithubcomvisionmediasupertest 2 endpoint thi placehold replac endpoint access control descriptioin match project organ rout method endpoint access control descript get organizationsorgid user return inform organ put organizatoinsorgid owner modifi exist organ delet organizationsorgid owner delet organ user rout method endpoint access control descript get userscurr user return info log user get usersorguserid owner supervisor return user organ get usersuserid owner supervisor return info singl user post usersregisterown none creat new user owner new organ put usersuserid owner supervisor delet usersuserid owner supervisor data model thi exampl replac thi data model 2 organ id uuid name string industri string paid boolean customerid string subscriptionid string user id uuid organizationid uuid foreign key organ tabl firstnam string lastnam string role string ' owner ' ' supervisor ' ' employe ' email string phone string calvisit boolean empvisit boolean emailpref boolean phonepref boolean 2 action thi exampl replac thi action pertain backend getorg return organ getorgorgid return singl organ id addorgorg return creat org updateorgorgid updat organ id deleteorgorgid delet organ id br br br getusersorgid param user getuseruserid return singl user user id adduserus object creat new user return user also creat 7 avail default hour oper organ updateuseruserid chang object updat singl user id deleteuseruserid delet everyth depend user 3 environ variabl order app function correctli user must set environ variabl creat env file includ follow exampl replac specif app sentrydsn option secret key httpssentryio error log port dynam port variabl resolut test local databaseurl postgr databas url contribut contribut thi repositori pleas first discuss chang wish make via issu email ani method owner thi repositori befor make chang pleas note code conductcodeofconductmd pleas follow interact project issuebug request issu exist project code pleas submit bug report follow guidelin check first see issu ha alreadi report check see issu ha recent fix attempt reproduc issu use latest master branch repositori creat live exampl problem submit detail bug report includ environ browser step reproduc issu actual expect outcom believ issu origin ani potenti solut consid featur request would love hear new featur would improv thi app aim project pleas provid much detail inform possibl show us whi think new featur implement pull request develop patch bug fix new featur would improv thi app pleas submit pull request best commun idea develop first befor invest great deal time pull request ensur mesh smoothli project rememb thi project licens mit licens submit pull request agre work pull request guidelin ensur ani instal build depend remov befor end layer build updat readmemd detail chang interfac includ new plist variabl expos port use file locat contain paramet ensur code conform exist code convent test coverag includ relev issu number applic may merg pull request onc signoff two develop permiss may request second review merg attribut contribut guidelin adapt thi goodcontributingmdtemplatehttpsgistgithubcompurpleboothb24679402957c63ec426 document see frontend documentationlink frontend readm detail fronend project add ds io andor andriod link applic,note line start instruction deleted posted portfolio intended guideline feel free add flare number 1 3 next item represent week part doc need comepleted make sure delete number end lab student ha required minimum number meaningful pr week per rubric contributing doc doe count pr meet weekly requirement api documentation 1 backend delpoyed name service hereadd url br 1 getting started get server running locally adjust script match project clone repo yarn install install required dependency yarn server start local server yarn test start server using testing environment backend framework go choose framework point one point two point three point four production dependency corshttpswwwnpmjscompackagecors dotenvhttpswwwnpmjscompackagedotenv expresshttpsexpressjscom helmethttpshelmetjsgithubio knexhttpknexjsorg knexcleanerhttpswwwnpmjscompackageknexcleaner mixpanelhttpsdocsgooglecomdocumentd1yabpikggi6j4ajmhcspcwfz0np56giy344lf20e5oedit momenthttpsmomentjscom morganhttpsgithubcomexpressjsmorgan pghttpsnodepostgrescom uuidhttpswwwnpmjscompackageuuid sentryhttpsblogsentryio20180306thesentryworkflow axioshttpsgithubcomaxiosaxios herokuhttpsdevcenterherokucomarticlesgettingstartedwithnodejs validatorhttpswwwnpmjscompackagevalidator development dependency crossenvhttpswwwnpmjscompackagecrossenv jesthttpsjestjsio nodemonhttpsnodemonio supertesthttpsgithubcomvisionmediasupertest 2 endpoint placeholder replace endpoint access controll descriptioin match project organization route method endpoint access control description get organizationsorgid user return information organization put organizatoinsorgid owner modify existing organization delete organizationsorgid owner delete organization user route method endpoint access control description get userscurrent user return info logged user get usersorguserid owner supervisor return user organization get usersuserid owner supervisor return info single user post usersregisterowner none creates new user owner new organization put usersuserid owner supervisor delete usersuserid owner supervisor data model example replace data model 2 organization id uuid name string industry string paid boolean customerid string subscriptionid string user id uuid organizationid uuid foreign key organization table firstname string lastname string role string ' owner ' ' supervisor ' ' employee ' email string phone string calvisit boolean empvisit boolean emailpref boolean phonepref boolean 2 action example replace action pertain backend getorgs return organization getorgorgid return single organization id addorgorg return created org updateorgorgid update organization id deleteorgorgid delete organization id br br br getusersorgid param user getuseruserid return single user user id adduseruser object creates new user return user also creates 7 availability defaulted hour operation organization updateuseruserid change object update single user id deleteuseruserid deletes everything dependent user 3 environment variable order app function correctly user must set environment variable create env file includes following example replace specific app sentrydsn optional secret key httpssentryio error logging port dynamic port variable resolution testing locally databaseurl postgres database url contributing contributing repository please first discus change wish make via issue email method owner repository making change please note code conductcodeofconductmd please follow interaction project issuebug request issue existing project code please submit bug report following guideline check first see issue ha already reported check see issue ha recently fixed attempting reproduce issue using latest master branch repository create live example problem submit detailed bug report including environment browser step reproduce issue actual expected outcome believe issue originating potential solution considered feature request would love hear new feature would improve app aim project please provide much detail information possible show u think new feature implemented pull request developed patch bug fix new feature would improve app please submit pull request best communicate idea developer first investing great deal time pull request ensure mesh smoothly project remember project licensed mit license submitting pull request agree work pull request guideline ensure install build dependency removed end layer build update readmemd detail change interface including new plist variable exposed port useful file location container parameter ensure code conforms existing code convention test coverage include relevant issue number applicable may merge pull request signoff two developer permission may request second reviewer merge attribution contribution guideline adapted goodcontributingmdtemplatehttpsgistgithubcompurpleboothb24679402957c63ec426 documentation see frontend documentationlink frontend readme detail fronend project add io andor andriod link applicable
JavaScript,"# NutriJournal

You can find the deployed project at [getnutrijournal.com](http://www.getnutrijournal.com).

# Contributors

|                                         [Chaz Rowe](https://github.com/chazr88)                                          |                                        [Joseph Luna](https://joseph-luna-portfolio.netlify.com)                                         |                                                                                          [Jimmy McBride](https://jimmymcbride.me)                                                                                           |                                      [Alejandro Mejia](https://compassionate-joliot-2c1114.netlify.com/)                                       |                                        [Will Ediger](https://github.com/willediger)                                         |                                        [Dave Vazquez](https://github.com/dave-vazquez)                                        |                                                                                                                                                        [Izzy Gonzalez-Brooks](https://github.com/israelgonzalezb)                                                                                                                                                         |                                        [Alyssa Saez](https://github.com/AlyssaSaez)                                        |
| :----------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------: | :---------------------------------------------------------------------------------------------------------------------------: | :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------------------------------------------------------------------------------------------------------------------: |
| [<img src=""https://ca.slack-edge.com/T4JUEB3ME-UG81USDEZ-032c4f65390f-512"" width = ""200"" />](https://github.com/chazr88) | [<img src=""https://ca.slack-edge.com/T4JUEB3ME-UFPQNAWGM-f9eca12accb9-512"" width = ""200"" />](https://joseph-luna-portfolio.netlify.com) |                                                    [<img src=""https://ca.slack-edge.com/T4JUEB3ME-UFTKAJ542-10bd26e82a74-512"" width = ""200"" />](https://jimmymcbride.me)                                                    | [<img src=""https://ca.slack-edge.com/T4JUEB3ME-UHP1KM82J-c62ca48d2cc2-512"" width = ""200"" />](https://compassionate-joliot-2c1114.netlify.com/) | [<img src=""https://ca.slack-edge.com/T4JUEB3ME-UD8J8BS1G-d88134753726-512"" width = ""200"" />](https://github.com/willediger) | [<img src=""https://ca.slack-edge.com/T4JUEB3ME-UG7GF20RH-3a4e10af9adb-512"" width = ""200"" />](https://github.com/dave-vazquez) |                                                                                                                     [<img src=""https://ca.slack-edge.com/T4JUEB3ME-UFKPLSBA4-dbe33590e896-512"" width = ""200"" />](https://github.com/israelgonzalezb)                                                                                                                      |  [<img src=""https://avatars0.githubusercontent.com/u/47366310?s=400&v=4"" width = ""200"" />](https://github.com/AlyssaSaez)  |
|               [<img src=""https://github.com/favicon.ico"" width=""15""> chazr88](https://github.com/chazr88)                |                     [<img src=""https://github.com/favicon.ico"" width=""15""> joeluna17](https://github.com/joeluna17)                     |                                                            [<img src=""https://github.com/favicon.ico"" width=""15""> JimmyMcBride](https://github.com/JimmyMcBride)                                                            |                     [<img src=""https://github.com/favicon.ico"" width=""15""> aalejandromr](https://github.com/aalejandromr)                      |              [<img src=""https://github.com/favicon.ico"" width=""15""> willediger](https://github.com/willediger)              |             [<img src=""https://github.com/favicon.ico"" width=""15""> dave-vazquez](https://github.com/dave-vazquez)             |                                                                                                                                [<img src=""https://github.com/favicon.ico"" width=""15""> israelgonzalezb](https://github.com/israelgonzalezb)                                                                                                                                |             [<img src=""https://github.com/favicon.ico"" width=""15""> AlyssaSaez](https://github.com/AlyssaSaez)              |
|       [ <img src=""https://image.flaticon.com/icons/svg/2039/2039083.svg"" width=""15""> ](https://github.com/chazr88)       |     [ <img src=""https://static.licdn.com/sc/h/al2o9zrvru7aqj8e1x2rzsrca"" width=""15""> ](https://www.linkedin.com/in/joseph-luna-dev)     | [ <img src=""https://d2fltix0v2e0sb.cloudfront.net/dev-badge.svg"" width=""15""> ](https://dev.to/jimmymcbride) [ <img src=""https://image.flaticon.com/icons/svg/733/733579.svg"" width=""15""> ](https://twitter.com/McBride1105) |               [ <img src=""https://image.flaticon.com/icons/svg/2039/2039083.svg"" width=""15""> ](https://github.com/aalejandromr)                |       [ <img src=""https://image.flaticon.com/icons/svg/733/733579.svg"" width=""15""> ](https://twitter.com/willediger)        |       [ <img src=""https://image.flaticon.com/icons/svg/2039/2039083.svg"" width=""15""> ](https://github.com/dave-vazquez)       | [ <img src=""https://static.licdn.com/sc/h/al2o9zrvru7aqj8e1x2rzsrca"" width=""15""> ](https://www.linkedin.com/in/israel-gonzalez-brooks-15173a101/)[ <img src=""https://d2fltix0v2e0sb.cloudfront.net/dev-badge.svg"" width=""15""> ](https://dev.to/israelgonzalezb) [ <img src=""https://image.flaticon.com/icons/svg/733/733579.svg"" width=""15""> ](https://twitter.com/izzyz) | [ <img src=""https://static.licdn.com/sc/h/al2o9zrvru7aqj8e1x2rzsrca"" width=""15""> ](https://www.linkedin.com/in/AlyssaSaez) |

<br>
<br>

![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)
![GitHub package.json dependency version (prod)](https://img.shields.io/github/package-json/dependency-version/Lambda-School-Labs/nutrition-tracker-fe/firebase)
![GitHub package.json dependency version (prod)](https://img.shields.io/github/package-json/dependency-version/Lambda-School-Labs/nutrition-tracker-fe/react)
![GitHub package.json dependency version (prod)](https://img.shields.io/github/package-json/dependency-version/Lambda-School-Labs/nutrition-tracker-fe/redux)
![GitHub package.json dependency version (prod)](https://img.shields.io/github/package-json/dependency-version/Lambda-School-Labs/nutrition-tracker-fe/styled-components)
![GitHub package.json dependency version (prod)](https://img.shields.io/github/package-json/dependency-version/Lambda-School-Labs/nutrition-tracker-fe/reactstrap)
[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)

## Project Overview

A web application that allows users to track the food that they consume and which provides a visualization of eating patterns and nutritional data.

### Key Features

- Ability to sign up with email address or Google account
- Input info for Body Mass Index (BMI) calculation then determine their daily target caloric intake though activity level
- A way to update user info weekly to calculate progress on user set weight goals

## Tech Stack

### Front end built using:

#### React

- Makes writing components easy
- Ease of component reuse
- Mature dependency, informational and community ecosystem

#### Styling

##### bootstrap

- Allowed quick prototyping
- Various pre-built components
- Mature ecosystem

##### reactstrap

- Controllable pre-built react components

##### normalize.css

- Normalize browser styles
- Increased style consistency across different browsers

##### styled-components

- Allowed us to create components with applied styles and reuse them throughout the app
- Allowed us to create extensible higher-order components to apply styling

#### State management and Routing

##### redux

- Allowed us to manage complexity of state by keeping data in a single store as data changed throughout the app
- Mature ecosystem, high adoption rate among react community

##### redux-thunk

- Allows us to write action creators that dispatch asynchronously or conditionally

##### redux-logger

- Makes redux actions traceable and improves debuggability

##### react-router 

- Allowed us to conditionally render componets based on the URL the user is visiting
- Improved UX as it allows the app to behave in the way most websites behave and the way most users expect, i.e. as if there was a folder structure to the application

### Front end deployed to Firebase

- `firebase-tools` used to set up Firebase hosting and auth

#### [Back end](https://github.com/Lambda-School-Labs/nutrition-tracker-be) built using:

##### Express

- point one
- point two
- point three

##### PostgreSQL

- point one
- point two
- point three

# APIs

## Authentication

We used Firebase Authentication for user authentication and account creation. We used the Email/Password capability and the Google Account login method as well.

Details on how Firebase Authentication works can be found [here](https://firebase.google.com/docs/auth/web/start).

## API Documentation

Our app's API's are documented in Postman collections [here](https://nutrijournal.postman.co/workspaces/3f11e883-1e39-496e-ac06-063bb81be931/collections).

# Environment Variables

In order for the app to function correctly, the user must set up their own environment variables. There should be a .env file containing the following:

    *  REACT_APP_FIREBASE_KEY - this is your Google Firebase key, which can be generated in the [Google Firebase Console](https://console.firebase.google.com)
    *  REACT_APP_FIREBASE_DOMAIN - when you set up your Firebase project, this information will be in the dashboard
    *  REACT_APP_FIREBASE_DATABASE - in the Firebase dashboard
    *  REACT_APP_FIREBASE_PROJECT_ID - in the Firebase dashboard
    *  REACT_APP_FIREBASE_STORAGE_BUCKET - in the Firebase dashboard
    *  REACT_APP_FIREBASE_SENDER_ID - in the Firebase dashboard
    * REACT_APP_FIREBASE_APP_ID - in the Firebase dashboard

# Content Licenses

| Image Filename | Source / Creator | License                                                                      |
| -------------- | ---------------- | ---------------------------------------------------------------------------- |
| default-user-pic.jpeg    | Artist   | [Creative Commons](https://google.com) |
| Back SVG    | Artist   | [Creative Commons](https://google.com) |
| Calendar SVG    | Artist   | [Creative Commons](https://google.com) |
| Daily Log SVG    | Artist   | [Creative Commons](https://google.com) |
| Email SVG    | Artist   | [Creative Commons](https://google.com) |
| Facebook SVG   | Artist   | [Creative Commons](https://google.com) |
| Left Carot SVG   | Artist   | [Creative Commons](https://google.com) |
| Progress SVG    | Artist   | [Creative Commons](https://google.com) |
| Recipe SVG  | Artist   | [Creative Commons](https://google.com) |
| Right Carot SVG    | Artist   | [Creative Commons](https://google.com) |
| Ruler SVG   | Artist   | [Creative Commons](https://google.com) |
| Ruler SVG   | Artist   | [Creative Commons](https://google.com) |
| Scale SVG   | Artist   | [Creative Commons](https://google.com) |
| Scanner SVG    | Artist   | [Creative Commons](https://google.com) |
| Settings SVG    | Artist   | [Creative Commons](https://google.com) |



# Testing

Testing was done with [`jest`](https://jestjs.io/en) and [`enzyme`](https://airbnb.io/enzyme/), along with mutation tests using [`stryker`](https://stryker-mutator.io/). Jest and enzyme allowed us to create more dynamic tsts built around our redux framework. Stryker helped us increase the quality and depth of tests by substituting variable and functions with fake data, then checking if tests passed or failed with the substituted data.

# Installation Instructions

`$ yarn install`

## Other Scripts

`$ yarn start` - starts the production server

`$ yarn test` - runs Jest tests in watch mode

# Contributing

When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change.

Please note we have a [code of conduct](./CODE_OF_CONDUCT.md). Please follow it in all your interactions with the project.

## Issue/Bug Request

**If you are having an issue with the existing project code, please submit a bug report under the following guidelines:**

- Check first to see if your issue has already been reported.
- Check to see if the issue has recently been fixed by attempting to reproduce the issue using the latest master branch in the repository.
- Create a live example of the problem.
- Submit a detailed bug report including your environment & browser, steps to reproduce the issue, actual and expected outcomes, where you believe the issue is originating from, and any potential solutions you have considered.

### Feature Requests

We would love to hear from you about new features which would improve this app and further the aims of our project. Please provide as much detail and information as possible to show us why you think your new feature should be implemented.

### Pull Requests

If you have developed a patch, bug fix, or new feature that would improve this app, please submit a pull request. It is best to communicate your ideas with the developers first before investing a great deal of time into a pull request to ensure that it will mesh smoothly with the project.

Remember that this project is licensed under the MIT license, and by submitting a pull request, you agree that your work will be, too.

#### Pull Request Guidelines

- Ensure any install or build dependencies are removed before the end of the layer when doing a build.
- Update the README.md with details of changes to the interface, including new plist variables, exposed ports, useful file locations and container parameters.
- Ensure that your code conforms to our existing code conventions and test coverage.
- Include the relevant issue number, if applicable.
- You may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.

### Attribution

These contribution guidelines have been adapted from [this good-Contributing.md-template](https://gist.github.com/PurpleBooth/b24679402957c63ec426).

## Documentation

See [Backend Documentation](https://github.com/Lambda-School-Labs/nutrition-tracker-be/blob/master/README.md) for details on the backend of our project.

### Additional documentation

[Product Canvas](https://www.notion.so/Nutrition-Tracker-43bf4b85243d48aaa56c05ab6dbfdc23)

[Figma Prototype - Canvas 1.0 - (bootstrap, no added styles)](https://www.figma.com/file/y1CHPrRYVXDkP2PRHMdGl9/NutraJournal?node-id=2%3A78)

[DB Schema](https://dbdesigner.page.link/vdm7)

[Trello Board](https://trello.com/c/xQH6Q8Iw/77-rc-1-technical-research)
","nutrijournal

you can find the deployed project at getnutrijournalcomhttpwwwgetnutrijournalcom

 contributors

 chaz rowehttpsgithubcomchazr88 joseph lunahttpsjosephlunaportfolionetlifycom jimmy mcbridehttpsjimmymcbrideme alejandro mejiahttpscompassionatejoliot2c1114netlifycom will edigerhttpsgithubcomwillediger dave vazquezhttpsgithubcomdavevazquez izzy gonzalezbrookshttpsgithubcomisraelgonzalezb alyssa saezhttpsgithubcomalyssasaez 
 
 img srchttpscaslackedgecomt4jueb3meug81usdez032c4f65390f512 width 200 httpsgithubcomchazr88 img srchttpscaslackedgecomt4jueb3meufpqnawgmf9eca12accb9512 width 200 httpsjosephlunaportfolionetlifycom img srchttpscaslackedgecomt4jueb3meuftkaj54210bd26e82a74512 width 200 httpsjimmymcbrideme img srchttpscaslackedgecomt4jueb3meuhp1km82jc62ca48d2cc2512 width 200 httpscompassionatejoliot2c1114netlifycom img srchttpscaslackedgecomt4jueb3meud8j8bs1gd88134753726512 width 200 httpsgithubcomwillediger img srchttpscaslackedgecomt4jueb3meug7gf20rh3a4e10af9adb512 width 200 httpsgithubcomdavevazquez img srchttpscaslackedgecomt4jueb3meufkplsba4dbe33590e896512 width 200 httpsgithubcomisraelgonzalezb img srchttpsavatars0githubusercontentcomu47366310s400v4 width 200 httpsgithubcomalyssasaez 
 img srchttpsgithubcomfaviconico width15 chazr88httpsgithubcomchazr88 img srchttpsgithubcomfaviconico width15 joeluna17httpsgithubcomjoeluna17 img srchttpsgithubcomfaviconico width15 jimmymcbridehttpsgithubcomjimmymcbride img srchttpsgithubcomfaviconico width15 aalejandromrhttpsgithubcomaalejandromr img srchttpsgithubcomfaviconico width15 willedigerhttpsgithubcomwillediger img srchttpsgithubcomfaviconico width15 davevazquezhttpsgithubcomdavevazquez img srchttpsgithubcomfaviconico width15 israelgonzalezbhttpsgithubcomisraelgonzalezb img srchttpsgithubcomfaviconico width15 alyssasaezhttpsgithubcomalyssasaez 
 img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomchazr88 img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominjosephlunadev img srchttpsd2fltix0v2e0sbcloudfrontnetdevbadgesvg width15 httpsdevtojimmymcbride img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercommcbride1105 img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomaalejandromr img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercomwillediger img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomdavevazquez img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominisraelgonzalezbrooks15173a101 img srchttpsd2fltix0v2e0sbcloudfrontnetdevbadgesvg width15 httpsdevtoisraelgonzalezb img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercomizzyz img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominalyssasaez 

br
br

license mithttpsimgshieldsiobadgelicensemityellowsvg
github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfefirebase
github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfereact
github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerferedux
github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfestyledcomponents
github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfereactstrap
code style prettierhttpsimgshieldsiobadgecodestyleprettierff69b4svghttpsgithubcomprettierprettier

 project overview

a web application that allows users to track the food that they consume and which provides a visualization of eating patterns and nutritional data

 key features

 ability to sign up with email address or google account
 input info for body mass index bmi calculation then determine their daily target caloric intake though activity level
 a way to update user info weekly to calculate progress on user set weight goals

 tech stack

 front end built using

 react

 makes writing components easy
 ease of component reuse
 mature dependency informational and community ecosystem

 styling

 bootstrap

 allowed quick prototyping
 various prebuilt components
 mature ecosystem

 reactstrap

 controllable prebuilt react components

 normalizecss

 normalize browser styles
 increased style consistency across different browsers

 styledcomponents

 allowed us to create components with applied styles and reuse them throughout the app
 allowed us to create extensible higherorder components to apply styling

 state management and routing

 redux

 allowed us to manage complexity of state by keeping data in a single store as data changed throughout the app
 mature ecosystem high adoption rate among react community

 reduxthunk

 allows us to write action creators that dispatch asynchronously or conditionally

 reduxlogger

 makes redux actions traceable and improves debuggability

 reactrouter 

 allowed us to conditionally render componets based on the url the user is visiting
 improved ux as it allows the app to behave in the way most websites behave and the way most users expect ie as if there was a folder structure to the application

 front end deployed to firebase

 firebasetools used to set up firebase hosting and auth

 back endhttpsgithubcomlambdaschoollabsnutritiontrackerbe built using

 express

 point one
 point two
 point three

 postgresql

 point one
 point two
 point three

 apis

 authentication

we used firebase authentication for user authentication and account creation we used the emailpassword capability and the google account login method as well

details on how firebase authentication works can be found herehttpsfirebasegooglecomdocsauthwebstart

 api documentation

our app ' s api ' s are documented in postman collections herehttpsnutrijournalpostmancoworkspaces3f11e8831e39496eac06063bb81be931collections

 environment variables

in order for the app to function correctly the user must set up their own environment variables there should be a env file containing the following

 reactappfirebasekey this is your google firebase key which can be generated in the google firebase consolehttpsconsolefirebasegooglecom
 reactappfirebasedomain when you set up your firebase project this information will be in the dashboard
 reactappfirebasedatabase in the firebase dashboard
 reactappfirebaseprojectid in the firebase dashboard
 reactappfirebasestoragebucket in the firebase dashboard
 reactappfirebasesenderid in the firebase dashboard
 reactappfirebaseappid in the firebase dashboard

 content licenses

 image filename source creator license 
 
 defaultuserpicjpeg artist creative commonshttpsgooglecom 
 back svg artist creative commonshttpsgooglecom 
 calendar svg artist creative commonshttpsgooglecom 
 daily log svg artist creative commonshttpsgooglecom 
 email svg artist creative commonshttpsgooglecom 
 facebook svg artist creative commonshttpsgooglecom 
 left carot svg artist creative commonshttpsgooglecom 
 progress svg artist creative commonshttpsgooglecom 
 recipe svg artist creative commonshttpsgooglecom 
 right carot svg artist creative commonshttpsgooglecom 
 ruler svg artist creative commonshttpsgooglecom 
 ruler svg artist creative commonshttpsgooglecom 
 scale svg artist creative commonshttpsgooglecom 
 scanner svg artist creative commonshttpsgooglecom 
 settings svg artist creative commonshttpsgooglecom 



 testing

testing was done with jesthttpsjestjsioen and enzymehttpsairbnbioenzyme along with mutation tests using strykerhttpsstrykermutatorio jest and enzyme allowed us to create more dynamic tsts built around our redux framework stryker helped us increase the quality and depth of tests by substituting variable and functions with fake data then checking if tests passed or failed with the substituted data

 installation instructions

 yarn install

 other scripts

 yarn start starts the production server

 yarn test runs jest tests in watch mode

 contributing

when contributing to this repository please first discuss the change you wish to make via issue email or any other method with the owners of this repository before making a change

please note we have a code of conductcodeofconductmd please follow it in all your interactions with the project

 issuebug request

if you are having an issue with the existing project code please submit a bug report under the following guidelines

 check first to see if your issue has already been reported
 check to see if the issue has recently been fixed by attempting to reproduce the issue using the latest master branch in the repository
 create a live example of the problem
 submit a detailed bug report including your environment browser steps to reproduce the issue actual and expected outcomes where you believe the issue is originating from and any potential solutions you have considered

 feature requests

we would love to hear from you about new features which would improve this app and further the aims of our project please provide as much detail and information as possible to show us why you think your new feature should be implemented

 pull requests

if you have developed a patch bug fix or new feature that would improve this app please submit a pull request it is best to communicate your ideas with the developers first before investing a great deal of time into a pull request to ensure that it will mesh smoothly with the project

remember that this project is licensed under the mit license and by submitting a pull request you agree that your work will be too

 pull request guidelines

 ensure any install or build dependencies are removed before the end of the layer when doing a build
 update the readmemd with details of changes to the interface including new plist variables exposed ports useful file locations and container parameters
 ensure that your code conforms to our existing code conventions and test coverage
 include the relevant issue number if applicable
 you may merge the pull request in once you have the signoff of two other developers or if you do not have permission to do that you may request the second reviewer to merge it for you

 attribution

these contribution guidelines have been adapted from this goodcontributingmdtemplatehttpsgistgithubcompurpleboothb24679402957c63ec426

 documentation

see backend documentationhttpsgithubcomlambdaschoollabsnutritiontrackerbeblobmasterreadmemd for details on the backend of our project

 additional documentation

product canvashttpswwwnotionsonutritiontracker43bf4b85243d48aaa56c05ab6dbfdc23

figma prototype canvas 10 bootstrap no added styleshttpswwwfigmacomfiley1chprryvxdkp2prhmdgl9nutrajournalnodeid23a78

db schemahttpsdbdesignerpagelinkvdm7

trello boardhttpstrellocomcxqh6q8iw77rc1technicalresearch",nutrijourn find deploy project getnutrijournalcomhttpwwwgetnutrijournalcom contributor chaz rowehttpsgithubcomchazr88 joseph lunahttpsjosephlunaportfolionetlifycom jimmi mcbridehttpsjimmymcbridem alejandro mejiahttpscompassionatejoliot2c1114netlifycom edigerhttpsgithubcomwilledig dave vazquezhttpsgithubcomdavevazquez izzi gonzalezbrookshttpsgithubcomisraelgonzalezb alyssa saezhttpsgithubcomalyssasaez img srchttpscaslackedgecomt4jueb3meug81usdez032c4f65390f512 width 200 httpsgithubcomchazr88 img srchttpscaslackedgecomt4jueb3meufpqnawgmf9eca12accb9512 width 200 httpsjosephlunaportfolionetlifycom img srchttpscaslackedgecomt4jueb3meuftkaj54210bd26e82a74512 width 200 httpsjimmymcbridem img srchttpscaslackedgecomt4jueb3meuhp1km82jc62ca48d2cc2512 width 200 httpscompassionatejoliot2c1114netlifycom img srchttpscaslackedgecomt4jueb3meud8j8bs1gd88134753726512 width 200 httpsgithubcomwilledig img srchttpscaslackedgecomt4jueb3meug7gf20rh3a4e10af9adb512 width 200 httpsgithubcomdavevazquez img srchttpscaslackedgecomt4jueb3meufkplsba4dbe33590e896512 width 200 httpsgithubcomisraelgonzalezb img srchttpsavatars0githubusercontentcomu47366310s400v4 width 200 httpsgithubcomalyssasaez img srchttpsgithubcomfaviconico width15 chazr88httpsgithubcomchazr88 img srchttpsgithubcomfaviconico width15 joeluna17httpsgithubcomjoeluna17 img srchttpsgithubcomfaviconico width15 jimmymcbridehttpsgithubcomjimmymcbrid img srchttpsgithubcomfaviconico width15 aalejandromrhttpsgithubcomaalejandromr img srchttpsgithubcomfaviconico width15 willedigerhttpsgithubcomwilledig img srchttpsgithubcomfaviconico width15 davevazquezhttpsgithubcomdavevazquez img srchttpsgithubcomfaviconico width15 israelgonzalezbhttpsgithubcomisraelgonzalezb img srchttpsgithubcomfaviconico width15 alyssasaezhttpsgithubcomalyssasaez img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomchazr88 img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominjosephlunadev img srchttpsd2fltix0v2e0sbcloudfrontnetdevbadgesvg width15 httpsdevtojimmymcbrid img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercommcbride1105 img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomaalejandromr img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercomwilledig img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomdavevazquez img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominisraelgonzalezbrooks15173a101 img srchttpsd2fltix0v2e0sbcloudfrontnetdevbadgesvg width15 httpsdevtoisraelgonzalezb img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercomizzyz img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominalyssasaez br br licens mithttpsimgshieldsiobadgelicensemityellowsvg github packagejson depend version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfefirebas github packagejson depend version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfereact github packagejson depend version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerferedux github packagejson depend version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfestyledcompon github packagejson depend version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfereactstrap code style prettierhttpsimgshieldsiobadgecodestyleprettierff69b4svghttpsgithubcomprettierpretti project overview web applic allow user track food consum provid visual eat pattern nutrit data key featur abil sign email address googl account input info bodi mass index bmi calcul determin daili target calor intak though activ level way updat user info weekli calcul progress user set weight goal tech stack front end built use react make write compon easi eas compon reus matur depend inform commun ecosystem style bootstrap allow quick prototyp variou prebuilt compon matur ecosystem reactstrap control prebuilt react compon normalizecss normal browser style increas style consist across differ browser styledcompon allow us creat compon appli style reus throughout app allow us creat extens higherord compon appli style state manag rout redux allow us manag complex state keep data singl store data chang throughout app matur ecosystem high adopt rate among react commun reduxthunk allow us write action creator dispatch asynchron condit reduxlogg make redux action traceabl improv debugg reactrout allow us condit render componet base url user visit improv ux allow app behav way websit behav way user expect ie wa folder structur applic front end deploy firebas firebasetool use set firebas host auth back endhttpsgithubcomlambdaschoollabsnutritiontrackerb built use express point one point two point three postgresql point one point two point three api authent use firebas authent user authent account creation use emailpassword capabl googl account login method well detail firebas authent work found herehttpsfirebasegooglecomdocsauthwebstart api document app ' api ' document postman collect herehttpsnutrijournalpostmancoworkspaces3f11e8831e39496eac06063bb81be931collect environ variabl order app function correctli user must set environ variabl env file contain follow reactappfirebasekey thi googl firebas key gener googl firebas consolehttpsconsolefirebasegooglecom reactappfirebasedomain set firebas project thi inform dashboard reactappfirebasedatabas firebas dashboard reactappfirebaseprojectid firebas dashboard reactappfirebasestoragebucket firebas dashboard reactappfirebasesenderid firebas dashboard reactappfirebaseappid firebas dashboard content licens imag filenam sourc creator licens defaultuserpicjpeg artist creativ commonshttpsgooglecom back svg artist creativ commonshttpsgooglecom calendar svg artist creativ commonshttpsgooglecom daili log svg artist creativ commonshttpsgooglecom email svg artist creativ commonshttpsgooglecom facebook svg artist creativ commonshttpsgooglecom left carot svg artist creativ commonshttpsgooglecom progress svg artist creativ commonshttpsgooglecom recip svg artist creativ commonshttpsgooglecom right carot svg artist creativ commonshttpsgooglecom ruler svg artist creativ commonshttpsgooglecom ruler svg artist creativ commonshttpsgooglecom scale svg artist creativ commonshttpsgooglecom scanner svg artist creativ commonshttpsgooglecom set svg artist creativ commonshttpsgooglecom test test wa done jesthttpsjestjsioen enzymehttpsairbnbioenzym along mutat test use strykerhttpsstrykermutatorio jest enzym allow us creat dynam tst built around redux framework stryker help us increas qualiti depth test substitut variabl function fake data check test pass fail substitut data instal instruct yarn instal script yarn start start product server yarn test run jest test watch mode contribut contribut thi repositori pleas first discuss chang wish make via issu email ani method owner thi repositori befor make chang pleas note code conductcodeofconductmd pleas follow interact project issuebug request issu exist project code pleas submit bug report follow guidelin check first see issu ha alreadi report check see issu ha recent fix attempt reproduc issu use latest master branch repositori creat live exampl problem submit detail bug report includ environ browser step reproduc issu actual expect outcom believ issu origin ani potenti solut consid featur request would love hear new featur would improv thi app aim project pleas provid much detail inform possibl show us whi think new featur implement pull request develop patch bug fix new featur would improv thi app pleas submit pull request best commun idea develop first befor invest great deal time pull request ensur mesh smoothli project rememb thi project licens mit licens submit pull request agre work pull request guidelin ensur ani instal build depend remov befor end layer build updat readmemd detail chang interfac includ new plist variabl expos port use file locat contain paramet ensur code conform exist code convent test coverag includ relev issu number applic may merg pull request onc signoff two develop permiss may request second review merg attribut contribut guidelin adapt thi goodcontributingmdtemplatehttpsgistgithubcompurpleboothb24679402957c63ec426 document see backend documentationhttpsgithubcomlambdaschoollabsnutritiontrackerbeblobmasterreadmemd detail backend project addit document product canvashttpswwwnotionsonutritiontracker43bf4b85243d48aaa56c05ab6dbfdc23 figma prototyp canva 10 bootstrap ad styleshttpswwwfigmacomfiley1chprryvxdkp2prhmdgl9nutrajournalnodeid23a78 db schemahttpsdbdesignerpagelinkvdm7 trello boardhttpstrellocomcxqh6q8iw77rc1technicalresearch,nutrijournal find deployed project getnutrijournalcomhttpwwwgetnutrijournalcom contributor chaz rowehttpsgithubcomchazr88 joseph lunahttpsjosephlunaportfolionetlifycom jimmy mcbridehttpsjimmymcbrideme alejandro mejiahttpscompassionatejoliot2c1114netlifycom edigerhttpsgithubcomwillediger dave vazquezhttpsgithubcomdavevazquez izzy gonzalezbrookshttpsgithubcomisraelgonzalezb alyssa saezhttpsgithubcomalyssasaez img srchttpscaslackedgecomt4jueb3meug81usdez032c4f65390f512 width 200 httpsgithubcomchazr88 img srchttpscaslackedgecomt4jueb3meufpqnawgmf9eca12accb9512 width 200 httpsjosephlunaportfolionetlifycom img srchttpscaslackedgecomt4jueb3meuftkaj54210bd26e82a74512 width 200 httpsjimmymcbrideme img srchttpscaslackedgecomt4jueb3meuhp1km82jc62ca48d2cc2512 width 200 httpscompassionatejoliot2c1114netlifycom img srchttpscaslackedgecomt4jueb3meud8j8bs1gd88134753726512 width 200 httpsgithubcomwillediger img srchttpscaslackedgecomt4jueb3meug7gf20rh3a4e10af9adb512 width 200 httpsgithubcomdavevazquez img srchttpscaslackedgecomt4jueb3meufkplsba4dbe33590e896512 width 200 httpsgithubcomisraelgonzalezb img srchttpsavatars0githubusercontentcomu47366310s400v4 width 200 httpsgithubcomalyssasaez img srchttpsgithubcomfaviconico width15 chazr88httpsgithubcomchazr88 img srchttpsgithubcomfaviconico width15 joeluna17httpsgithubcomjoeluna17 img srchttpsgithubcomfaviconico width15 jimmymcbridehttpsgithubcomjimmymcbride img srchttpsgithubcomfaviconico width15 aalejandromrhttpsgithubcomaalejandromr img srchttpsgithubcomfaviconico width15 willedigerhttpsgithubcomwillediger img srchttpsgithubcomfaviconico width15 davevazquezhttpsgithubcomdavevazquez img srchttpsgithubcomfaviconico width15 israelgonzalezbhttpsgithubcomisraelgonzalezb img srchttpsgithubcomfaviconico width15 alyssasaezhttpsgithubcomalyssasaez img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomchazr88 img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominjosephlunadev img srchttpsd2fltix0v2e0sbcloudfrontnetdevbadgesvg width15 httpsdevtojimmymcbride img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercommcbride1105 img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomaalejandromr img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercomwillediger img srchttpsimageflaticoncomiconssvg20392039083svg width15 httpsgithubcomdavevazquez img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominisraelgonzalezbrooks15173a101 img srchttpsd2fltix0v2e0sbcloudfrontnetdevbadgesvg width15 httpsdevtoisraelgonzalezb img srchttpsimageflaticoncomiconssvg733733579svg width15 httpstwittercomizzyz img srchttpsstaticlicdncomschal2o9zrvru7aqj8e1x2rzsrca width15 httpswwwlinkedincominalyssasaez br br license mithttpsimgshieldsiobadgelicensemityellowsvg github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfefirebase github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfereact github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerferedux github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfestyledcomponents github packagejson dependency version prodhttpsimgshieldsiogithubpackagejsondependencyversionlambdaschoollabsnutritiontrackerfereactstrap code style prettierhttpsimgshieldsiobadgecodestyleprettierff69b4svghttpsgithubcomprettierprettier project overview web application allows user track food consume provides visualization eating pattern nutritional data key feature ability sign email address google account input info body mass index bmi calculation determine daily target caloric intake though activity level way update user info weekly calculate progress user set weight goal tech stack front end built using react make writing component easy ease component reuse mature dependency informational community ecosystem styling bootstrap allowed quick prototyping various prebuilt component mature ecosystem reactstrap controllable prebuilt react component normalizecss normalize browser style increased style consistency across different browser styledcomponents allowed u create component applied style reuse throughout app allowed u create extensible higherorder component apply styling state management routing redux allowed u manage complexity state keeping data single store data changed throughout app mature ecosystem high adoption rate among react community reduxthunk allows u write action creator dispatch asynchronously conditionally reduxlogger make redux action traceable improves debuggability reactrouter allowed u conditionally render componets based url user visiting improved ux allows app behave way website behave way user expect ie wa folder structure application front end deployed firebase firebasetools used set firebase hosting auth back endhttpsgithubcomlambdaschoollabsnutritiontrackerbe built using express point one point two point three postgresql point one point two point three apis authentication used firebase authentication user authentication account creation used emailpassword capability google account login method well detail firebase authentication work found herehttpsfirebasegooglecomdocsauthwebstart api documentation app ' api ' documented postman collection herehttpsnutrijournalpostmancoworkspaces3f11e8831e39496eac06063bb81be931collections environment variable order app function correctly user must set environment variable env file containing following reactappfirebasekey google firebase key generated google firebase consolehttpsconsolefirebasegooglecom reactappfirebasedomain set firebase project information dashboard reactappfirebasedatabase firebase dashboard reactappfirebaseprojectid firebase dashboard reactappfirebasestoragebucket firebase dashboard reactappfirebasesenderid firebase dashboard reactappfirebaseappid firebase dashboard content license image filename source creator license defaultuserpicjpeg artist creative commonshttpsgooglecom back svg artist creative commonshttpsgooglecom calendar svg artist creative commonshttpsgooglecom daily log svg artist creative commonshttpsgooglecom email svg artist creative commonshttpsgooglecom facebook svg artist creative commonshttpsgooglecom left carot svg artist creative commonshttpsgooglecom progress svg artist creative commonshttpsgooglecom recipe svg artist creative commonshttpsgooglecom right carot svg artist creative commonshttpsgooglecom ruler svg artist creative commonshttpsgooglecom ruler svg artist creative commonshttpsgooglecom scale svg artist creative commonshttpsgooglecom scanner svg artist creative commonshttpsgooglecom setting svg artist creative commonshttpsgooglecom testing testing wa done jesthttpsjestjsioen enzymehttpsairbnbioenzyme along mutation test using strykerhttpsstrykermutatorio jest enzyme allowed u create dynamic tsts built around redux framework stryker helped u increase quality depth test substituting variable function fake data checking test passed failed substituted data installation instruction yarn install script yarn start start production server yarn test run jest test watch mode contributing contributing repository please first discus change wish make via issue email method owner repository making change please note code conductcodeofconductmd please follow interaction project issuebug request issue existing project code please submit bug report following guideline check first see issue ha already reported check see issue ha recently fixed attempting reproduce issue using latest master branch repository create live example problem submit detailed bug report including environment browser step reproduce issue actual expected outcome believe issue originating potential solution considered feature request would love hear new feature would improve app aim project please provide much detail information possible show u think new feature implemented pull request developed patch bug fix new feature would improve app please submit pull request best communicate idea developer first investing great deal time pull request ensure mesh smoothly project remember project licensed mit license submitting pull request agree work pull request guideline ensure install build dependency removed end layer build update readmemd detail change interface including new plist variable exposed port useful file location container parameter ensure code conforms existing code convention test coverage include relevant issue number applicable may merge pull request signoff two developer permission may request second reviewer merge attribution contribution guideline adapted goodcontributingmdtemplatehttpsgistgithubcompurpleboothb24679402957c63ec426 documentation see backend documentationhttpsgithubcomlambdaschoollabsnutritiontrackerbeblobmasterreadmemd detail backend project additional documentation product canvashttpswwwnotionsonutritiontracker43bf4b85243d48aaa56c05ab6dbfdc23 figma prototype canvas 10 bootstrap added styleshttpswwwfigmacomfiley1chprryvxdkp2prhmdgl9nutrajournalnodeid23a78 db schemahttpsdbdesignerpagelinkvdm7 trello boardhttpstrellocomcxqh6q8iw77rc1technicalresearch
JavaScript,"# Nutritionix package for Node.js
[![Build Status](https://travis-ci.org/picsoung/sleep-sort.png?branch=master)](https://travis-ci.org/picsoung/sleep-sort)

This is a simple wrapper for the [Nutritionix](www.nutritionix.com) API.

[Nutritionix](www.nutritionix.com) is a database of nutrition facts of every food item.

# Installing

`npm install nutritionix`

# Developer Portal

To use this package you need to get API keys form [Nutritionix API portal](https://developer.nutritionix.com).

The documentation of the API could be found [here](https://developer.nutritionix.com/docs/v1_1)

# Usage

```javascript
var Nutritionix = require('nutritionix');
var nutri = new Nutritionix('YOUR_API_KEY','YOUR_APP_ID');

//Search for a brand named coca-cola
nutri.searchBrand({query:""coca-cola""},function(result){
	console.log(result);
});

//Search nutrition fact of an item with barcode = 52200004265
// here it corresponds to Bay cereals for Beet nuts brand
nutri.getItemByUPC(""52200004265"",function(result){
	console.log(result);
});
```
[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/picsoung/node-nutritionix/trend.png)](https://bitdeli.com/free ""Bitdeli Badge"")
","nutritionix package for nodejs
build statushttpstravisciorgpicsoungsleepsortpngbranchmasterhttpstravisciorgpicsoungsleepsort

this is a simple wrapper for the nutritionixwwwnutritionixcom api

nutritionixwwwnutritionixcom is a database of nutrition facts of every food item

 installing

npm install nutritionix

 developer portal

to use this package you need to get api keys form nutritionix api portalhttpsdevelopernutritionixcom

the documentation of the api could be found herehttpsdevelopernutritionixcomdocsv11

 usage

javascript
var nutritionix require ' nutritionix ' 
var nutri new nutritionix ' yourapikey ' ' yourappid ' 

search for a brand named cocacola
nutrisearchbrandquerycocacolafunctionresult
 &#9; consolelogresult


search nutrition fact of an item with barcode 52200004265
 here it corresponds to bay cereals for beet nuts brand
nutrigetitembyupc52200004265functionresult
 &#9; consolelogresult


bitdeli badgehttpsd2weczhvl823v0cloudfrontnetpicsoungnodenutritionixtrendpnghttpsbitdelicomfree bitdeli badge",nutritionix packag nodej build statushttpstravisciorgpicsoungsleepsortpngbranchmasterhttpstravisciorgpicsoungsleepsort thi simpl wrapper nutritionixwwwnutritionixcom api nutritionixwwwnutritionixcom databas nutrit fact everi food item instal npm instal nutritionix develop portal use thi packag need get api key form nutritionix api portalhttpsdevelopernutritionixcom document api could found herehttpsdevelopernutritionixcomdocsv11 usag javascript var nutritionix requir ' nutritionix ' var nutri new nutritionix ' yourapikey ' ' yourappid ' search brand name cocacola nutrisearchbrandquerycocacolafunctionresult &#9; consolelogresult search nutrit fact item barcod 52200004265 correspond bay cereal beet nut brand nutrigetitembyupc52200004265functionresult &#9; consolelogresult bitd badgehttpsd2weczhvl823v0cloudfrontnetpicsoungnodenutritionixtrendpnghttpsbitdelicomfre bitd badg,nutritionix package nodejs build statushttpstravisciorgpicsoungsleepsortpngbranchmasterhttpstravisciorgpicsoungsleepsort simple wrapper nutritionixwwwnutritionixcom api nutritionixwwwnutritionixcom database nutrition fact every food item installing npm install nutritionix developer portal use package need get api key form nutritionix api portalhttpsdevelopernutritionixcom documentation api could found herehttpsdevelopernutritionixcomdocsv11 usage javascript var nutritionix require ' nutritionix ' var nutri new nutritionix ' yourapikey ' ' yourappid ' search brand named cocacola nutrisearchbrandquerycocacolafunctionresult &#9; consolelogresult search nutrition fact item barcode 52200004265 corresponds bay cereal beet nut brand nutrigetitembyupc52200004265functionresult &#9; consolelogresult bitdeli badgehttpsd2weczhvl823v0cloudfrontnetpicsoungnodenutritionixtrendpnghttpsbitdelicomfree bitdeli badge
JavaScript,"The administrator manual is intended for the person setting up the system. This needs to include all software and hardware dependencies, download instructions, and any hardware set-up instructions. This is the place to document what systems have been tested, what the expected compatabilities are and any known incompatabilities. If the administrator needs to set up ids and passwords before the system is fully deployed, this needs to be covered in this manual. The administrator manual should include a complete set of easy-to-follow instructions of how to deploy the system in a new environment or how to redeploy the system if it needs to be restarted or refreshed. You again need to be cognizant of the skill level of the administrator. You can assume that it is an adult, but given the intended audience, you must determine the appropriate level of skills that you can assume. This again should be defined in your user descriptions.

Greetings! Thank you for using NutruitionDB, a creation of the COMP 523: Software Engineering course. Authors: Katie Hawthorne (kathryne), Tommy Ferguson (atfergus), Gautam Sanka (gausanka). 

In this document, we will walk you through the process of setting up NutrutionDB on your own server. 

System Requirements:
--PHP
--MySQL
--Public Server Space
--Google Drive  

Dependencies:

1. Make sure that you have PHP installed on your server. This system has been tested and is known to be compatible with PHP version 5.3.15. The installation of PHP is outside the scope of this administrator manual - please check with your server admin to go through this process. 

2. Ensure that you have access to a server running MySQL. Please check with your server administrator to set up a database and provide access to this. 

4. You will need a Google Drive account to store photos. 

3. As NuTRUtion is a web-based application, you will need a server that is publicly accessible. You may need to work with your server admin to ensure that the file space has the correct file permissions and access rights. 

Setting Up NuTRUtion: 
1. Setting up the database
To set up the NuTRUtion database, run the nutritiondb.sql script when logged into a machine running MySQL. This should be performed after creating your database and logging into the database. See your server admin if you need information about login and access information for your database. This script will create all of the tables used in the NuTRUtion web application. 

2. Setting up the website
To set up the website, copy the entire nutrition folder into a publicly-readable folder on your server running PHP. This may be nested however is desirable for your URL structure. You will also need to modify the file dbconnect.php (in the utils folder) to reflect the correct login and credentials for your MySQL server. In this file, modify the lines that define the $host, $username, $password, and $database. You may need to ask your server admin for this information. Replace the values in strings with the correct values that represent your setup. 

3. Setting up Google Drive
To set up the Google Drive Account, create a Google Account. The current system is using the nutrutionation Google account. Go to http://drive.google.com and create a new folder. The new folder is to be created with the setting that it is publicly accessible on the internet. This setting will then extend to any images that are then subsequently added to the folder. The folder will now have a identifier that can be used to find the image files on the web.

Editing NuTRUtion System Settings:
1. Changing verification
After your server is up and running, navigate to the Settings page and scroll down to the Admin Settings section. There is an input box that allows you to enter a numerical value. This value represents the number of agreeing submissions that must be captured before a value is considered to be correct from user input data. 

Using NuTRUtion
1. Adding data
After your server is up and running, navigate to the Settings page and scroll down to the Admin Settings section. To add data to the NuTRUtion database, you should have a .csv (comma separated value) file that contains data collected from nutrition labels that have been OCRed. Remove the first line of column headings if present, and then upload the file. You should see a success statement after the page reloads indicating that the file has been successfully imported to the database. 

2. Adding photos
The photos should be added to the Google Drive Account at http://www.drive.google.com with the username of nutrutionnation. The folder NNImages contains the existing images and the new images need to be added to this folder. To upload, press on the red upload button on the top left and select the images files to be uploaded. 

3. Retrieving data
After your server is up and running, navigate to the Settings page and scroll down to the Admin Settings section. Click on the button that indicates that you can download completed nutrition label information, and you will receive a .csv file of all labels that have been successfully corrected. This file can then be imported into Excel or your favorite analysis tool. 

4. Viewing user activity 
Navigating to the Settings page, scroll down and you will find a drop-down list of all the users in the database. Selecting a user will provide their details: id, username, number of submissions and their admin status. 

Correcting Nutrition Data:
A more detailed, with pictures, guide to correcting nutrition data can be found at help.php when navigated to from your web browser running a successfully deployed version of NuTRUtion. 

    Sign up for an account.
    Log in or use the site as a guest.
    Compare user values in the table to the images of a nutrition label.
        If the value is correct and matches the image of a nutrition label, click the ""correct"" checkbox.
        If the value is not correct, edit the value in the input box.
        If a value is zero, by default it isn't added to the nutrition label table. 
        If a value is missing from the nutrition label input data, but is present in the image, click to add it.
    Continue down the nutrition label, and submit it at the end.
    Repeat! Thank you for participating in NuTRUtion!","the administrator manual is intended for the person setting up the system this needs to include all software and hardware dependencies download instructions and any hardware setup instructions this is the place to document what systems have been tested what the expected compatabilities are and any known incompatabilities if the administrator needs to set up ids and passwords before the system is fully deployed this needs to be covered in this manual the administrator manual should include a complete set of easytofollow instructions of how to deploy the system in a new environment or how to redeploy the system if it needs to be restarted or refreshed you again need to be cognizant of the skill level of the administrator you can assume that it is an adult but given the intended audience you must determine the appropriate level of skills that you can assume this again should be defined in your user descriptions

greetings thank you for using nutruitiondb a creation of the comp 523 software engineering course authors katie hawthorne kathryne tommy ferguson atfergus gautam sanka gausanka 

in this document we will walk you through the process of setting up nutrutiondb on your own server 

system requirements
php
mysql
public server space
google drive 

dependencies

1 make sure that you have php installed on your server this system has been tested and is known to be compatible with php version 5315 the installation of php is outside the scope of this administrator manual please check with your server admin to go through this process 

2 ensure that you have access to a server running mysql please check with your server administrator to set up a database and provide access to this 

4 you will need a google drive account to store photos 

3 as nutrution is a webbased application you will need a server that is publicly accessible you may need to work with your server admin to ensure that the file space has the correct file permissions and access rights 

setting up nutrution 
1 setting up the database
to set up the nutrution database run the nutritiondbsql script when logged into a machine running mysql this should be performed after creating your database and logging into the database see your server admin if you need information about login and access information for your database this script will create all of the tables used in the nutrution web application 

2 setting up the website
to set up the website copy the entire nutrition folder into a publiclyreadable folder on your server running php this may be nested however is desirable for your url structure you will also need to modify the file dbconnectphp in the utils folder to reflect the correct login and credentials for your mysql server in this file modify the lines that define the host username password and database you may need to ask your server admin for this information replace the values in strings with the correct values that represent your setup 

3 setting up google drive
to set up the google drive account create a google account the current system is using the nutrutionation google account go to httpdrivegooglecom and create a new folder the new folder is to be created with the setting that it is publicly accessible on the internet this setting will then extend to any images that are then subsequently added to the folder the folder will now have a identifier that can be used to find the image files on the web

editing nutrution system settings
1 changing verification
after your server is up and running navigate to the settings page and scroll down to the admin settings section there is an input box that allows you to enter a numerical value this value represents the number of agreeing submissions that must be captured before a value is considered to be correct from user input data 

using nutrution
1 adding data
after your server is up and running navigate to the settings page and scroll down to the admin settings section to add data to the nutrution database you should have a csv comma separated value file that contains data collected from nutrition labels that have been ocred remove the first line of column headings if present and then upload the file you should see a success statement after the page reloads indicating that the file has been successfully imported to the database 

2 adding photos
the photos should be added to the google drive account at httpwwwdrivegooglecom with the username of nutrutionnation the folder nnimages contains the existing images and the new images need to be added to this folder to upload press on the red upload button on the top left and select the images files to be uploaded 

3 retrieving data
after your server is up and running navigate to the settings page and scroll down to the admin settings section click on the button that indicates that you can download completed nutrition label information and you will receive a csv file of all labels that have been successfully corrected this file can then be imported into excel or your favorite analysis tool 

4 viewing user activity 
navigating to the settings page scroll down and you will find a dropdown list of all the users in the database selecting a user will provide their details id username number of submissions and their admin status 

correcting nutrition data
a more detailed with pictures guide to correcting nutrition data can be found at helpphp when navigated to from your web browser running a successfully deployed version of nutrution 

 sign up for an account
 log in or use the site as a guest
 compare user values in the table to the images of a nutrition label
 if the value is correct and matches the image of a nutrition label click the correct checkbox
 if the value is not correct edit the value in the input box
 if a value is zero by default it isn ' t added to the nutrition label table 
 if a value is missing from the nutrition label input data but is present in the image click to add it
 continue down the nutrition label and submit it at the end
 repeat thank you for participating in nutrution",administr manual intend person set system thi need includ softwar hardwar depend download instruct ani hardwar setup instruct thi place document system test expect compat ani known incompat administr need set id password befor system fulli deploy thi need cover thi manual administr manual includ complet set easytofollow instruct deploy system new environ redeploy system need restart refresh need cogniz skill level administr assum adult given intend audienc must determin appropri level skill assum thi defin user descript greet thank use nutruitiondb creation comp 523 softwar engin cours author kati hawthorn kathryn tommi ferguson atfergu gautam sanka gausanka thi document walk process set nutrutiondb server system requir php mysql public server space googl drive depend 1 make sure php instal server thi system ha test known compat php version 5315 instal php outsid scope thi administr manual pleas check server admin go thi process 2 ensur access server run mysql pleas check server administr set databas provid access thi 4 need googl drive account store photo 3 nutrut webbas applic need server publicli access may need work server admin ensur file space ha correct file permiss access right set nutrut 1 set databas set nutrut databas run nutritiondbsql script log machin run mysql thi perform creat databas log databas see server admin need inform login access inform databas thi script creat tabl use nutrut web applic 2 set websit set websit copi entir nutrit folder publiclyread folder server run php thi may nest howev desir url structur also need modifi file dbconnectphp util folder reflect correct login credenti mysql server thi file modifi line defin host usernam password databas may need ask server admin thi inform replac valu string correct valu repres setup 3 set googl drive set googl drive account creat googl account current system use nutrution googl account go httpdrivegooglecom creat new folder new folder creat set publicli access internet thi set extend ani imag subsequ ad folder folder identifi use find imag file web edit nutrut system set 1 chang verif server run navig set page scroll admin set section input box allow enter numer valu thi valu repres number agre submiss must captur befor valu consid correct user input data use nutrut 1 ad data server run navig set page scroll admin set section add data nutrut databas csv comma separ valu file contain data collect nutrit label ocr remov first line column head present upload file see success statement page reload indic file ha success import databas 2 ad photo photo ad googl drive account httpwwwdrivegooglecom usernam nutrutionn folder nnimag contain exist imag new imag need ad thi folder upload press red upload button top left select imag file upload 3 retriev data server run navig set page scroll admin set section click button indic download complet nutrit label inform receiv csv file label success correct thi file import excel favorit analysi tool 4 view user activ navig set page scroll find dropdown list user databas select user provid detail id usernam number submiss admin statu correct nutrit data detail pictur guid correct nutrit data found helpphp navig web browser run success deploy version nutrut sign account log use site guest compar user valu tabl imag nutrit label valu correct match imag nutrit label click correct checkbox valu correct edit valu input box valu zero default ' ad nutrit label tabl valu miss nutrit label input data present imag click add continu nutrit label submit end repeat thank particip nutrut,administrator manual intended person setting system need include software hardware dependency download instruction hardware setup instruction place document system tested expected compatabilities known incompatabilities administrator need set id password system fully deployed need covered manual administrator manual include complete set easytofollow instruction deploy system new environment redeploy system need restarted refreshed need cognizant skill level administrator assume adult given intended audience must determine appropriate level skill assume defined user description greeting thank using nutruitiondb creation comp 523 software engineering course author katie hawthorne kathryne tommy ferguson atfergus gautam sanka gausanka document walk process setting nutrutiondb server system requirement php mysql public server space google drive dependency 1 make sure php installed server system ha tested known compatible php version 5315 installation php outside scope administrator manual please check server admin go process 2 ensure access server running mysql please check server administrator set database provide access 4 need google drive account store photo 3 nutrution webbased application need server publicly accessible may need work server admin ensure file space ha correct file permission access right setting nutrution 1 setting database set nutrution database run nutritiondbsql script logged machine running mysql performed creating database logging database see server admin need information login access information database script create table used nutrution web application 2 setting website set website copy entire nutrition folder publiclyreadable folder server running php may nested however desirable url structure also need modify file dbconnectphp utils folder reflect correct login credential mysql server file modify line define host username password database may need ask server admin information replace value string correct value represent setup 3 setting google drive set google drive account create google account current system using nutrutionation google account go httpdrivegooglecom create new folder new folder created setting publicly accessible internet setting extend image subsequently added folder folder identifier used find image file web editing nutrution system setting 1 changing verification server running navigate setting page scroll admin setting section input box allows enter numerical value value represents number agreeing submission must captured value considered correct user input data using nutrution 1 adding data server running navigate setting page scroll admin setting section add data nutrution database csv comma separated value file contains data collected nutrition label ocred remove first line column heading present upload file see success statement page reloads indicating file ha successfully imported database 2 adding photo photo added google drive account httpwwwdrivegooglecom username nutrutionnation folder nnimages contains existing image new image need added folder upload press red upload button top left select image file uploaded 3 retrieving data server running navigate setting page scroll admin setting section click button indicates download completed nutrition label information receive csv file label successfully corrected file imported excel favorite analysis tool 4 viewing user activity navigating setting page scroll find dropdown list user database selecting user provide detail id username number submission admin status correcting nutrition data detailed picture guide correcting nutrition data found helpphp navigated web browser running successfully deployed version nutrution sign account log use site guest compare user value table image nutrition label value correct match image nutrition label click correct checkbox value correct edit value input box value zero default ' added nutrition label table value missing nutrition label input data present image click add continue nutrition label submit end repeat thank participating nutrution
Dart,"![Pub Version](https://img.shields.io/pub/v/openfoodfacts?&colorB=green)
[![likes](https://badges.bar/openfoodfacts/likes)](https://pub.dev/packages/openfoodfacts/score)
[![popularity](https://badges.bar/openfoodfacts/popularity)](https://pub.dev/packages/openfoodfacts/score)
[![pub points](https://badges.bar/openfoodfacts/pub%20points)](https://pub.dev/packages/openfoodfacts/score)

# Open Food Facts - Dart
Dart package for the Open Food Facts API. Easily access to more than 1.9 million products from all around the world.
Open Food Facts is powered by contributors from around the world and is constantly growing thanks to them.

## How to use ?
You can find the full documentation here : [Documentation](https://github.com/openfoodfacts/openfoodfacts-dart/blob/master/DOCUMENTATION.md).
You can find automated code documentation here:  [Documentation](https://openfoodfacts.github.io/openfoodfacts-dart/).

## General principles
- You can look for information about products, including many useful computed values. 
- If you can't get the information on a specific product, you can get your user to send photos and data, that will then be processed by Open Food Facts AI and contributors to get the computed result you want to show them.
- You can also implement the complete flow so that they get immediately the result with some effort on their side.

## Contributing 

### If your users do not expect a specific result immediately (eg. Inventory apps)
- Send photos (front/nutrition/ingredients/packaging): most painless thing for your users
- The Open Food Facts AI Robotoff will generate some derived data from the photos
- Overtime, other apps, and the Open Food Facts community will fill the data gaps

### If your users do expect a result immediately (eg Nutrition apps, Scoring apps…):
- Send nutrition facts + category > get the Nutri-Score
- Send ingredients > get the NOVA group (about food ultra-processing), additives, allergens, normalized ingredients, vegan, vegetarian…
- Send category (strict minimum) + labels + origins of ingredients + packaging (photo and text) > get the Eco-Score (about environmental impact)

## Open Data Licence
The database in under the OdBL. This means attributing the source and also contributing back any additions (photos, data), which this package makes easy to do.
You can check the terms of use here : [Terms of use](https://world.openfoodfacts.org/terms-of-use).

## List of current features

### GENERAL
- [x] Multilingual (180 languages are supported)
- [x] Create users
- [x] Check if users exist   

### READ
- [x] Product: you can retrieve information about products
- [x] Product images (get product image by field, size and language, current fields are: Front, Ingredients, Nutrition, Packaging)
- [x] Additives, Allergens, Environment impact, Ingredient analysis, Nutrient levels, Nutrition facts (incl. micro-nutrients)
- [x] Language dependant fields (like ingredients, product name, packaging text)
- [x] Eco-Score, Nutri-Score, NOVA groups
- [x] Translated, high-level and customizable product information (Attributes)
- [x] Product completion status

### PERSONALIZATION
- [x] Recommended Daily Intakes
- [x] Translated, high-level and customizable product information (Attributes)
- [x] Autocompleting for the user inputs, by giving suggestions for (Labels, categories, ingredients, additives, traces ...)

### SEARCH
- [x] search products by tags
- [x] search products with / without additives
- [x] search products with keywords
- [x] Personalized search

### WRITE
- [x] Save product to Open Food Facts 
- [x] Send images
- [x] User comments and auth
- [x] Anonymous photo upload

### ML
- [x] Robotoff support
- [x] Extract ingredients from ingredients image: User can extract the ingredients text if it is missing
- [x] Get the OCR of the ingredients photo (for validation purposes)


## Roadmap
List of new APIs to implement: https://github.com/openfoodfacts/api-documentation/issues

### READ
- [ ] ???

### WRITE
- [ ] Photo operations (rotate, crop, select, unselect with language awareness)

### Other

## Contribute
There are many ways to contribute, and Open Food Facts has a lot of projects beside this package.
Most of our operations are coordinated through our Slack which you can join here : [Open Food Facts Slack](https://openfoodfacts.slack.com).

Regarding this package, we accept pull requests as well feature requests.

### Testing

Execute the following command from the root of the repository to run the tests:

```
dart test
```


## Authors
* Alexander Schacht - [Grumpf86](https://github.com/Grumpf86)
* Primaël Quémerais - [Reefind](https://gitlab.com/Reefind)
* Marcus Cantu - [Cantum2](https://github.com/Cantum2)
* Adrien Faure - [Adfaure](https://github.com/adfaure)
* Peter Tran-Jørgensen - [peterwvj](https://github.com/peterwvj)
* Mohamed Boussaid - [MohamedFBoussaid](https://github.com/MohamedFBoussaid)
","pub versionhttpsimgshieldsiopubvopenfoodfactscolorbgreen
likeshttpsbadgesbaropenfoodfactslikeshttpspubdevpackagesopenfoodfactsscore
popularityhttpsbadgesbaropenfoodfactspopularityhttpspubdevpackagesopenfoodfactsscore
pub pointshttpsbadgesbaropenfoodfactspub20pointshttpspubdevpackagesopenfoodfactsscore

 open food facts dart
dart package for the open food facts api easily access to more than 19 million products from all around the world
open food facts is powered by contributors from around the world and is constantly growing thanks to them

 how to use 
you can find the full documentation here documentationhttpsgithubcomopenfoodfactsopenfoodfactsdartblobmasterdocumentationmd
you can find automated code documentation here documentationhttpsopenfoodfactsgithubioopenfoodfactsdart

 general principles
 you can look for information about products including many useful computed values 
 if you can ' t get the information on a specific product you can get your user to send photos and data that will then be processed by open food facts ai and contributors to get the computed result you want to show them
 you can also implement the complete flow so that they get immediately the result with some effort on their side

 contributing 

 if your users do not expect a specific result immediately eg inventory apps
 send photos frontnutritioningredientspackaging most painless thing for your users
 the open food facts ai robotoff will generate some derived data from the photos
 overtime other apps and the open food facts community will fill the data gaps

 if your users do expect a result immediately eg nutrition apps scoring apps
 send nutrition facts category get the nutriscore
 send ingredients get the nova group about food ultraprocessing additives allergens normalized ingredients vegan vegetarian
 send category strict minimum labels origins of ingredients packaging photo and text get the ecoscore about environmental impact

 open data licence
the database in under the odbl this means attributing the source and also contributing back any additions photos data which this package makes easy to do
you can check the terms of use here terms of usehttpsworldopenfoodfactsorgtermsofuse

 list of current features

 general
 x multilingual 180 languages are supported
 x create users
 x check if users exist 

 read
 x product you can retrieve information about products
 x product images get product image by field size and language current fields are front ingredients nutrition packaging
 x additives allergens environment impact ingredient analysis nutrient levels nutrition facts incl micronutrients
 x language dependant fields like ingredients product name packaging text
 x ecoscore nutriscore nova groups
 x translated highlevel and customizable product information attributes
 x product completion status

 personalization
 x recommended daily intakes
 x translated highlevel and customizable product information attributes
 x autocompleting for the user inputs by giving suggestions for labels categories ingredients additives traces 

 search
 x search products by tags
 x search products with without additives
 x search products with keywords
 x personalized search

 write
 x save product to open food facts 
 x send images
 x user comments and auth
 x anonymous photo upload

 ml
 x robotoff support
 x extract ingredients from ingredients image user can extract the ingredients text if it is missing
 x get the ocr of the ingredients photo for validation purposes


 roadmap
list of new apis to implement httpsgithubcomopenfoodfactsapidocumentationissues

 read
 

 write
 photo operations rotate crop select unselect with language awareness

 other

 contribute
there are many ways to contribute and open food facts has a lot of projects beside this package
most of our operations are coordinated through our slack which you can join here open food facts slackhttpsopenfoodfactsslackcom

regarding this package we accept pull requests as well feature requests

 testing

execute the following command from the root of the repository to run the tests


dart test



 authors
 alexander schacht grumpf86httpsgithubcomgrumpf86
 primael quemerais reefindhttpsgitlabcomreefind
 marcus cantu cantum2httpsgithubcomcantum2
 adrien faure adfaurehttpsgithubcomadfaure
 peter tranjrgensen peterwvjhttpsgithubcompeterwvj
 mohamed boussaid mohamedfboussaidhttpsgithubcommohamedfboussaid",pub versionhttpsimgshieldsiopubvopenfoodfactscolorbgreen likeshttpsbadgesbaropenfoodfactslikeshttpspubdevpackagesopenfoodfactsscor popularityhttpsbadgesbaropenfoodfactspopularityhttpspubdevpackagesopenfoodfactsscor pub pointshttpsbadgesbaropenfoodfactspub20pointshttpspubdevpackagesopenfoodfactsscor open food fact dart dart packag open food fact api easili access 19 million product around world open food fact power contributor around world constantli grow thank use find full document documentationhttpsgithubcomopenfoodfactsopenfoodfactsdartblobmasterdocumentationmd find autom code document documentationhttpsopenfoodfactsgithubioopenfoodfactsdart gener principl look inform product includ mani use comput valu ' get inform specif product get user send photo data process open food fact ai contributor get comput result want show also implement complet flow get immedi result effort side contribut user expect specif result immedi eg inventori app send photo frontnutritioningredientspackag painless thing user open food fact ai robotoff gener deriv data photo overtim app open food fact commun fill data gap user expect result immedi eg nutrit app score app send nutrit fact categori get nutriscor send ingredi get nova group food ultraprocess addit allergen normal ingredi vegan vegetarian send categori strict minimum label origin ingredi packag photo text get ecoscor environment impact open data licenc databas odbl thi mean attribut sourc also contribut back ani addit photo data thi packag make easi check term use term usehttpsworldopenfoodfactsorgtermsofus list current featur gener x multilingu 180 languag support x creat user x check user exist read x product retriev inform product x product imag get product imag field size languag current field front ingredi nutrit packag x addit allergen environ impact ingredi analysi nutrient level nutrit fact incl micronutri x languag depend field like ingredi product name packag text x ecoscor nutriscor nova group x translat highlevel customiz product inform attribut x product complet statu person x recommend daili intak x translat highlevel customiz product inform attribut x autocomplet user input give suggest label categori ingredi addit trace search x search product tag x search product without addit x search product keyword x person search write x save product open food fact x send imag x user comment auth x anonym photo upload ml x robotoff support x extract ingredi ingredi imag user extract ingredi text miss x get ocr ingredi photo valid purpos roadmap list new api implement httpsgithubcomopenfoodfactsapidocumentationissu read write photo oper rotat crop select unselect languag awar contribut mani way contribut open food fact ha lot project besid thi packag oper coordin slack join open food fact slackhttpsopenfoodfactsslackcom regard thi packag accept pull request well featur request test execut follow command root repositori run test dart test author alexand schacht grumpf86httpsgithubcomgrumpf86 primael quemerai reefindhttpsgitlabcomreefind marcu cantu cantum2httpsgithubcomcantum2 adrien faur adfaurehttpsgithubcomadfaur peter tranjrgensen peterwvjhttpsgithubcompeterwvj moham boussaid mohamedfboussaidhttpsgithubcommohamedfboussaid,pub versionhttpsimgshieldsiopubvopenfoodfactscolorbgreen likeshttpsbadgesbaropenfoodfactslikeshttpspubdevpackagesopenfoodfactsscore popularityhttpsbadgesbaropenfoodfactspopularityhttpspubdevpackagesopenfoodfactsscore pub pointshttpsbadgesbaropenfoodfactspub20pointshttpspubdevpackagesopenfoodfactsscore open food fact dart dart package open food fact api easily access 19 million product around world open food fact powered contributor around world constantly growing thanks use find full documentation documentationhttpsgithubcomopenfoodfactsopenfoodfactsdartblobmasterdocumentationmd find automated code documentation documentationhttpsopenfoodfactsgithubioopenfoodfactsdart general principle look information product including many useful computed value ' get information specific product get user send photo data processed open food fact ai contributor get computed result want show also implement complete flow get immediately result effort side contributing user expect specific result immediately eg inventory apps send photo frontnutritioningredientspackaging painless thing user open food fact ai robotoff generate derived data photo overtime apps open food fact community fill data gap user expect result immediately eg nutrition apps scoring apps send nutrition fact category get nutriscore send ingredient get nova group food ultraprocessing additive allergen normalized ingredient vegan vegetarian send category strict minimum label origin ingredient packaging photo text get ecoscore environmental impact open data licence database odbl mean attributing source also contributing back addition photo data package make easy check term use term usehttpsworldopenfoodfactsorgtermsofuse list current feature general x multilingual 180 language supported x create user x check user exist read x product retrieve information product x product image get product image field size language current field front ingredient nutrition packaging x additive allergen environment impact ingredient analysis nutrient level nutrition fact incl micronutrient x language dependant field like ingredient product name packaging text x ecoscore nutriscore nova group x translated highlevel customizable product information attribute x product completion status personalization x recommended daily intake x translated highlevel customizable product information attribute x autocompleting user input giving suggestion label category ingredient additive trace search x search product tag x search product without additive x search product keywords x personalized search write x save product open food fact x send image x user comment auth x anonymous photo upload ml x robotoff support x extract ingredient ingredient image user extract ingredient text missing x get ocr ingredient photo validation purpose roadmap list new apis implement httpsgithubcomopenfoodfactsapidocumentationissues read write photo operation rotate crop select unselect language awareness contribute many way contribute open food fact ha lot project beside package operation coordinated slack join open food fact slackhttpsopenfoodfactsslackcom regarding package accept pull request well feature request testing execute following command root repository run test dart test author alexander schacht grumpf86httpsgithubcomgrumpf86 primael quemerais reefindhttpsgitlabcomreefind marcus cantu cantum2httpsgithubcomcantum2 adrien faure adfaurehttpsgithubcomadfaure peter tranjrgensen peterwvjhttpsgithubcompeterwvj mohamed boussaid mohamedfboussaidhttpsgithubcommohamedfboussaid
Stata,"# igrowup_update
Update of IGROWUP Stata Macro Prevalence Module
","igrowupupdate
update of igrowup stata macro prevalence module",igrowupupd updat igrowup stata macro preval modul,igrowupupdate update igrowup stata macro prevalence module
JavaScript,"lean-mean-nutrition-sample
==========================

Just a simple 80's themed food journal

Setup
=====

1) Download [data set](https://s3.amazonaws.com/valeri.karpov.mongodb/usda.nutrition.tgz)

2) Untar data set and run mongorestore

3) Copy nutrition data to `leanmean` database: `db.copyDatabase('usda', 'leanmean', 'localhost')`

4) Create a text index on `description`: `use leanmean; db.nutrition.ensureIndex({ ""description"" : ""text"" });`
","leanmeannutritionsample


just a simple 80 ' s themed food journal

setup


1 download data sethttpss3amazonawscomvalerikarpovmongodbusdanutritiontgz

2 untar data set and run mongorestore

3 copy nutrition data to leanmean database dbcopydatabase ' usda ' ' leanmean ' ' localhost ' 

4 create a text index on description use leanmean dbnutritionensureindex description text",leanmeannutritionsampl simpl 80 ' theme food journal setup 1 download data sethttpss3amazonawscomvalerikarpovmongodbusdanutritiontgz 2 untar data set run mongorestor 3 copi nutrit data leanmean databas dbcopydatabas ' usda ' ' leanmean ' ' localhost ' 4 creat text index descript use leanmean dbnutritionensureindex descript text,leanmeannutritionsample simple 80 ' themed food journal setup 1 download data sethttpss3amazonawscomvalerikarpovmongodbusdanutritiontgz 2 untar data set run mongorestore 3 copy nutrition data leanmean database dbcopydatabase ' usda ' ' leanmean ' ' localhost ' 4 create text index description use leanmean dbnutritionensureindex description text
C#,"﻿Recipe Analyzer - Marissa Berresford
Current Status: 2 May 2014

- Users cannot save changes to an existing recipe

- Users can add, delete, and view recipes from their account
- Users can calculate changes to an existing recipe
- Streamlined navigation further
- Cleaned up user account page
- Cleaned up error messages and labels

Woo! Got a B+ for the final grade!

Website and database were hosted on Windows Azure trial server,
which was taken offline after graduating. Current login credentials
from Web.config do not work and are placeholders.","recipe analyzer marissa berresford
current status 2 may 2014

 users cannot save changes to an existing recipe

 users can add delete and view recipes from their account
 users can calculate changes to an existing recipe
 streamlined navigation further
 cleaned up user account page
 cleaned up error messages and labels

woo got a b for the final grade

website and database were hosted on windows azure trial server
which was taken offline after graduating current login credentials
from webconfig do not work and are placeholders",recip analyz marissa berresford current statu 2 may 2014 user cannot save chang exist recip user add delet view recip account user calcul chang exist recip streamlin navig clean user account page clean error messag label woo got b final grade websit databas host window azur trial server wa taken offlin graduat current login credenti webconfig work placehold,recipe analyzer marissa berresford current status 2 may 2014 user cannot save change existing recipe user add delete view recipe account user calculate change existing recipe streamlined navigation cleaned user account page cleaned error message label woo got b final grade website database hosted window azure trial server wa taken offline graduating current login credential webconfig work placeholder
HTML,"# NutritionTZA
",nutritiontza,nutritiontza,nutritiontza
JavaScript,"

![image info](/src/assets/images/CPW.png)


# Chilly Productive workers aka CPW Team presents
# Healify App :banana: :spaghetti: :pineapple:

# [Run App](https://vibrant-williams-96dd0e.netlify.app/)

## Project description


**The website can crash during the sessions, because search amount is limited from API provider**

```
This is a website where you can enter any food or product name
and get the nutrition data about it.
Also user is receiving the ""Nutrition Score"" of this product,
which is showing how useful this product is for you and your
health.
If you got ""A"" you can go to the gym now,
but if you have ""E"" it is better to wait some time. 
```



## About the team

```
This application is created by creative team,
during the final modules of the studying process in
""Digital Career Institute"" in Fullstack Web Development course

```
**Team members**

Peony Langner - Backend Team :  [Linked In](https://www.linkedin.com/in/peony-langner-6808b218a/)</br>

Robin Skladny - Frontend Team : [Linked In](https://www.linkedin.com/in/robin-skladny-647a1b229/)</br>


Andrejs Grocs - Frontend/Backend : [Linked In](https://www.linkedin.com/in/andrejs-grocs-andrey-detochkin-ab2106141) </br>

Riccardo Limiti - Designer : [Linked In](https://www.linkedin.com/in/riccardo-limiti-a81061226/) </br>

Lars Nemeth - Backend Team :  [Linked In](https://www.linkedin.com/in/lars-nemeth-a2b28ab4/)</br>

Lukasz Trzcinski - Frontend Team : [Linked In](https://www.linkedin.com/in/lukasz-trzcinski-berlin/) </br>


## :raised_hands: :pray: 
**Big Special Thanks to Natalia Maca for help in design.** [Natalia Maca Website](https://nataliamaca.com/)</br>
**and to DCI teachers: Franco Speziali, Gilles Vanhaecke, and Sebastian Salas Laurens for consulting us during this wonderful project.**

","image infosrcassetsimagescpwpng


 chilly productive workers aka cpw team presents
 healify app banana spaghetti pineapple

 run apphttpsvibrantwilliams96dd0enetlifyapp

 project description


the website can crash during the sessions because search amount is limited from api provider


this is a website where you can enter any food or product name
and get the nutrition data about it
also user is receiving the nutrition score of this product
which is showing how useful this product is for you and your
health
if you got a you can go to the gym now
but if you have e it is better to wait some time 




 about the team


this application is created by creative team
during the final modules of the studying process in
digital career institute in fullstack web development course


team members

peony langner backend team linked inhttpswwwlinkedincominpeonylangner6808b218abr

robin skladny frontend team linked inhttpswwwlinkedincominrobinskladny647a1b229br


andrejs grocs frontendbackend linked inhttpswwwlinkedincominandrejsgrocsandreydetochkinab2106141 br

riccardo limiti designer linked inhttpswwwlinkedincominriccardolimitia81061226 br

lars nemeth backend team linked inhttpswwwlinkedincominlarsnemetha2b28ab4br

lukasz trzcinski frontend team linked inhttpswwwlinkedincominlukasztrzcinskiberlin br


 raisedhands pray 
big special thanks to natalia maca for help in design natalia maca websitehttpsnataliamacacombr
and to dci teachers franco speziali gilles vanhaecke and sebastian salas laurens for consulting us during this wonderful project",imag infosrcassetsimagescpwpng chilli product worker aka cpw team present healifi app banana spaghetti pineappl run apphttpsvibrantwilliams96dd0enetlifyapp project descript websit crash dure session becaus search amount limit api provid thi websit enter ani food product name get nutrit data also user receiv nutrit score thi product show use thi product health got go gym e better wait time team thi applic creat creativ team dure final modul studi process digit career institut fullstack web develop cours team member peoni langner backend team link inhttpswwwlinkedincominpeonylangner6808b218abr robin skladni frontend team link inhttpswwwlinkedincominrobinskladny647a1b229br andrej groc frontendbackend link inhttpswwwlinkedincominandrejsgrocsandreydetochkinab2106141 br riccardo limiti design link inhttpswwwlinkedincominriccardolimitia81061226 br lar nemeth backend team link inhttpswwwlinkedincominlarsnemetha2b28ab4br lukasz trzcinski frontend team link inhttpswwwlinkedincominlukasztrzcinskiberlin br raisedhand pray big special thank natalia maca help design natalia maca websitehttpsnataliamacacombr dci teacher franco speziali gill vanhaeck sebastian sala lauren consult us dure thi wonder project,image infosrcassetsimagescpwpng chilly productive worker aka cpw team present healify app banana spaghetti pineapple run apphttpsvibrantwilliams96dd0enetlifyapp project description website crash session search amount limited api provider website enter food product name get nutrition data also user receiving nutrition score product showing useful product health got go gym e better wait time team application created creative team final module studying process digital career institute fullstack web development course team member peony langner backend team linked inhttpswwwlinkedincominpeonylangner6808b218abr robin skladny frontend team linked inhttpswwwlinkedincominrobinskladny647a1b229br andrejs grocs frontendbackend linked inhttpswwwlinkedincominandrejsgrocsandreydetochkinab2106141 br riccardo limiti designer linked inhttpswwwlinkedincominriccardolimitia81061226 br lars nemeth backend team linked inhttpswwwlinkedincominlarsnemetha2b28ab4br lukasz trzcinski frontend team linked inhttpswwwlinkedincominlukasztrzcinskiberlin br raisedhands pray big special thanks natalia maca help design natalia maca websitehttpsnataliamacacombr dci teacher franco speziali gilles vanhaecke sebastian salas laurens consulting u wonderful project
JavaScript,"# Tailored-Nutrition
A weight loss app that caters to your lifestyle
","tailorednutrition
a weight loss app that caters to your lifestyle",tailorednutrit weight loss app cater lifestyl,tailorednutrition weight loss app caters lifestyle
TeX,"platemate
=========

PlateMate: crowdsourcing nutritional analyses from food photographs

## Setup

### Install requirements
    sudo apt-get install libjpeg-dev
    pip install -r requirements.txt

This should install:

+ Django 1.2.5
+ Pillow (latest)
+ Boto (latest)
+ httpagentparser (latest)
+ oauth latest

## Modify Local Settings
In the platemate directory modify `local_settings.example.py` to your paths and rename to `local_settings.py`. In the platemate directory, add your Amazon Mechanical Turk keys in `amt_keys.example.py` and save it as `amt_keys.py`

## Create Database Tables
From the platemate directory, run:
    python manage.py syncdb --noinput

## Add an admin user
    python manage.py createsuperuser
    //TODO add the user to initial data fixutre (or is there one?)

## Run the project
    python manage.py runserver 0.0.0.0:8000

or
    ./run.sh


## Create HITs on Amazon MTurk sandbox
    python experiment.py BATCH_NAME sandbox

where `BATCH_NAME` is a subdirectory under `static/uploaded`. This is hardcoded and specifying any other path will break things.

## Issues

### Module no found
Cause: Likely an import statement in the module is failing because of a missing library.
Fix: Try each import in the module individually.

### Database Locked
It seems that when both the runserver and the experiment scripts are running, there is a race condition on the database that would crash one script if the other is accessing the DB.

### Accessing the database through adminer on iis-dev:

http://adminer.iis-dev.seas.harvard.edu/adminer/

### Deleting all hits from mturk AND resetting the database

python cleanup.py flush
","platemate


platemate crowdsourcing nutritional analyses from food photographs

 setup

 install requirements
 sudo aptget install libjpegdev
 pip install r requirementstxt

this should install

 django 125
 pillow latest
 boto latest
 httpagentparser latest
 oauth latest

 modify local settings
in the platemate directory modify localsettingsexamplepy to your paths and rename to localsettingspy in the platemate directory add your amazon mechanical turk keys in amtkeysexamplepy and save it as amtkeyspy

 create database tables
from the platemate directory run
 python managepy syncdb noinput

 add an admin user
 python managepy createsuperuser
 todo add the user to initial data fixutre or is there one

 run the project
 python managepy runserver 00008000

or
 runsh


 create hits on amazon mturk sandbox
 python experimentpy batchname sandbox

where batchname is a subdirectory under staticuploaded this is hardcoded and specifying any other path will break things

 issues

 module no found
cause likely an import statement in the module is failing because of a missing library
fix try each import in the module individually

 database locked
it seems that when both the runserver and the experiment scripts are running there is a race condition on the database that would crash one script if the other is accessing the db

 accessing the database through adminer on iisdev

httpadmineriisdevseasharvardeduadminer

 deleting all hits from mturk and resetting the database

python cleanuppy flush",platem platem crowdsourc nutrit analys food photograph setup instal requir sudo aptget instal libjpegdev pip instal r requirementstxt thi instal django 125 pillow latest boto latest httpagentpars latest oauth latest modifi local set platem directori modifi localsettingsexamplepi path renam localsettingspi platem directori add amazon mechan turk key amtkeysexamplepi save amtkeyspi creat databas tabl platem directori run python managepi syncdb noinput add admin user python managepi createsuperus todo add user initi data fixutr one run project python managepi runserv 00008000 runsh creat hit amazon mturk sandbox python experimentpi batchnam sandbox batchnam subdirectori staticupload thi hardcod specifi ani path break thing issu modul found caus like import statement modul fail becaus miss librari fix tri import modul individu databas lock seem runserv experi script run race condit databas would crash one script access db access databas admin iisdev httpadmineriisdevseasharvardeduadmin delet hit mturk reset databas python cleanuppi flush,platemate platemate crowdsourcing nutritional analysis food photograph setup install requirement sudo aptget install libjpegdev pip install r requirementstxt install django 125 pillow latest boto latest httpagentparser latest oauth latest modify local setting platemate directory modify localsettingsexamplepy path rename localsettingspy platemate directory add amazon mechanical turk key amtkeysexamplepy save amtkeyspy create database table platemate directory run python managepy syncdb noinput add admin user python managepy createsuperuser todo add user initial data fixutre one run project python managepy runserver 00008000 runsh create hit amazon mturk sandbox python experimentpy batchname sandbox batchname subdirectory staticuploaded hardcoded specifying path break thing issue module found cause likely import statement module failing missing library fix try import module individually database locked seems runserver experiment script running race condition database would crash one script accessing db accessing database adminer iisdev httpadmineriisdevseasharvardeduadminer deleting hit mturk resetting database python cleanuppy flush
HTML,"# TRACKR
Nutrition Tracking
App to choose your nutrition plan and track daily intake.

    -User will choose goals
    -User will select types of foods they prefer
    -App will suggest plan
    -User will track foods
    -Total Weekly Calories/Macros compared to goal


APIs: Nutritionix - Nutrition Database https://rapidapi.com/msilverman/api/nutritionix-nutrition-database

UIs: Pure: http://purecss.io, Tachyons: http://tachyons.io, Materialize: https://materializecss.com

Database: Sequel and Heroku

Future App updates:

    -Login ability
    -Multiple User capability
    -BMI Tracking
    -Fitness plans and tracking

Project 2 Created by: Israel, Jo, Vanessa, Will.","trackr
nutrition tracking
app to choose your nutrition plan and track daily intake

 user will choose goals
 user will select types of foods they prefer
 app will suggest plan
 user will track foods
 total weekly caloriesmacros compared to goal


apis nutritionix nutrition database httpsrapidapicommsilvermanapinutritionixnutritiondatabase

uis pure httppurecssio tachyons httptachyonsio materialize httpsmaterializecsscom

database sequel and heroku

future app updates

 login ability
 multiple user capability
 bmi tracking
 fitness plans and tracking

project 2 created by israel jo vanessa will",trackr nutrit track app choos nutrit plan track daili intak user choos goal user select type food prefer app suggest plan user track food total weekli caloriesmacro compar goal api nutritionix nutrit databas httpsrapidapicommsilvermanapinutritionixnutritiondatabas ui pure httppurecssio tachyon httptachyonsio materi httpsmaterializecsscom databas sequel heroku futur app updat login abil multipl user capabl bmi track fit plan track project 2 creat israel jo vanessa,trackr nutrition tracking app choose nutrition plan track daily intake user choose goal user select type food prefer app suggest plan user track food total weekly caloriesmacros compared goal apis nutritionix nutrition database httpsrapidapicommsilvermanapinutritionixnutritiondatabase uis pure httppurecssio tachyons httptachyonsio materialize httpsmaterializecsscom database sequel heroku future app update login ability multiple user capability bmi tracking fitness plan tracking project 2 created israel jo vanessa
Python,"# McData

A data repository for fast food nutrition and ingredients. 

To scrape historic nutritional information, use the [waybackpack](https://github.com/jsvine/waybackpack) command line tool. To get unique McDonald's nutritional PDFs until 2018, run the following from the command line:

- `pip install waybackpack`
- `waybackpack http://nutrition.mcdonalds.com/usnutritionexchange/nutritionfacts.pdf -d DESTINATIONDIRECTORY --to-date 2018 --uniques-only`

Note: McDonald's previously stored its nutritional PDFs [here](http://nutrition.mcdonalds.com/getnutrition/nutritionfacts.pdf) 
>>>>>>> d8f72402c21855e426a72c2ba4ef46875b2ed780
","mcdata

a data repository for fast food nutrition and ingredients 

to scrape historic nutritional information use the waybackpackhttpsgithubcomjsvinewaybackpack command line tool to get unique mcdonald ' s nutritional pdfs until 2018 run the following from the command line

 pip install waybackpack
 waybackpack httpnutritionmcdonaldscomusnutritionexchangenutritionfactspdf d destinationdirectory todate 2018 uniquesonly

note mcdonald ' s previously stored its nutritional pdfs herehttpnutritionmcdonaldscomgetnutritionnutritionfactspdf 
 d8f72402c21855e426a72c2ba4ef46875b2ed780",mcdata data repositori fast food nutrit ingredi scrape histor nutrit inform use waybackpackhttpsgithubcomjsvinewaybackpack command line tool get uniqu mcdonald ' nutrit pdf 2018 run follow command line pip instal waybackpack waybackpack httpnutritionmcdonaldscomusnutritionexchangenutritionfactspdf destinationdirectori todat 2018 uniquesonli note mcdonald ' previous store nutrit pdf herehttpnutritionmcdonaldscomgetnutritionnutritionfactspdf d8f72402c21855e426a72c2ba4ef46875b2ed780,mcdata data repository fast food nutrition ingredient scrape historic nutritional information use waybackpackhttpsgithubcomjsvinewaybackpack command line tool get unique mcdonald ' nutritional pdfs 2018 run following command line pip install waybackpack waybackpack httpnutritionmcdonaldscomusnutritionexchangenutritionfactspdf destinationdirectory todate 2018 uniquesonly note mcdonald ' previously stored nutritional pdfs herehttpnutritionmcdonaldscomgetnutritionnutritionfactspdf d8f72402c21855e426a72c2ba4ef46875b2ed780
Java,"==========
cronometer
==========

.. image:: https://travis-ci.org/myint/cronometer.svg?branch=master
    :target: https://travis-ci.org/myint/cronometer
    :alt: Build status

`cronometer` is a nutrition tracking tool. This is a fork of the original_.

.. _original: http://sourceforge.net/projects/cronometer


Build on OS X
=============

::

    $ ./build_osx.bash



Build and start on Linux
========================

::

    $ ant
    $ ./start_cronometer.sh


Download
========

https://github.com/myint/cronometer/releases


Importing new USDA food database
================================

As an example, below is the procedure that was used to upgrade from ``SR26`` to
``SR28``.

Unzip the old processed database::

    $ unzip lib/usda_sr26.jar
    $ mv usda_sr26 usda_sr28

Update ``src/ca/spaz/cron/datasource/USDAImport/USDAImporter.java`` to point
to ``sr28``.

Run the importer to update the old processed data::

    $ java -classpath lib/cronometer.jar \
        ca.spaz.cron.datasource.USDAImport.USDAImporter < sr28.zip

Append deleted items from the old ``foods.index`` into the new
``deprecated.index``::

    $ ./scripts/deprecated.py usda_sr26/foods.index usda_sr28/foods.index \
         >> usda_sr28/deprecated.index

Create the new JAR::

    $ rm lib/usda_sr26.jar
    $ zip -r lib/usda_sr28.jar usda_sr28

Update ``src/ca/spaz/cron/datasource/USDAFoods.java`` to point to the new JAR.
And update the OS X app to point to the new JAR.
","cronometer


 image httpstravisciorgmyintcronometersvgbranchmaster
 target httpstravisciorgmyintcronometer
 alt build status

cronometer is a nutrition tracking tool this is a fork of the original

 original httpsourceforgenetprojectscronometer


build on os x




 buildosxbash



build and start on linux




 ant
 startcronometersh


download


httpsgithubcommyintcronometerreleases


importing new usda food database


as an example below is the procedure that was used to upgrade from sr26 to
sr28

unzip the old processed database

 unzip libusdasr26jar
 mv usdasr26 usdasr28

update srccaspazcrondatasourceusdaimportusdaimporterjava to point
to sr28

run the importer to update the old processed data

 java classpath libcronometerjar 
 caspazcrondatasourceusdaimportusdaimporter sr28zip

append deleted items from the old foodsindex into the new
deprecatedindex

 scriptsdeprecatedpy usdasr26foodsindex usdasr28foodsindex 
 usdasr28deprecatedindex

create the new jar

 rm libusdasr26jar
 zip r libusdasr28jar usdasr28

update srccaspazcrondatasourceusdafoodsjava to point to the new jar
and update the os x app to point to the new jar",cronomet imag httpstravisciorgmyintcronometersvgbranchmast target httpstravisciorgmyintcronomet alt build statu cronomet nutrit track tool thi fork origin origin httpsourceforgenetprojectscronomet build os x buildosxbash build start linux ant startcronometersh download httpsgithubcommyintcronometerreleas import new usda food databas exampl procedur wa use upgrad sr26 sr28 unzip old process databas unzip libusdasr26jar mv usdasr26 usdasr28 updat srccaspazcrondatasourceusdaimportusdaimporterjava point sr28 run import updat old process data java classpath libcronometerjar caspazcrondatasourceusdaimportusdaimport sr28zip append delet item old foodsindex new deprecatedindex scriptsdeprecatedpi usdasr26foodsindex usdasr28foodsindex usdasr28deprecatedindex creat new jar rm libusdasr26jar zip r libusdasr28jar usdasr28 updat srccaspazcrondatasourceusdafoodsjava point new jar updat os x app point new jar,cronometer image httpstravisciorgmyintcronometersvgbranchmaster target httpstravisciorgmyintcronometer alt build status cronometer nutrition tracking tool fork original original httpsourceforgenetprojectscronometer build x buildosxbash build start linux ant startcronometersh download httpsgithubcommyintcronometerreleases importing new usda food database example procedure wa used upgrade sr26 sr28 unzip old processed database unzip libusdasr26jar mv usdasr26 usdasr28 update srccaspazcrondatasourceusdaimportusdaimporterjava point sr28 run importer update old processed data java classpath libcronometerjar caspazcrondatasourceusdaimportusdaimporter sr28zip append deleted item old foodsindex new deprecatedindex scriptsdeprecatedpy usdasr26foodsindex usdasr28foodsindex usdasr28deprecatedindex create new jar rm libusdasr26jar zip r libusdasr28jar usdasr28 update srccaspazcrondatasourceusdafoodsjava point new jar update x app point new jar
JavaScript,"# Calorie Counter Chatbot

This is a Lex based chatbot that will calculate calories made by trips to different fast food restaurants. It is enabled from a [FB Messenger Chatbot](https://www.facebook.com/fastfoodcaloriecounter/) that can be accessed from the Facebook Page, or through the Messenger App on your phone.

**Table of Contents**

- [How does this use the NLU models from Lex?](#using-nlu-models)
- [What custom slots are used by the NLU?](#custom-slots)
- [How can multiple slots be used in a single intent?](#multiple-slots-in-a-single-intent)
- [What are the lambda functions called by the bot?](#rules-logic-in-lambda)
- [Where does it get its data from?](#data-lookup-tables)
- [How do you create large custom slots?](#large-custom-slots)
- [How does information get shared between intents?](#sharing-session-data-between-intents)
- [How do you create buttons for the user to click on?](#creating-buttons-in-user-interface)
- [What does the deployment model look like?](#deployment-pipeline)
- [Does a bot have a personality?](#add-personality-to-the-bot)
- [What is the website code for?](#website-in-progress)

## Using NLU Models
This bot uses AWS Lex - a service that contains the intelligence to be able to decipher user requests and trigger intents based on data provided in the models. The intents then invoke lambda functions that contain business logic specific to the intent.

![](https://s3.amazonaws.com/fastfoodchatbot/media/LexArchitecture.png)

Currently there are many different intents that the NLU process sorts into.  Here are the ""core functions"" of the bot.
- FoodTypeOptions (Sample utterance - What are my food options?)
- GetCalories (Sample utterance - How many calories in a Big Mac?)
- GetMexicanFoodCalories (Sample utterance - How many calories in a Chicken Burrito?)
- GetNuggetsCalories (Sample utterance - How many calories in 20 Chicken Nuggets?)
- GetPizzaCalories (Sample utterance - How many calories in 2 slices of Pepperoni Pizza at Papa Johns?)
- GetChineseCalories (Sample utterance - How many calories in a Kung Pao Chicken?)
- GetChickenCalories (Sample utterance - How many calories in a piece of Original Recipe Chicken?) 

There are also intents that complement the core features.
- MoreDetails (Sample utterance - More details. Note: this can only be invoked after prior requests are made in the conversation as it's reading data from the session).
- DailyIntakeAnalysis (Sample utterance - analyze my meal. Similar to more details, this uses session data, so must follow one of the prior requests.
- WhatPizzaTypes (Sample utterance - What types of pizza are there?)
- WhichRestaurants (Sample utterance - List of restaurants.)
- CalculateBMR (Sample utterance - What is my daily recommended calorie intake?)
- GetCarbs (Sample utterance - How many carbs in this?)

Then there are intents that form the 'personality' of the bot. These were created based on real user usage, and prevent the generic error message from being used to respond.
- EndConversation (Built-in intent - uses AWS sample utterances like - Stop)
- Introduction (Sample utterances - Hello, Get Started, Send Message)
- Thanks (Sample utterances - Thanks, Goodbye, Bye)
- Complement (Sample utterances - I love you)
- Critic (Sample utterances - U suck)
- Shock (Sample utterances - wow, ouch)
- MyName (Sample utterances - what is your name)
- HelpRequest (Built-in intent - uses AWS sample utterances like - Help)
- NewRestaurant (Sample utterance - New restaurant. This clears out the session.)

Within each of the intents, sample utterances are provided that construct the potential sentances that a user may provide. The value of the slot (i.e. Large Fry) gets passed to the lambda function as a unique attribute.

You can get the summary information from the AWS CLI by executing the following command.

```sh
aws lex-models get-bot --name FastFoodChecker --version-or-alias PROD
```

## Custom Slots
It is a combination of the sample utterances and slots that determine which intent the NLU models will invoke. These are maintained in Lex, and are used for training the models. 

Currently, here are the custom slots that are used by the intents.
- FoodOptions (sample values: Big Mac, Smokehouse Brisket Sandwich, etc. This has hundreds of entries, and is generated from the foods.json data object).
- DrinkOptions (sample values: Water, Iced Tea, Large Diet Lemonade, etc. This has many entries, and is generated from the drinks.json data object).
- FastFoodRestaurants (sample values: Chick-fil-A, McDonald's, Wendy's)
- FoodType (sample values: Burger, Salad, Chicken)
- ExtraItems (sample values: Large Fry, Sugar Cookie, Side Salad)
- MexicanFoodTypes (sample values: Burrito, Gordita, Soft Taco)
- Preparation (sample values: Grilled, Fried, Baked)
- Protein (sample values: Steak, Chicken, Black Bean)
- PizzaRestaurants (sample values: Dominos, Papa John's, Little Caesars)
- PizzaSize (sample values: Small, Medium, Large)
- PizzaType (sample values: Sausage, Pepperoni, Honolulu Hawaiian)
- ChineseEntree (sample values: Orange Chicken, Kung Pao Chicken)
- ChineseSide (sample values: Fried Rice, Mixed Vegetables)
- ChineseAppetizer (sample values: Egg Roll, Spring Roll)
- FoodAdjustment (sample values: Add Guacomole, No Cheese)
- DressingOptions (sample values: Italian, Balsamic Vinaigrette)
- DippingSauce (sample values: Honey Mustard, Sweet and Sour)
- ChickenPart (sample values: Drumstick, Breast, Wing)
- ChickenStyle (sample values: Original Recipe, Extra Crispy)
- ChickenSides (sample values: Mashed Potatoes, Baked Beans)

An item does not need to be specified in the slot for the NLU to place a value into it. However, if the data is sparse, it may degrade how the NLU interprets the user requests.

## Multiple Slots in a Single Intent

Usability of a chatbot requires natural interaction to occur with a user. One key concept is around how to incorporate multiple slots into a single intent.
For example, a user could ask ""How many calories in a Big Mac, Fries, and a Coke?"" That is three different items that each need to be parsed out.
Within this chatbot, the main processing has many different slots that map into intents. For example, here are the slots that map into the GetCalories intent.

![](https://s3.amazonaws.com/fastfoodchatbot/media/slotsExample.png)

There are a couple of items to note in this.

1) In the example request above, the NLU models would parse the data from the utterance into three different slots (Food, Extra, and Drink).

2) The slot order doesn't matter to the parsing, but it does drive what would be the next response (slot 1 - Which Restaurant are you at?)

3) There are two slots that aren't required in this intent - Ketchup and PacketsKetchup. This optional information is asked for if fries is asked for as a side item. This is driven by the code in the Lambda function that is invoked in the Validation code hook.

## Rules logic in lambda
All of the logic in formulating responses to different intents is processed in a series of lambda functions. Which lambda function to invoke is managed within Lex, and set at the intent level. This enables modularity to be built within the application, keeping the functions lightweight.

There are two different spots within Lex that can invoke a lambda function. The first is through basic validation, and the attribute name that identifies it is called invocationSource. 
There are two potential values for this - DialogCodeHook and FulfillmentCodeHook. Here is where these Lambda functions are specified in the Lex Bot.

![](https://s3.amazonaws.com/fastfoodchatbot/media/lambdaHooks.png)

The first dropdown is the Validation, and calls the lambda function every time the bot is called. The attribute that it passes is called DialogCodeHook.
The second dropdown is the Fulfillment, and only called once the mandatory slots have been completed, and the validation from the initial call is complete.
This allows for the functions to be different, enabling better scalability in building the bot.

Here is an overview of each function currently written.

1) lambda.js - the main function that handles the basic validation for queries, sourced only in DialogCodeHook mode.

2) calculate.js - calculating the response for the actual calories in a meal is handled by this funciton, and is sourced by a FulfillmentCodeHook.

3) pizza.js - handles intents around calculating calories in a pizza, including the intent - WhatPizzaTypes.

4) misc.js - handles simple intents like help, the introduction, and more details around a meal.

5) chinese.js - handles intents around chinese food, and coupling the different slots together to form a meal.

## Data lookup tables
The core functionality of this bot is to be able to answer queries of how many calories are in different meals. While the slots that Lex uses are helpful in training the NLU models, they don't have the ability to serve as lookup files. 
That's where the json objects come in that are stored in the [/src/data/](https://github.com/terrenjpeterson/caloriecounter/tree/master/src/data) folder.

Here is a sample of the format.
```sh
[
    {
        ""restaurant"":""Chipotle"",
        ""foodItems"":[
            {""foodName"":""Chicken Burrito"", ""foodType"":""Burrito"", ""protein"":""chicken"", ""calories"":975},
            {""foodName"":""Steak Burrito"", ""foodType"":""Burrito"", ""protein"":""steak"", ""calories"":945},
            {""foodName"":""Carnitas Burrito"", ""foodType"":""Burrito"", ""protein"":""carnitas"", ""calories"":1005},
```

The lambda functions refer to these objects to respond to different queries, and to calculate calorie consumption for the user.

Each food item may be duplicated for different spellings and phrases used to retrieve. For example.

```sh
	    {""foodName"":""Fries"", ""calories"":340},
            {""foodName"":""Fry"", ""calories"":340},
            {""foodName"":""Frys"", ""calories"":340},
	    {""foodName"":""French Fries"", ""calories"":340},
            {""foodName"":""French Fry"", ""calories"":340},
	    {""foodName"":""Medium Fries"", ""calories"":340},
            {""foodName"":""Medium Fry"", ""calories"":340},
```

There are also lookup tables around sauces, dressings, and individual item adjustments. For example.

```sh

[
    {
        ""dressingName"":""Ranch"",
        ""calories"":200,
        ""carbs"":11,
        ""restaurantNames"":[""McDonalds""]
    },
    {
        ""dressingName"":""French"",
        ""calories"":300,
        ""carbs"":22,
        ""restaurantNames"":[""McDonalds""]
    },

```

Given that the NLU models do not correct spelling provided by the user, it's up to the Lambda functions to handle this part of the logic.

## Large Custom Slots

Managing large custom slots can be difficult, particularly if the data is dynamic. The main food lookup has several hundred unique values in it, and growing based on user usage.
The process for creating this slot has been automated, and the data for the custom slot is taken from the [foods.json](https://github.com/terrenjpeterson/caloriecounter/blob/master/src/data/foods.json) data object.
This is done through the AWS CLI that can load these directly from the command line. All of the files are contained in the [slots}(https://github.com/terrenjpeterson/caloriecounter/tree/master/src/slots) directory for reference. 
Here are the steps used to create.

1) The foods.json data object is passed to a lambda function called convertFoodsObjForSlot.
2) The function sorts through the data, eliminates duplicates, then the data is formatted into a simple array with just the entree names.
3) The array is returned and then passed into the AWS CLI using the [put-slot-type](https://docs.aws.amazon.com/cli/latest/reference/lex-models/put-slot-type.html) command.
4) The model is then manually rebuilt via the console and deployed just like any other training activity.

The syntax looks like this.

```sh
# foods.json is the data object that will be passed to the lambda function
request=$(<foods.json)

# invoke the lambda function from the command line and write the output to output.json
aws lambda invoke --function-name convertFoodsObjForSlot --payload ""$request"" output.json

data=$(<output.json)

# invoke lex to create a new version of the FoodEntreeNames custom slot using the data from output.json
aws lex-models put-slot-type --name FoodEntreeNames --checksum <enter latest checksum here> --enumeration-values ""$data"" >> sysout.txt

```

Also, the checksum value is from the prior deployment of the custom slot. You can find the current checksum for a slot by the get-slot-type command.

```sh

# find the latest information about a custom slot
aws lex-models get-slot-type --name FoodOptions --slot-type-version '$LATEST'

```

## Sharing Session Data between Intents

The key to effective long-running conversations between a user and a bot is around managing context of the conversation.
For example, a dialog could go on for several minutes, and invoke many intents.

![](https://s3.amazonaws.com/fastfoodchatbot/media/LongChat.png)

Part of facilitating this is designing a flow of the conversation. Error messages should not be too abrupt, and should lead the user to an alternative query.
The intents should also pass data between one another. This can be accomplished by saving the session data when completing an intent.
This allows the next intent to retrieve the information and not require the user to repeat it with each request.

In the example above, the conversation begins with the user indicating which restaurant they are eating at. This gets persisted in the session by the FoodTypeOptions intent.
The dialog shifts to details of the meal, but the restaraunt name gets saved. Also, the initial response on the calorie count is brief, but offers a more detailed explainatin if the user says 'more details'.
Once again the data gets stored in the session data, and is passed back as part of the Lex framework. Here is example of one of the objects.

```sh
{
    ""messageVersion"": ""1.0"",
    ""invocationSource"": ""FulfillmentCodeHook"",
    ""userId"": ""1712299768809980"",
    ""sessionAttributes"": {
        ""restaurantName"": ""Burger King"",
        ""foodName"": ""Whopper"",
        ""foodCalories"": ""660"",
        ""extraName"": ""Onion Rings"",
        ""extraCalories"": ""410"",
        ""drinkCalories"": ""310"",
        ""drinkName"": ""32 oz. Large Coke"",
        ""totalCalories"": ""1380""
    },
    ""bot"": {
        ""name"": ""FastFoodChecker"",
        ""alias"": ""PROD"",
        ""version"": ""42""
    },
    ""outputDialogMode"": ""Text"",
    ""currentIntent"": {
        ""name"": ""DailyIntakeAnalysis"",
        ""slots"": {},
        ""slotDetails"": {},
        ""confirmationStatus"": ""None""
    },
    ""inputTranscript"": ""Analyze my meal""
}
```

The lambda functions in this bot are completely stateless, so any data from prior invocations must come through the request object.

## Creating buttons in user interface
One of the features in the major chatbot user interfaces (Messenger, Slack, etc.) is buttons. These reduce the effort by the user by providing a series of options like so.
![](https://s3.amazonaws.com/fastfoodchatbot/media/FBMessengerButtons.JPG)

Each messaging platform has their own implementation of this pattern, and [here](https://developers.facebook.com/docs/messenger-platform/send-messages/template/button) is what Messenger uses.
Lex handles the translation to get the buttons into the correct format, and within Lex, the [responseCard](http://docs.aws.amazon.com/lex/latest/dg/lambda-input-response-format.html#lambda-response-dialogAction) attribute needs to be provided with the specifics on the button detail.

## Deployment pipeline
Modifying Lex is done completely through the console. The lambda functions that serve the business logic are hosted in AWS lambda, and are deployed from an EC2 host.

The full deployment script is [/src/build.sh](https://github.com/terrenjpeterson/caloriecounter/blob/master/src/build.sh) but a quick overview can be found in the following instructions.

```sh
# this creates the build package as a zip file containing the code and relevant data objects
zip -r foodbot.zip lambda.js data/restaurants.json data/foods.json data/drinks.json

# this CLI command copies the build package to an s3 bucket for staging
aws s3 cp foodbot.zip s3://fastfoodchatbot/binaries/

# this CLI command takes the package from the s3 bucket, and overlays the lambda function 'myCalorieCounterGreen'
aws lambda update-function-code --function-name myCalorieCounterGreen --s3-bucket fastfoodchatbot --s3-key binaries/foodbot.zip

# this CLI command invokes the lambda function with the data object  read into request, and writes out a response to the testOutput data object.
aws lambda invoke --function-name myCalorieCalculatorGreen --payload ""$request"" testOutput.json
```

1) Create a zip file on the host that acts as the build server. It's from the build server where both the source code and data files are manipulated. The datafiles are then read locally, and whenever they change, a new deployment is created.
2) Upload the zip file to an s3 bucket using the proper AWS CLI commands.
3) Update the existing lambda function with the new package, and using the AWS CLI command, provide the location of the zip file that contains the build package.
4) Execute a test of the lambda function directly with valid sample data. The response object is returned and written to the console as well as a local file.

This process is repeated for each of the lambda functions that are called by Lex. This includes having at least one test condition for each lambda function to ensure that the deployment was done correctly. 

## Add Personality to the Bot

One of the topics in bot design is around having a personality. Something to consider when designing the intents is what are all of the possible questions that a user may ask.
This should include off-topic questions, such as 'what is your name' or emotional responses like 'oh-no' or 'you suck'.
These are easy to code - usually just a simple request-response with no slots involved, and does tend to make the dialogs more natural.

For an example, here is a brief response coded in the [misc.js](https://github.com/terrenjpeterson/caloriecounter/blob/master/src/misc.js) function that responds to if someone asks what the bots name is.
In the models, an utterance of 'what is your name' resolves to this intent.

```sh

if (intentName === 'MyName') {
    console.log(""user requested bot name"");
    return getBotName(intentRequest, callback);
}
...
function getBotName(intentRequest, callback) {
    const sessionAttributes = intentRequest.sessionAttributes || {};

    var botResponse = ""My name is Chuck. I'm a chatbot that helps people sort out "" +
	""fast food options. Talking about food all day makes me hungry!!!"";

    callback(close(sessionAttributes, 'Fulfilled',
        { contentType: 'PlainText', content: botResponse }));
}

```

## Website in progress
As part of the initial effort, I was attempting to get this chatbot published to the slack store. As part of that, I needed to build a website for public support of the app. It's a work in progress, and called caloriecountbot.com. It's hosted by s3, and the source is located in the /website folder.

","calorie counter chatbot

this is a lex based chatbot that will calculate calories made by trips to different fast food restaurants it is enabled from a fb messenger chatbothttpswwwfacebookcomfastfoodcaloriecounter that can be accessed from the facebook page or through the messenger app on your phone

table of contents

 how does this use the nlu models from lexusingnlumodels
 what custom slots are used by the nlucustomslots
 how can multiple slots be used in a single intentmultipleslotsinasingleintent
 what are the lambda functions called by the botruleslogicinlambda
 where does it get its data fromdatalookuptables
 how do you create large custom slotslargecustomslots
 how does information get shared between intentssharingsessiondatabetweenintents
 how do you create buttons for the user to click oncreatingbuttonsinuserinterface
 what does the deployment model look likedeploymentpipeline
 does a bot have a personalityaddpersonalitytothebot
 what is the website code forwebsiteinprogress

 using nlu models
this bot uses aws lex a service that contains the intelligence to be able to decipher user requests and trigger intents based on data provided in the models the intents then invoke lambda functions that contain business logic specific to the intent

httpss3amazonawscomfastfoodchatbotmedialexarchitecturepng

currently there are many different intents that the nlu process sorts into here are the core functions of the bot
 foodtypeoptions sample utterance what are my food options
 getcalories sample utterance how many calories in a big mac
 getmexicanfoodcalories sample utterance how many calories in a chicken burrito
 getnuggetscalories sample utterance how many calories in 20 chicken nuggets
 getpizzacalories sample utterance how many calories in 2 slices of pepperoni pizza at papa johns
 getchinesecalories sample utterance how many calories in a kung pao chicken
 getchickencalories sample utterance how many calories in a piece of original recipe chicken 

there are also intents that complement the core features
 moredetails sample utterance more details note this can only be invoked after prior requests are made in the conversation as it ' s reading data from the session
 dailyintakeanalysis sample utterance analyze my meal similar to more details this uses session data so must follow one of the prior requests
 whatpizzatypes sample utterance what types of pizza are there
 whichrestaurants sample utterance list of restaurants
 calculatebmr sample utterance what is my daily recommended calorie intake
 getcarbs sample utterance how many carbs in this

then there are intents that form the ' personality ' of the bot these were created based on real user usage and prevent the generic error message from being used to respond
 endconversation builtin intent uses aws sample utterances like stop
 introduction sample utterances hello get started send message
 thanks sample utterances thanks goodbye bye
 complement sample utterances i love you
 critic sample utterances u suck
 shock sample utterances wow ouch
 myname sample utterances what is your name
 helprequest builtin intent uses aws sample utterances like help
 newrestaurant sample utterance new restaurant this clears out the session

within each of the intents sample utterances are provided that construct the potential sentances that a user may provide the value of the slot ie large fry gets passed to the lambda function as a unique attribute

you can get the summary information from the aws cli by executing the following command

sh
aws lexmodels getbot name fastfoodchecker versionoralias prod


 custom slots
it is a combination of the sample utterances and slots that determine which intent the nlu models will invoke these are maintained in lex and are used for training the models 

currently here are the custom slots that are used by the intents
 foodoptions sample values big mac smokehouse brisket sandwich etc this has hundreds of entries and is generated from the foodsjson data object
 drinkoptions sample values water iced tea large diet lemonade etc this has many entries and is generated from the drinksjson data object
 fastfoodrestaurants sample values chickfila mcdonald ' s wendy ' s
 foodtype sample values burger salad chicken
 extraitems sample values large fry sugar cookie side salad
 mexicanfoodtypes sample values burrito gordita soft taco
 preparation sample values grilled fried baked
 protein sample values steak chicken black bean
 pizzarestaurants sample values dominos papa john ' s little caesars
 pizzasize sample values small medium large
 pizzatype sample values sausage pepperoni honolulu hawaiian
 chineseentree sample values orange chicken kung pao chicken
 chineseside sample values fried rice mixed vegetables
 chineseappetizer sample values egg roll spring roll
 foodadjustment sample values add guacomole no cheese
 dressingoptions sample values italian balsamic vinaigrette
 dippingsauce sample values honey mustard sweet and sour
 chickenpart sample values drumstick breast wing
 chickenstyle sample values original recipe extra crispy
 chickensides sample values mashed potatoes baked beans

an item does not need to be specified in the slot for the nlu to place a value into it however if the data is sparse it may degrade how the nlu interprets the user requests

 multiple slots in a single intent

usability of a chatbot requires natural interaction to occur with a user one key concept is around how to incorporate multiple slots into a single intent
for example a user could ask how many calories in a big mac fries and a coke that is three different items that each need to be parsed out
within this chatbot the main processing has many different slots that map into intents for example here are the slots that map into the getcalories intent

httpss3amazonawscomfastfoodchatbotmediaslotsexamplepng

there are a couple of items to note in this

1 in the example request above the nlu models would parse the data from the utterance into three different slots food extra and drink

2 the slot order doesn ' t matter to the parsing but it does drive what would be the next response slot 1 which restaurant are you at

3 there are two slots that aren ' t required in this intent ketchup and packetsketchup this optional information is asked for if fries is asked for as a side item this is driven by the code in the lambda function that is invoked in the validation code hook

 rules logic in lambda
all of the logic in formulating responses to different intents is processed in a series of lambda functions which lambda function to invoke is managed within lex and set at the intent level this enables modularity to be built within the application keeping the functions lightweight

there are two different spots within lex that can invoke a lambda function the first is through basic validation and the attribute name that identifies it is called invocationsource 
there are two potential values for this dialogcodehook and fulfillmentcodehook here is where these lambda functions are specified in the lex bot

httpss3amazonawscomfastfoodchatbotmedialambdahookspng

the first dropdown is the validation and calls the lambda function every time the bot is called the attribute that it passes is called dialogcodehook
the second dropdown is the fulfillment and only called once the mandatory slots have been completed and the validation from the initial call is complete
this allows for the functions to be different enabling better scalability in building the bot

here is an overview of each function currently written

1 lambdajs the main function that handles the basic validation for queries sourced only in dialogcodehook mode

2 calculatejs calculating the response for the actual calories in a meal is handled by this funciton and is sourced by a fulfillmentcodehook

3 pizzajs handles intents around calculating calories in a pizza including the intent whatpizzatypes

4 miscjs handles simple intents like help the introduction and more details around a meal

5 chinesejs handles intents around chinese food and coupling the different slots together to form a meal

 data lookup tables
the core functionality of this bot is to be able to answer queries of how many calories are in different meals while the slots that lex uses are helpful in training the nlu models they don ' t have the ability to serve as lookup files 
that ' s where the json objects come in that are stored in the srcdatahttpsgithubcomterrenjpetersoncaloriecountertreemastersrcdata folder

here is a sample of the format
sh

 
 restaurantchipotle
 fooditems
 foodnamechicken burrito foodtypeburrito proteinchicken calories975
 foodnamesteak burrito foodtypeburrito proteinsteak calories945
 foodnamecarnitas burrito foodtypeburrito proteincarnitas calories1005


the lambda functions refer to these objects to respond to different queries and to calculate calorie consumption for the user

each food item may be duplicated for different spellings and phrases used to retrieve for example

sh
 &#9; foodnamefries calories340
 foodnamefry calories340
 foodnamefrys calories340
 &#9; foodnamefrench fries calories340
 foodnamefrench fry calories340
 &#9; foodnamemedium fries calories340
 foodnamemedium fry calories340


there are also lookup tables around sauces dressings and individual item adjustments for example

sh


 
 dressingnameranch
 calories200
 carbs11
 restaurantnamesmcdonalds
 
 
 dressingnamefrench
 calories300
 carbs22
 restaurantnamesmcdonalds
 



given that the nlu models do not correct spelling provided by the user it ' s up to the lambda functions to handle this part of the logic

 large custom slots

managing large custom slots can be difficult particularly if the data is dynamic the main food lookup has several hundred unique values in it and growing based on user usage
the process for creating this slot has been automated and the data for the custom slot is taken from the foodsjsonhttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcdatafoodsjson data object
this is done through the aws cli that can load these directly from the command line all of the files are contained in the slotshttpsgithubcomterrenjpetersoncaloriecountertreemastersrcslots directory for reference 
here are the steps used to create

1 the foodsjson data object is passed to a lambda function called convertfoodsobjforslot
2 the function sorts through the data eliminates duplicates then the data is formatted into a simple array with just the entree names
3 the array is returned and then passed into the aws cli using the putslottypehttpsdocsawsamazoncomclilatestreferencelexmodelsputslottypehtml command
4 the model is then manually rebuilt via the console and deployed just like any other training activity

the syntax looks like this

sh
 foodsjson is the data object that will be passed to the lambda function
requestfoodsjson

 invoke the lambda function from the command line and write the output to outputjson
aws lambda invoke functionname convertfoodsobjforslot payload request outputjson

dataoutputjson

 invoke lex to create a new version of the foodentreenames custom slot using the data from outputjson
aws lexmodels putslottype name foodentreenames checksum enter latest checksum here enumerationvalues data sysouttxt



also the checksum value is from the prior deployment of the custom slot you can find the current checksum for a slot by the getslottype command

sh

 find the latest information about a custom slot
aws lexmodels getslottype name foodoptions slottypeversion ' latest ' 



 sharing session data between intents

the key to effective longrunning conversations between a user and a bot is around managing context of the conversation
for example a dialog could go on for several minutes and invoke many intents

httpss3amazonawscomfastfoodchatbotmedialongchatpng

part of facilitating this is designing a flow of the conversation error messages should not be too abrupt and should lead the user to an alternative query
the intents should also pass data between one another this can be accomplished by saving the session data when completing an intent
this allows the next intent to retrieve the information and not require the user to repeat it with each request

in the example above the conversation begins with the user indicating which restaurant they are eating at this gets persisted in the session by the foodtypeoptions intent
the dialog shifts to details of the meal but the restaraunt name gets saved also the initial response on the calorie count is brief but offers a more detailed explainatin if the user says ' more details ' 
once again the data gets stored in the session data and is passed back as part of the lex framework here is example of one of the objects

sh

 messageversion 10
 invocationsource fulfillmentcodehook
 userid 1712299768809980
 sessionattributes 
 restaurantname burger king
 foodname whopper
 foodcalories 660
 extraname onion rings
 extracalories 410
 drinkcalories 310
 drinkname 32 oz large coke
 totalcalories 1380
 
 bot 
 name fastfoodchecker
 alias prod
 version 42
 
 outputdialogmode text
 currentintent 
 name dailyintakeanalysis
 slots 
 slotdetails 
 confirmationstatus none
 
 inputtranscript analyze my meal



the lambda functions in this bot are completely stateless so any data from prior invocations must come through the request object

 creating buttons in user interface
one of the features in the major chatbot user interfaces messenger slack etc is buttons these reduce the effort by the user by providing a series of options like so
httpss3amazonawscomfastfoodchatbotmediafbmessengerbuttonsjpg

each messaging platform has their own implementation of this pattern and herehttpsdevelopersfacebookcomdocsmessengerplatformsendmessagestemplatebutton is what messenger uses
lex handles the translation to get the buttons into the correct format and within lex the responsecardhttpdocsawsamazoncomlexlatestdglambdainputresponseformathtmllambdaresponsedialogaction attribute needs to be provided with the specifics on the button detail

 deployment pipeline
modifying lex is done completely through the console the lambda functions that serve the business logic are hosted in aws lambda and are deployed from an ec2 host

the full deployment script is srcbuildshhttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcbuildsh but a quick overview can be found in the following instructions

sh
 this creates the build package as a zip file containing the code and relevant data objects
zip r foodbotzip lambdajs datarestaurantsjson datafoodsjson datadrinksjson

 this cli command copies the build package to an s3 bucket for staging
aws s3 cp foodbotzip s3fastfoodchatbotbinaries

 this cli command takes the package from the s3 bucket and overlays the lambda function ' mycaloriecountergreen ' 
aws lambda updatefunctioncode functionname mycaloriecountergreen s3bucket fastfoodchatbot s3key binariesfoodbotzip

 this cli command invokes the lambda function with the data object read into request and writes out a response to the testoutput data object
aws lambda invoke functionname mycaloriecalculatorgreen payload request testoutputjson


1 create a zip file on the host that acts as the build server it ' s from the build server where both the source code and data files are manipulated the datafiles are then read locally and whenever they change a new deployment is created
2 upload the zip file to an s3 bucket using the proper aws cli commands
3 update the existing lambda function with the new package and using the aws cli command provide the location of the zip file that contains the build package
4 execute a test of the lambda function directly with valid sample data the response object is returned and written to the console as well as a local file

this process is repeated for each of the lambda functions that are called by lex this includes having at least one test condition for each lambda function to ensure that the deployment was done correctly 

 add personality to the bot

one of the topics in bot design is around having a personality something to consider when designing the intents is what are all of the possible questions that a user may ask
this should include offtopic questions such as ' what is your name ' or emotional responses like ' ohno ' or ' you suck ' 
these are easy to code usually just a simple requestresponse with no slots involved and does tend to make the dialogs more natural

for an example here is a brief response coded in the miscjshttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcmiscjs function that responds to if someone asks what the bots name is
in the models an utterance of ' what is your name ' resolves to this intent

sh

if intentname ' myname ' 
 consoleloguser requested bot name
 return getbotnameintentrequest callback


function getbotnameintentrequest callback 
 const sessionattributes intentrequestsessionattributes 

 var botresponse my name is chuck i ' m a chatbot that helps people sort out 
 &#9; fast food options talking about food all day makes me hungry

 callbackclosesessionattributes ' fulfilled ' 
 contenttype ' plaintext ' content botresponse 




 website in progress
as part of the initial effort i was attempting to get this chatbot published to the slack store as part of that i needed to build a website for public support of the app it ' s a work in progress and called caloriecountbotcom it ' s hosted by s3 and the source is located in the website folder",calori counter chatbot thi lex base chatbot calcul calori made trip differ fast food restaur enabl fb messeng chatbothttpswwwfacebookcomfastfoodcaloriecount access facebook page messeng app phone tabl content doe thi use nlu model lexusingnlumodel custom slot use nlucustomslot multipl slot use singl intentmultipleslotsinasingleint lambda function call botruleslogicinlambda doe get data fromdatalookupt creat larg custom slotslargecustomslot doe inform get share intentssharingsessiondatabetweenint creat button user click oncreatingbuttonsinuserinterfac doe deploy model look likedeploymentpipelin doe bot personalityaddpersonalitytothebot websit code forwebsiteinprogress use nlu model thi bot use aw lex servic contain intellig abl deciph user request trigger intent base data provid model intent invok lambda function contain busi logic specif intent httpss3amazonawscomfastfoodchatbotmedialexarchitecturepng current mani differ intent nlu process sort core function bot foodtypeopt sampl utter food option getcalori sampl utter mani calori big mac getmexicanfoodcalori sampl utter mani calori chicken burrito getnuggetscalori sampl utter mani calori 20 chicken nugget getpizzacalori sampl utter mani calori 2 slice pepperoni pizza papa john getchinesecalori sampl utter mani calori kung pao chicken getchickencalori sampl utter mani calori piec origin recip chicken also intent complement core featur moredetail sampl utter detail note thi onli invok prior request made convers ' read data session dailyintakeanalysi sampl utter analyz meal similar detail thi use session data must follow one prior request whatpizzatyp sampl utter type pizza whichrestaur sampl utter list restaur calculatebmr sampl utter daili recommend calori intak getcarb sampl utter mani carb thi intent form ' person ' bot creat base real user usag prevent gener error messag use respond endconvers builtin intent use aw sampl utter like stop introduct sampl utter hello get start send messag thank sampl utter thank goodby bye complement sampl utter love critic sampl utter u suck shock sampl utter wow ouch mynam sampl utter name helprequest builtin intent use aw sampl utter like help newrestaur sampl utter new restaur thi clear session within intent sampl utter provid construct potenti sentanc user may provid valu slot ie larg fri get pass lambda function uniqu attribut get summari inform aw cli execut follow command sh aw lexmodel getbot name fastfoodcheck versionoralia prod custom slot combin sampl utter slot determin intent nlu model invok maintain lex use train model current custom slot use intent foodopt sampl valu big mac smokehous brisket sandwich etc thi ha hundr entri gener foodsjson data object drinkopt sampl valu water ice tea larg diet lemonad etc thi ha mani entri gener drinksjson data object fastfoodrestaur sampl valu chickfila mcdonald ' wendi ' foodtyp sampl valu burger salad chicken extraitem sampl valu larg fri sugar cooki side salad mexicanfoodtyp sampl valu burrito gordita soft taco prepar sampl valu grill fri bake protein sampl valu steak chicken black bean pizzarestaur sampl valu domino papa john ' littl caesar pizzas sampl valu small medium larg pizzatyp sampl valu sausag pepperoni honolulu hawaiian chineseentre sampl valu orang chicken kung pao chicken chinesesid sampl valu fri rice mix veget chineseappet sampl valu egg roll spring roll foodadjust sampl valu add guacomol chees dressingopt sampl valu italian balsam vinaigrett dippingsauc sampl valu honey mustard sweet sour chickenpart sampl valu drumstick breast wing chickenstyl sampl valu origin recip extra crispi chickensid sampl valu mash potato bake bean item doe need specifi slot nlu place valu howev data spars may degrad nlu interpret user request multipl slot singl intent usabl chatbot requir natur interact occur user one key concept around incorpor multipl slot singl intent exampl user could ask mani calori big mac fri coke three differ item need pars within thi chatbot main process ha mani differ slot map intent exampl slot map getcalori intent httpss3amazonawscomfastfoodchatbotmediaslotsexamplepng coupl item note thi 1 exampl request abov nlu model would pars data utter three differ slot food extra drink 2 slot order ' matter pars doe drive would next respons slot 1 restaur 3 two slot ' requir thi intent ketchup packetsketchup thi option inform ask fri ask side item thi driven code lambda function invok valid code hook rule logic lambda logic formul respons differ intent process seri lambda function lambda function invok manag within lex set intent level thi enabl modular built within applic keep function lightweight two differ spot within lex invok lambda function first basic valid attribut name identifi call invocationsourc two potenti valu thi dialogcodehook fulfillmentcodehook lambda function specifi lex bot httpss3amazonawscomfastfoodchatbotmedialambdahookspng first dropdown valid call lambda function everi time bot call attribut pass call dialogcodehook second dropdown fulfil onli call onc mandatori slot complet valid initi call complet thi allow function differ enabl better scalabl build bot overview function current written 1 lambdaj main function handl basic valid queri sourc onli dialogcodehook mode 2 calculatej calcul respons actual calori meal handl thi funciton sourc fulfillmentcodehook 3 pizzaj handl intent around calcul calori pizza includ intent whatpizzatyp 4 miscj handl simpl intent like help introduct detail around meal 5 chinesej handl intent around chines food coupl differ slot togeth form meal data lookup tabl core function thi bot abl answer queri mani calori differ meal slot lex use help train nlu model ' abil serv lookup file ' json object come store srcdatahttpsgithubcomterrenjpetersoncaloriecountertreemastersrcdata folder sampl format sh restaurantchipotl fooditem foodnamechicken burrito foodtypeburrito proteinchicken calories975 foodnamesteak burrito foodtypeburrito proteinsteak calories945 foodnamecarnita burrito foodtypeburrito proteincarnita calories1005 lambda function refer object respond differ queri calcul calori consumpt user food item may duplic differ spell phrase use retriev exampl sh &#9; foodnamefri calories340 foodnamefri calories340 foodnamefri calories340 &#9; foodnamefrench fri calories340 foodnamefrench fri calories340 &#9; foodnamemedium fri calories340 foodnamemedium fri calories340 also lookup tabl around sauc dress individu item adjust exampl sh dressingnameranch calories200 carbs11 restaurantnamesmcdonald dressingnamefrench calories300 carbs22 restaurantnamesmcdonald given nlu model correct spell provid user ' lambda function handl thi part logic larg custom slot manag larg custom slot difficult particularli data dynam main food lookup ha sever hundr uniqu valu grow base user usag process creat thi slot ha autom data custom slot taken foodsjsonhttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcdatafoodsjson data object thi done aw cli load directli command line file contain slotshttpsgithubcomterrenjpetersoncaloriecountertreemastersrcslot directori refer step use creat 1 foodsjson data object pass lambda function call convertfoodsobjforslot 2 function sort data elimin duplic data format simpl array entre name 3 array return pass aw cli use putslottypehttpsdocsawsamazoncomclilatestreferencelexmodelsputslottypehtml command 4 model manual rebuilt via consol deploy like ani train activ syntax look like thi sh foodsjson data object pass lambda function requestfoodsjson invok lambda function command line write output outputjson aw lambda invok functionnam convertfoodsobjforslot payload request outputjson dataoutputjson invok lex creat new version foodentreenam custom slot use data outputjson aw lexmodel putslottyp name foodentreenam checksum enter latest checksum enumerationvalu data sysouttxt also checksum valu prior deploy custom slot find current checksum slot getslottyp command sh find latest inform custom slot aw lexmodel getslottyp name foodopt slottypevers ' latest ' share session data intent key effect longrun convers user bot around manag context convers exampl dialog could go sever minut invok mani intent httpss3amazonawscomfastfoodchatbotmedialongchatpng part facilit thi design flow convers error messag abrupt lead user altern queri intent also pass data one anoth thi accomplish save session data complet intent thi allow next intent retriev inform requir user repeat request exampl abov convers begin user indic restaur eat thi get persist session foodtypeopt intent dialog shift detail meal restaraunt name get save also initi respons calori count brief offer detail explainatin user say ' detail ' onc data get store session data pass back part lex framework exampl one object sh messagevers 10 invocationsourc fulfillmentcodehook userid 1712299768809980 sessionattribut restaurantnam burger king foodnam whopper foodcalori 660 extranam onion ring extracalori 410 drinkcalori 310 drinknam 32 oz larg coke totalcalori 1380 bot name fastfoodcheck alia prod version 42 outputdialogmod text currentint name dailyintakeanalysi slot slotdetail confirmationstatu none inputtranscript analyz meal lambda function thi bot complet stateless ani data prior invoc must come request object creat button user interfac one featur major chatbot user interfac messeng slack etc button reduc effort user provid seri option like httpss3amazonawscomfastfoodchatbotmediafbmessengerbuttonsjpg messag platform ha implement thi pattern herehttpsdevelopersfacebookcomdocsmessengerplatformsendmessagestemplatebutton messeng use lex handl translat get button correct format within lex responsecardhttpdocsawsamazoncomlexlatestdglambdainputresponseformathtmllambdaresponsedialogact attribut need provid specif button detail deploy pipelin modifi lex done complet consol lambda function serv busi logic host aw lambda deploy ec2 host full deploy script srcbuildshhttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcbuildsh quick overview found follow instruct sh thi creat build packag zip file contain code relev data object zip r foodbotzip lambdaj datarestaurantsjson datafoodsjson datadrinksjson thi cli command copi build packag s3 bucket stage aw s3 cp foodbotzip s3fastfoodchatbotbinari thi cli command take packag s3 bucket overlay lambda function ' mycaloriecountergreen ' aw lambda updatefunctioncod functionnam mycaloriecountergreen s3bucket fastfoodchatbot s3key binariesfoodbotzip thi cli command invok lambda function data object read request write respons testoutput data object aw lambda invok functionnam mycaloriecalculatorgreen payload request testoutputjson 1 creat zip file host act build server ' build server sourc code data file manipul datafil read local whenev chang new deploy creat 2 upload zip file s3 bucket use proper aw cli command 3 updat exist lambda function new packag use aw cli command provid locat zip file contain build packag 4 execut test lambda function directli valid sampl data respons object return written consol well local file thi process repeat lambda function call lex thi includ least one test condit lambda function ensur deploy wa done correctli add person bot one topic bot design around person someth consid design intent possibl question user may ask thi includ offtop question ' name ' emot respons like ' ohno ' ' suck ' easi code usual simpl requestrespons slot involv doe tend make dialog natur exampl brief respons code miscjshttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcmiscj function respond someon ask bot name model utter ' name ' resolv thi intent sh intentnam ' mynam ' consolelogus request bot name return getbotnameintentrequest callback function getbotnameintentrequest callback const sessionattribut intentrequestsessionattribut var botrespons name chuck ' chatbot help peopl sort &#9; fast food option talk food day make hungri callbackclosesessionattribut ' fulfil ' contenttyp ' plaintext ' content botrespons websit progress part initi effort wa attempt get thi chatbot publish slack store part need build websit public support app ' work progress call caloriecountbotcom ' host s3 sourc locat websit folder,calorie counter chatbot lex based chatbot calculate calorie made trip different fast food restaurant enabled fb messenger chatbothttpswwwfacebookcomfastfoodcaloriecounter accessed facebook page messenger app phone table content doe use nlu model lexusingnlumodels custom slot used nlucustomslots multiple slot used single intentmultipleslotsinasingleintent lambda function called botruleslogicinlambda doe get data fromdatalookuptables create large custom slotslargecustomslots doe information get shared intentssharingsessiondatabetweenintents create button user click oncreatingbuttonsinuserinterface doe deployment model look likedeploymentpipeline doe bot personalityaddpersonalitytothebot website code forwebsiteinprogress using nlu model bot us aws lex service contains intelligence able decipher user request trigger intent based data provided model intent invoke lambda function contain business logic specific intent httpss3amazonawscomfastfoodchatbotmedialexarchitecturepng currently many different intent nlu process sort core function bot foodtypeoptions sample utterance food option getcalories sample utterance many calorie big mac getmexicanfoodcalories sample utterance many calorie chicken burrito getnuggetscalories sample utterance many calorie 20 chicken nugget getpizzacalories sample utterance many calorie 2 slice pepperoni pizza papa john getchinesecalories sample utterance many calorie kung pao chicken getchickencalories sample utterance many calorie piece original recipe chicken also intent complement core feature moredetails sample utterance detail note invoked prior request made conversation ' reading data session dailyintakeanalysis sample utterance analyze meal similar detail us session data must follow one prior request whatpizzatypes sample utterance type pizza whichrestaurants sample utterance list restaurant calculatebmr sample utterance daily recommended calorie intake getcarbs sample utterance many carbs intent form ' personality ' bot created based real user usage prevent generic error message used respond endconversation builtin intent us aws sample utterance like stop introduction sample utterance hello get started send message thanks sample utterance thanks goodbye bye complement sample utterance love critic sample utterance u suck shock sample utterance wow ouch myname sample utterance name helprequest builtin intent us aws sample utterance like help newrestaurant sample utterance new restaurant clear session within intent sample utterance provided construct potential sentances user may provide value slot ie large fry get passed lambda function unique attribute get summary information aws cli executing following command sh aws lexmodels getbot name fastfoodchecker versionoralias prod custom slot combination sample utterance slot determine intent nlu model invoke maintained lex used training model currently custom slot used intent foodoptions sample value big mac smokehouse brisket sandwich etc ha hundred entry generated foodsjson data object drinkoptions sample value water iced tea large diet lemonade etc ha many entry generated drinksjson data object fastfoodrestaurants sample value chickfila mcdonald ' wendy ' foodtype sample value burger salad chicken extraitems sample value large fry sugar cookie side salad mexicanfoodtypes sample value burrito gordita soft taco preparation sample value grilled fried baked protein sample value steak chicken black bean pizzarestaurants sample value domino papa john ' little caesar pizzasize sample value small medium large pizzatype sample value sausage pepperoni honolulu hawaiian chineseentree sample value orange chicken kung pao chicken chineseside sample value fried rice mixed vegetable chineseappetizer sample value egg roll spring roll foodadjustment sample value add guacomole cheese dressingoptions sample value italian balsamic vinaigrette dippingsauce sample value honey mustard sweet sour chickenpart sample value drumstick breast wing chickenstyle sample value original recipe extra crispy chickensides sample value mashed potato baked bean item doe need specified slot nlu place value however data sparse may degrade nlu interprets user request multiple slot single intent usability chatbot requires natural interaction occur user one key concept around incorporate multiple slot single intent example user could ask many calorie big mac fry coke three different item need parsed within chatbot main processing ha many different slot map intent example slot map getcalories intent httpss3amazonawscomfastfoodchatbotmediaslotsexamplepng couple item note 1 example request nlu model would parse data utterance three different slot food extra drink 2 slot order ' matter parsing doe drive would next response slot 1 restaurant 3 two slot ' required intent ketchup packetsketchup optional information asked fry asked side item driven code lambda function invoked validation code hook rule logic lambda logic formulating response different intent processed series lambda function lambda function invoke managed within lex set intent level enables modularity built within application keeping function lightweight two different spot within lex invoke lambda function first basic validation attribute name identifies called invocationsource two potential value dialogcodehook fulfillmentcodehook lambda function specified lex bot httpss3amazonawscomfastfoodchatbotmedialambdahookspng first dropdown validation call lambda function every time bot called attribute pass called dialogcodehook second dropdown fulfillment called mandatory slot completed validation initial call complete allows function different enabling better scalability building bot overview function currently written 1 lambdajs main function handle basic validation query sourced dialogcodehook mode 2 calculatejs calculating response actual calorie meal handled funciton sourced fulfillmentcodehook 3 pizzajs handle intent around calculating calorie pizza including intent whatpizzatypes 4 miscjs handle simple intent like help introduction detail around meal 5 chinesejs handle intent around chinese food coupling different slot together form meal data lookup table core functionality bot able answer query many calorie different meal slot lex us helpful training nlu model ' ability serve lookup file ' json object come stored srcdatahttpsgithubcomterrenjpetersoncaloriecountertreemastersrcdata folder sample format sh restaurantchipotle fooditems foodnamechicken burrito foodtypeburrito proteinchicken calories975 foodnamesteak burrito foodtypeburrito proteinsteak calories945 foodnamecarnitas burrito foodtypeburrito proteincarnitas calories1005 lambda function refer object respond different query calculate calorie consumption user food item may duplicated different spelling phrase used retrieve example sh &#9; foodnamefries calories340 foodnamefry calories340 foodnamefrys calories340 &#9; foodnamefrench fry calories340 foodnamefrench fry calories340 &#9; foodnamemedium fry calories340 foodnamemedium fry calories340 also lookup table around sauce dressing individual item adjustment example sh dressingnameranch calories200 carbs11 restaurantnamesmcdonalds dressingnamefrench calories300 carbs22 restaurantnamesmcdonalds given nlu model correct spelling provided user ' lambda function handle part logic large custom slot managing large custom slot difficult particularly data dynamic main food lookup ha several hundred unique value growing based user usage process creating slot ha automated data custom slot taken foodsjsonhttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcdatafoodsjson data object done aws cli load directly command line file contained slotshttpsgithubcomterrenjpetersoncaloriecountertreemastersrcslots directory reference step used create 1 foodsjson data object passed lambda function called convertfoodsobjforslot 2 function sort data eliminates duplicate data formatted simple array entree name 3 array returned passed aws cli using putslottypehttpsdocsawsamazoncomclilatestreferencelexmodelsputslottypehtml command 4 model manually rebuilt via console deployed like training activity syntax look like sh foodsjson data object passed lambda function requestfoodsjson invoke lambda function command line write output outputjson aws lambda invoke functionname convertfoodsobjforslot payload request outputjson dataoutputjson invoke lex create new version foodentreenames custom slot using data outputjson aws lexmodels putslottype name foodentreenames checksum enter latest checksum enumerationvalues data sysouttxt also checksum value prior deployment custom slot find current checksum slot getslottype command sh find latest information custom slot aws lexmodels getslottype name foodoptions slottypeversion ' latest ' sharing session data intent key effective longrunning conversation user bot around managing context conversation example dialog could go several minute invoke many intent httpss3amazonawscomfastfoodchatbotmedialongchatpng part facilitating designing flow conversation error message abrupt lead user alternative query intent also pas data one another accomplished saving session data completing intent allows next intent retrieve information require user repeat request example conversation begin user indicating restaurant eating get persisted session foodtypeoptions intent dialog shift detail meal restaraunt name get saved also initial response calorie count brief offer detailed explainatin user say ' detail ' data get stored session data passed back part lex framework example one object sh messageversion 10 invocationsource fulfillmentcodehook userid 1712299768809980 sessionattributes restaurantname burger king foodname whopper foodcalories 660 extraname onion ring extracalories 410 drinkcalories 310 drinkname 32 oz large coke totalcalories 1380 bot name fastfoodchecker alias prod version 42 outputdialogmode text currentintent name dailyintakeanalysis slot slotdetails confirmationstatus none inputtranscript analyze meal lambda function bot completely stateless data prior invocation must come request object creating button user interface one feature major chatbot user interface messenger slack etc button reduce effort user providing series option like httpss3amazonawscomfastfoodchatbotmediafbmessengerbuttonsjpg messaging platform ha implementation pattern herehttpsdevelopersfacebookcomdocsmessengerplatformsendmessagestemplatebutton messenger us lex handle translation get button correct format within lex responsecardhttpdocsawsamazoncomlexlatestdglambdainputresponseformathtmllambdaresponsedialogaction attribute need provided specific button detail deployment pipeline modifying lex done completely console lambda function serve business logic hosted aws lambda deployed ec2 host full deployment script srcbuildshhttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcbuildsh quick overview found following instruction sh creates build package zip file containing code relevant data object zip r foodbotzip lambdajs datarestaurantsjson datafoodsjson datadrinksjson cli command copy build package s3 bucket staging aws s3 cp foodbotzip s3fastfoodchatbotbinaries cli command take package s3 bucket overlay lambda function ' mycaloriecountergreen ' aws lambda updatefunctioncode functionname mycaloriecountergreen s3bucket fastfoodchatbot s3key binariesfoodbotzip cli command invokes lambda function data object read request writes response testoutput data object aws lambda invoke functionname mycaloriecalculatorgreen payload request testoutputjson 1 create zip file host act build server ' build server source code data file manipulated datafiles read locally whenever change new deployment created 2 upload zip file s3 bucket using proper aws cli command 3 update existing lambda function new package using aws cli command provide location zip file contains build package 4 execute test lambda function directly valid sample data response object returned written console well local file process repeated lambda function called lex includes least one test condition lambda function ensure deployment wa done correctly add personality bot one topic bot design around personality something consider designing intent possible question user may ask include offtopic question ' name ' emotional response like ' ohno ' ' suck ' easy code usually simple requestresponse slot involved doe tend make dialog natural example brief response coded miscjshttpsgithubcomterrenjpetersoncaloriecounterblobmastersrcmiscjs function responds someone asks bot name model utterance ' name ' resolve intent sh intentname ' myname ' consoleloguser requested bot name return getbotnameintentrequest callback function getbotnameintentrequest callback const sessionattributes intentrequestsessionattributes var botresponse name chuck ' chatbot help people sort &#9; fast food option talking food day make hungry callbackclosesessionattributes ' fulfilled ' contenttype ' plaintext ' content botresponse website progress part initial effort wa attempting get chatbot published slack store part needed build website public support app ' work progress called caloriecountbotcom ' hosted s3 source located website folder
JavaScript,"jc-nutritional-info
====================

An AngularJS component to show nutritional information, supporting one level deep of children.

## Usage

### `bower install jc-nutritional-info`

### Add a nutrition list on the scope

```javascript
$scope.nutrition = [{
  name: 'Carbohydrates',
  total: '50mg',
  children: [{
    name: 'Dietary Fiber',
    total: '10g'
  },{
    name: 'Sugars',
    total: '30g'
  }]
}]
```

### And in your template:
```html
<jc-nutritional-info nutrition-data=""nutrition"">
<jc-nutritional-info>
```

## Development

### Run Tests

 * `bower install`
 * `npm install .`
 * `npm test`","jcnutritionalinfo


an angularjs component to show nutritional information supporting one level deep of children

 usage

 bower install jcnutritionalinfo

 add a nutrition list on the scope

javascript
scopenutrition 
 name ' carbohydrates ' 
 total ' 50mg ' 
 children 
 name ' dietary fiber ' 
 total ' 10g ' 
 
 name ' sugars ' 
 total ' 30g ' 
 



 and in your template
html
jcnutritionalinfo nutritiondatanutrition
jcnutritionalinfo


 development

 run tests

 bower install
 npm install 
 npm test",jcnutritionalinfo angularj compon show nutrit inform support one level deep children usag bower instal jcnutritionalinfo add nutrit list scope javascript scopenutrit name ' carbohydr ' total ' 50mg ' children name ' dietari fiber ' total ' 10g ' name ' sugar ' total ' 30g ' templat html jcnutritionalinfo nutritiondatanutrit jcnutritionalinfo develop run test bower instal npm instal npm test,jcnutritionalinfo angularjs component show nutritional information supporting one level deep child usage bower install jcnutritionalinfo add nutrition list scope javascript scopenutrition name ' carbohydrate ' total ' 50mg ' child name ' dietary fiber ' total ' 10g ' name ' sugar ' total ' 30g ' template html jcnutritionalinfo nutritiondatanutrition jcnutritionalinfo development run test bower install npm install npm test
Stata,"# Machine learning on nutrition data to predict cardiovascular mortality

Most physicians base decisions about cardiovascular treatment based on a calculation of overall cardiovascular disease risk.

Nutrition is not currently accounted for in cardiovascular risk calculators, despite being a major contributor to cardiovascular risk. Nutrition is commonly measured through 24-hour dietary recalls, which are difficult to summarize and condense into standard metrics to improve cardiovascular risk estimation.

We propose to use deep learning to study the large sparse matrix of nutrition data from the National Health and Nutrition Examination Survey (1999-2010) linked to the National Death Index (2011), to determine how nutrition data may advance cardiovascular mortality prediction beyond traditional risk factors (age, sex, race/ethnicity, systolic blood pressure, blood pressure treatment, tobacco smoking, diabetes status).

We will compare our deep learning approach to four standard metrics of nutritional quality: the Healthy Eating Index (HEI-2015), Alternative Healthy Eating Index (AHEI-2010), the Mediterranean Diet Score (MDS), and DASH Diet Score.

Authors: Anirudh Jain <anirudhj@stanford.edu>, Pranav Samir Rajpurkar <pranavsr@stanford.edu>, Sanjay Basu <basus@stanford.edu>
","machine learning on nutrition data to predict cardiovascular mortality

most physicians base decisions about cardiovascular treatment based on a calculation of overall cardiovascular disease risk

nutrition is not currently accounted for in cardiovascular risk calculators despite being a major contributor to cardiovascular risk nutrition is commonly measured through 24hour dietary recalls which are difficult to summarize and condense into standard metrics to improve cardiovascular risk estimation

we propose to use deep learning to study the large sparse matrix of nutrition data from the national health and nutrition examination survey 19992010 linked to the national death index 2011 to determine how nutrition data may advance cardiovascular mortality prediction beyond traditional risk factors age sex raceethnicity systolic blood pressure blood pressure treatment tobacco smoking diabetes status

we will compare our deep learning approach to four standard metrics of nutritional quality the healthy eating index hei2015 alternative healthy eating index ahei2010 the mediterranean diet score mds and dash diet score

authors anirudh jain anirudhjstanfordedu pranav samir rajpurkar pranavsrstanfordedu sanjay basu basusstanfordedu",machin learn nutrit data predict cardiovascular mortal physician base decis cardiovascular treatment base calcul overal cardiovascular diseas risk nutrit current account cardiovascular risk calcul despit major contributor cardiovascular risk nutrit commonli measur 24hour dietari recal difficult summar condens standard metric improv cardiovascular risk estim propos use deep learn studi larg spars matrix nutrit data nation health nutrit examin survey 19992010 link nation death index 2011 determin nutrit data may advanc cardiovascular mortal predict beyond tradit risk factor age sex raceethn systol blood pressur blood pressur treatment tobacco smoke diabet statu compar deep learn approach four standard metric nutrit qualiti healthi eat index hei2015 altern healthi eat index ahei2010 mediterranean diet score md dash diet score author anirudh jain anirudhjstanfordedu pranav samir rajpurkar pranavsrstanfordedu sanjay basu basusstanfordedu,machine learning nutrition data predict cardiovascular mortality physician base decision cardiovascular treatment based calculation overall cardiovascular disease risk nutrition currently accounted cardiovascular risk calculator despite major contributor cardiovascular risk nutrition commonly measured 24hour dietary recall difficult summarize condense standard metric improve cardiovascular risk estimation propose use deep learning study large sparse matrix nutrition data national health nutrition examination survey 19992010 linked national death index 2011 determine nutrition data may advance cardiovascular mortality prediction beyond traditional risk factor age sex raceethnicity systolic blood pressure blood pressure treatment tobacco smoking diabetes status compare deep learning approach four standard metric nutritional quality healthy eating index hei2015 alternative healthy eating index ahei2010 mediterranean diet score md dash diet score author anirudh jain anirudhjstanfordedu pranav samir rajpurkar pranavsrstanfordedu sanjay basu basusstanfordedu
JavaScript,"# HomeFit

This project was generated with [Angular CLI](https://github.com/angular/angular-cli) version 6.2.3.

## Development server

Run `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The app will automatically reload if you change any of the source files.

## Code scaffolding

Run `ng generate component component-name` to generate a new component. You can also use `ng generate directive|pipe|service|class|guard|interface|enum|module`.

## Build

Run `ng build` to build the project. The build artifacts will be stored in the `dist/` directory. Use the `--prod` flag for a production build.

## Running unit tests

Run `ng test` to execute the unit tests via [Karma](https://karma-runner.github.io).

## Running end-to-end tests

Run `ng e2e` to execute the end-to-end tests via [Protractor](http://www.protractortest.org/).

## Further help

To get more help on the Angular CLI use `ng help` or go check out the [Angular CLI README](https://github.com/angular/angular-cli/blob/master/README.md).
","homefit

this project was generated with angular clihttpsgithubcomangularangularcli version 623

 development server

run ng serve for a dev server navigate to httplocalhost4200 the app will automatically reload if you change any of the source files

 code scaffolding

run ng generate component componentname to generate a new component you can also use ng generate directivepipeserviceclassguardinterfaceenummodule

 build

run ng build to build the project the build artifacts will be stored in the dist directory use the prod flag for a production build

 running unit tests

run ng test to execute the unit tests via karmahttpskarmarunnergithubio

 running endtoend tests

run ng e2e to execute the endtoend tests via protractorhttpwwwprotractortestorg

 further help

to get more help on the angular cli use ng help or go check out the angular cli readmehttpsgithubcomangularangularcliblobmasterreadmemd",homefit thi project wa gener angular clihttpsgithubcomangularangularcli version 623 develop server run ng serv dev server navig httplocalhost4200 app automat reload chang ani sourc file code scaffold run ng gener compon componentnam gener new compon also use ng gener directivepipeserviceclassguardinterfaceenummodul build run ng build build project build artifact store dist directori use prod flag product build run unit test run ng test execut unit test via karmahttpskarmarunnergithubio run endtoend test run ng e2e execut endtoend test via protractorhttpwwwprotractortestorg help get help angular cli use ng help go check angular cli readmehttpsgithubcomangularangularcliblobmasterreadmemd,homefit project wa generated angular clihttpsgithubcomangularangularcli version 623 development server run ng serve dev server navigate httplocalhost4200 app automatically reload change source file code scaffolding run ng generate component componentname generate new component also use ng generate directivepipeserviceclassguardinterfaceenummodule build run ng build build project build artifact stored dist directory use prod flag production build running unit test run ng test execute unit test via karmahttpskarmarunnergithubio running endtoend test run ng e2e execute endtoend test via protractorhttpwwwprotractortestorg help get help angular cli use ng help go check angular cli readmehttpsgithubcomangularangularcliblobmasterreadmemd
HTML,"# ClassProject-1-group-of-5

# Nutrion Value

## Description

Health conscious users are often frustrated by the effort it takes to easily determine the NutriVal of their food. Our nutriVal app addresses those needs and provides quick and easy answers. With our app you can search a specific food item and get all the info you need to make a healthy choice.

Our new NutriVal app brings value to your everyday health by keeping proper records of the food you eat.  It will tell you how many calories, protein, carbs, fat, and sodium are in each meal so that you can track what you are putting into your body.A study on variety in nutrition. Whether eating a meal or a snack, it is important to be aware of the VutritiVal of the foods you consume. NutriVal makes tracking and improving your diet simple. It  integrates  to provide you with a complete picture of your nutrition intake throughout the day and over time ...



Motivation for development? - Health improvement 
User story - Always looking for sites that can tell you how much weight of a specific food would give you the ideal NutriVal you’re looking for 

# User want to see the food tyeps 
NutriVal App helps its users to get the most out of their foods.
Food is something that everyone can relate to. It gives us energy, it provides nutrients for our bodies, and tastes great! NutriVal APP helps people become more aware of how many calories are in their food and the NutriVal in each.


## Deployment

[Deployed Page](https://bjavillo1059.github.io/Nutritional-Value/)

<img src=""./assets/img/Project Snippet.PNG"" alt="" img of Project Snippet""/>


## Technology Used

- HTML   Brandon/Carina/Matthew
- CSS    Carina/Matthew
- JavaScript     Brandon/Carina/Matthew
- Foundation JS     Brandon/Carina/Matthew
- Nutritionix API Brandon
- Edamam API Carina

## Process

As User when NutriVal link is opened, a display will show the title ""NutiVal"" to the left of a Navbar and Dropdown links to the right.

- drop downlinks display the two specific subjects that link to descriptions
- all dropdown items are linked to other sites for descriptions
- these dropdown links are the subject of an article that are directly relayed for in the Types of Food and Food Groups
    - website used for these breakdowns is [yes, therapy article:](https://en.yestherapyhelps.com/the-12-types-of-nutrition-and-their-characteristics-12159)

    - Types of Food
        - Meats/Fish
        - Vegetables/Legumes/Beans
        - Fruits
        - Grains
        - Dairy

    - Food Groups 
        - Vegenism
        - Vegetarianism
        - Emotional Eating
        - Sports Nutrition
        - Healthy Eating

A User has the option of inputing a food item in the input section where it reads ""item you are searching for..."", when the item is annotated in the input black the User will then click the ""Search for Info"" button.

- this function will render multiple information from querying API's and will display specific information
- API's used for information gathering:
    - Nutrionix API
        - will aquery API for information value that is normally found on Nutrition labels in the United States
        - infromation will display within the Nutritional Values field
        - a public APP_ID is required for search query
        - a publis API_key is required for search query
        - API only allows 200 search query's daily

    - Edamam API
        - will query API for information value of 4 popular recipes found and will display with the recipe field
        - a public APP_ID is required for search query
        - a publis API_key is required for search query
        - API allows for 10,000 search query's a week

A User can choose to inspect Site Map information and contributors GitHub pages

- the home link and project repo link will link the user to the site project page on GitHub
- links under ""SiteMap""

    - contributors:
        - Carina Diaz
        - Ricardo Hernandez
        - Brandon Javillo
        - Matthew Jaworski
        - Ayele Lintamo
","classproject1groupof5

 nutrion value

 description

health conscious users are often frustrated by the effort it takes to easily determine the nutrival of their food our nutrival app addresses those needs and provides quick and easy answers with our app you can search a specific food item and get all the info you need to make a healthy choice

our new nutrival app brings value to your everyday health by keeping proper records of the food you eat it will tell you how many calories protein carbs fat and sodium are in each meal so that you can track what you are putting into your bodya study on variety in nutrition whether eating a meal or a snack it is important to be aware of the vutritival of the foods you consume nutrival makes tracking and improving your diet simple it integrates to provide you with a complete picture of your nutrition intake throughout the day and over time 



motivation for development health improvement 
user story always looking for sites that can tell you how much weight of a specific food would give you the ideal nutrival youre looking for 

 user want to see the food tyeps 
nutrival app helps its users to get the most out of their foods
food is something that everyone can relate to it gives us energy it provides nutrients for our bodies and tastes great nutrival app helps people become more aware of how many calories are in their food and the nutrival in each


 deployment

deployed pagehttpsbjavillo1059githubionutritionalvalue

img srcassetsimgproject snippetpng alt img of project snippet


 technology used

 html brandoncarinamatthew
 css carinamatthew
 javascript brandoncarinamatthew
 foundation js brandoncarinamatthew
 nutritionix api brandon
 edamam api carina

 process

as user when nutrival link is opened a display will show the title nutival to the left of a navbar and dropdown links to the right

 drop downlinks display the two specific subjects that link to descriptions
 all dropdown items are linked to other sites for descriptions
 these dropdown links are the subject of an article that are directly relayed for in the types of food and food groups
 website used for these breakdowns is yes therapy articlehttpsenyestherapyhelpscomthe12typesofnutritionandtheircharacteristics12159

 types of food
 meatsfish
 vegetableslegumesbeans
 fruits
 grains
 dairy

 food groups 
 vegenism
 vegetarianism
 emotional eating
 sports nutrition
 healthy eating

a user has the option of inputing a food item in the input section where it reads item you are searching for when the item is annotated in the input black the user will then click the search for info button

 this function will render multiple information from querying api ' s and will display specific information
 api ' s used for information gathering
 nutrionix api
 will aquery api for information value that is normally found on nutrition labels in the united states
 infromation will display within the nutritional values field
 a public appid is required for search query
 a publis apikey is required for search query
 api only allows 200 search query ' s daily

 edamam api
 will query api for information value of 4 popular recipes found and will display with the recipe field
 a public appid is required for search query
 a publis apikey is required for search query
 api allows for 10000 search query ' s a week

a user can choose to inspect site map information and contributors github pages

 the home link and project repo link will link the user to the site project page on github
 links under sitemap

 contributors
 carina diaz
 ricardo hernandez
 brandon javillo
 matthew jaworski
 ayele lintamo",classproject1groupof5 nutrion valu descript health consciou user often frustrat effort take easili determin nutriv food nutriv app address need provid quick easi answer app search specif food item get info need make healthi choic new nutriv app bring valu everyday health keep proper record food eat tell mani calori protein carb fat sodium meal track put bodya studi varieti nutrit whether eat meal snack import awar vutritiv food consum nutriv make track improv diet simpl integr provid complet pictur nutrit intak throughout day time motiv develop health improv user stori alway look site tell much weight specif food would give ideal nutriv look user want see food tyep nutriv app help user get food food someth everyon relat give us energi provid nutrient bodi tast great nutriv app help peopl becom awar mani calori food nutriv deploy deploy pagehttpsbjavillo1059githubionutritionalvalu img srcassetsimgproject snippetpng alt img project snippet technolog use html brandoncarinamatthew css carinamatthew javascript brandoncarinamatthew foundat js brandoncarinamatthew nutritionix api brandon edamam api carina process user nutriv link open display show titl nutiv left navbar dropdown link right drop downlink display two specif subject link descript dropdown item link site descript dropdown link subject articl directli relay type food food group websit use breakdown ye therapi articlehttpsenyestherapyhelpscomthe12typesofnutritionandtheircharacteristics12159 type food meatsfish vegetableslegumesbean fruit grain dairi food group vegen vegetarian emot eat sport nutrit healthi eat user ha option input food item input section read item search item annot input black user click search info button thi function render multipl inform queri api ' display specif inform api ' use inform gather nutrionix api aqueri api inform valu normal found nutrit label unit state infrom display within nutrit valu field public appid requir search queri publi apikey requir search queri api onli allow 200 search queri ' daili edamam api queri api inform valu 4 popular recip found display recip field public appid requir search queri publi apikey requir search queri api allow 10000 search queri ' week user choos inspect site map inform contributor github page home link project repo link link user site project page github link sitemap contributor carina diaz ricardo hernandez brandon javillo matthew jaworski ayel lintamo,classproject1groupof5 nutrion value description health conscious user often frustrated effort take easily determine nutrival food nutrival app address need provides quick easy answer app search specific food item get info need make healthy choice new nutrival app brings value everyday health keeping proper record food eat tell many calorie protein carbs fat sodium meal track putting bodya study variety nutrition whether eating meal snack important aware vutritival food consume nutrival make tracking improving diet simple integrates provide complete picture nutrition intake throughout day time motivation development health improvement user story always looking site tell much weight specific food would give ideal nutrival youre looking user want see food tyeps nutrival app help user get food food something everyone relate give u energy provides nutrient body taste great nutrival app help people become aware many calorie food nutrival deployment deployed pagehttpsbjavillo1059githubionutritionalvalue img srcassetsimgproject snippetpng alt img project snippet technology used html brandoncarinamatthew cs carinamatthew javascript brandoncarinamatthew foundation j brandoncarinamatthew nutritionix api brandon edamam api carina process user nutrival link opened display show title nutival left navbar dropdown link right drop downlinks display two specific subject link description dropdown item linked site description dropdown link subject article directly relayed type food food group website used breakdown yes therapy articlehttpsenyestherapyhelpscomthe12typesofnutritionandtheircharacteristics12159 type food meatsfish vegetableslegumesbeans fruit grain dairy food group vegenism vegetarianism emotional eating sport nutrition healthy eating user ha option inputing food item input section read item searching item annotated input black user click search info button function render multiple information querying api ' display specific information api ' used information gathering nutrionix api aquery api information value normally found nutrition label united state infromation display within nutritional value field public appid required search query publis apikey required search query api allows 200 search query ' daily edamam api query api information value 4 popular recipe found display recipe field public appid required search query publis apikey required search query api allows 10000 search query ' week user choose inspect site map information contributor github page home link project repo link link user site project page github link sitemap contributor carina diaz ricardo hernandez brandon javillo matthew jaworski ayele lintamo
Makefile,"[![Build Status](https://travis-ci.org/Southern-Cross-Plant-Science/cdno.svg?branch=master)](https://travis-ci.org/Southern-Cross-Plant-Science/cdno)
[![DOI](https://zenodo.org/badge/13996/Southern-Cross-Plant-Science/cdno.svg)](https://zenodo.org/badge/latestdoi/13996/Southern-Cross-Plant-Science/cdno)

# Compositional Dietary Nutrition Ontology

The CDNO provides structured terminologies to describe nutritional attributes of material entities that contribute to human diet. These terms are intended primarily to be associated with datasets that quantify concentration of chemical nutritional components derived from samples taken from any stage in the production of food raw materials (including from crops, livestock, fisheries) and through processing and supply chains. Additional knowledge associated with these dietary sources may be represented by terms that describe functional, physical and other attributes. 

Whilst recognising that dietary nutrients within food substrates may be present as complex and dynamic physical and chemical structures or mixtures, CDNO focuses on components typically quantified in an analytical chemistry laboratory. The primary CDNO class ‘dietary nutritional component’ contains hierarchical sets of terms organised to reflect commonly used classifications of chemical food composition. This class does not represent an exhaustive classification of chemical components, but focuses on structuring terms according to widely accepted categories. This class is independent of, but may be used in conjunction with, classes that describe ‘analytical methods’ for quantification, ‘physical properties’ or ‘dietary function’. Quantification data may be used and reported in research literature, to inform food composition tables and labelling, or for supply chain quality assurance and control. 

More specifically, terms within the ‘nutritional component concentration’ class may be used to represent quantification of components described in the ‘dietary nutritional component’ class. Concentration data are intended to be described in conjunction with post-composed metadata concepts, such as represented by FoodOn ‘Food product by organism’, which derives from some food or anatomical entity and a NCBI organismal classification ontology (NCBITaxon) entity. In addition, one or more CDNO analytical method term may be used to describe the process used to acquire concentration data, where these terms may be inherited from the Ontology for Biomedical Investigations (OBI), the Chemical Methods ontology (CHMO) or the Physico-chemical Methods and Properties ontology (FIX). In combination these formalise the language used to describe sample source and status in the crop production/food supply chain.  

Additional knowledge relating to interactions of food components with human physiological function is embodied within the CNDO dietary function class, where a nutritional component may be associated with one or more functional categories. 

The common vocabulary and relationships defined within CDNO should facilitate description, communication and exchange of material entity-derived nutritional composition datasets typically generated by analytical laboratories.  The organisation of the vocabulary is structured to reflect common categories variously used by those involved in crop, livestock or other organismal production, associated R&D and breeding, as well as the food processing and supply sector, and nutritionists, inlcuding compilers and users of food composition databases. The CDNO therefore supports characterisation of genetic diversity and management of biodiversity collections, as well as sharing of knowledge relating to dietary composition between a wider set of researchers, breeders, farmers, processors and other stakeholders. Further development of the functional class should also assist in understanding how interactions between organismal genetic and environmental variation contribute to human diet and health in the farm to fork continuum.

A more descriptive guide for the Crop and now Compositional Dietary Nutrition Ontology (CDNO) was published in Crop Science in an article by Andres-Hernandez et al. 2020 [doi:10.1002/csc2.20092](https://acsess.onlinelibrary.wiley.com/doi/full/10.1002/csc2.20092).

More information can be found at http://obofoundry.org/ontology/cdno

## Versions

### Stable release versions

The latest version of the ontology can always be found at:

http://purl.obolibrary.org/obo/cdno.owl

(note this will not show up until the request has been approved by obofoundry.org)

### Editors' version

Editors of this ontology should use the edit version, [src/ontology/cdno-edit.owl](src/ontology/cdno-edit.owl)

## Citing the CDNO

Please use this GitHub repository's [Issue tracker](https://github.com/Southern-Cross-Plant-Science/cdno/issues) to request new terms/classes or report errors or specific concerns related to the ontology.

If you use the ontology, please cite its IRI: [http://obofoundry.org/ontology/cdno](http://obofoundry.org/ontology/cdno)

If you mention CDNO in a paper, please cite one of the following:
Andrés‐Hernández, L., Baten, A., Azman Halimi, R., Walls, R., & King, G. J. (2020). Knowledge representation and data sharing to unlock crop variation for nutritional food security. Crop Science, 60(2), 516-529. doi.org/10.1002/csc2.20092

## Contributing to CDNO

Please use the issue tracker for comments, requests for new terms, and suggesting changes to existing terms. 


<img width=""153"" alt=""cdno"" src=""https://user-images.githubusercontent.com/25215773/137417012-78e5a8c4-1726-47bb-a193-8f11ff4f6f8e.png"">



","build statushttpstravisciorgsoutherncrossplantsciencecdnosvgbranchmasterhttpstravisciorgsoutherncrossplantsciencecdno
doihttpszenodoorgbadge13996southerncrossplantsciencecdnosvghttpszenodoorgbadgelatestdoi13996southerncrossplantsciencecdno

 compositional dietary nutrition ontology

the cdno provides structured terminologies to describe nutritional attributes of material entities that contribute to human diet these terms are intended primarily to be associated with datasets that quantify concentration of chemical nutritional components derived from samples taken from any stage in the production of food raw materials including from crops livestock fisheries and through processing and supply chains additional knowledge associated with these dietary sources may be represented by terms that describe functional physical and other attributes 

whilst recognising that dietary nutrients within food substrates may be present as complex and dynamic physical and chemical structures or mixtures cdno focuses on components typically quantified in an analytical chemistry laboratory the primary cdno class dietary nutritional component contains hierarchical sets of terms organised to reflect commonly used classifications of chemical food composition this class does not represent an exhaustive classification of chemical components but focuses on structuring terms according to widely accepted categories this class is independent of but may be used in conjunction with classes that describe analytical methods for quantification physical properties or dietary function quantification data may be used and reported in research literature to inform food composition tables and labelling or for supply chain quality assurance and control 

more specifically terms within the nutritional component concentration class may be used to represent quantification of components described in the dietary nutritional component class concentration data are intended to be described in conjunction with postcomposed metadata concepts such as represented by foodon food product by organism which derives from some food or anatomical entity and a ncbi organismal classification ontology ncbitaxon entity in addition one or more cdno analytical method term may be used to describe the process used to acquire concentration data where these terms may be inherited from the ontology for biomedical investigations obi the chemical methods ontology chmo or the physicochemical methods and properties ontology fix in combination these formalise the language used to describe sample source and status in the crop productionfood supply chain 

additional knowledge relating to interactions of food components with human physiological function is embodied within the cndo dietary function class where a nutritional component may be associated with one or more functional categories 

the common vocabulary and relationships defined within cdno should facilitate description communication and exchange of material entityderived nutritional composition datasets typically generated by analytical laboratories the organisation of the vocabulary is structured to reflect common categories variously used by those involved in crop livestock or other organismal production associated rd and breeding as well as the food processing and supply sector and nutritionists inlcuding compilers and users of food composition databases the cdno therefore supports characterisation of genetic diversity and management of biodiversity collections as well as sharing of knowledge relating to dietary composition between a wider set of researchers breeders farmers processors and other stakeholders further development of the functional class should also assist in understanding how interactions between organismal genetic and environmental variation contribute to human diet and health in the farm to fork continuum

a more descriptive guide for the crop and now compositional dietary nutrition ontology cdno was published in crop science in an article by andreshernandez et al 2020 doi101002csc220092httpsacsessonlinelibrarywileycomdoifull101002csc220092

more information can be found at httpobofoundryorgontologycdno

 versions

 stable release versions

the latest version of the ontology can always be found at

httppurlobolibraryorgobocdnoowl

note this will not show up until the request has been approved by obofoundryorg

 editors ' version

editors of this ontology should use the edit version srcontologycdnoeditowlsrcontologycdnoeditowl

 citing the cdno

please use this github repository ' s issue trackerhttpsgithubcomsoutherncrossplantsciencecdnoissues to request new termsclasses or report errors or specific concerns related to the ontology

if you use the ontology please cite its iri httpobofoundryorgontologycdnohttpobofoundryorgontologycdno

if you mention cdno in a paper please cite one of the following
andreshernandez l baten a azman halimi r walls r king g j 2020 knowledge representation and data sharing to unlock crop variation for nutritional food security crop science 602 516529 doiorg101002csc220092

 contributing to cdno

please use the issue tracker for comments requests for new terms and suggesting changes to existing terms 


img width153 altcdno srchttpsuserimagesgithubusercontentcom2521577313741701278e5a8c4172647bba1938f11ff4f6f8epng",build statushttpstravisciorgsoutherncrossplantsciencecdnosvgbranchmasterhttpstravisciorgsoutherncrossplantsciencecdno doihttpszenodoorgbadge13996southerncrossplantsciencecdnosvghttpszenodoorgbadgelatestdoi13996southerncrossplantsciencecdno composit dietari nutrit ontolog cdno provid structur terminolog describ nutrit attribut materi entiti contribut human diet term intend primarili associ dataset quantifi concentr chemic nutrit compon deriv sampl taken ani stage product food raw materi includ crop livestock fisheri process suppli chain addit knowledg associ dietari sourc may repres term describ function physic attribut whilst recognis dietari nutrient within food substrat may present complex dynam physic chemic structur mixtur cdno focus compon typic quantifi analyt chemistri laboratori primari cdno class dietari nutrit compon contain hierarch set term organis reflect commonli use classif chemic food composit thi class doe repres exhaust classif chemic compon focus structur term accord wide accept categori thi class independ may use conjunct class describ analyt method quantif physic properti dietari function quantif data may use report research literatur inform food composit tabl label suppli chain qualiti assur control specif term within nutrit compon concentr class may use repres quantif compon describ dietari nutrit compon class concentr data intend describ conjunct postcompos metadata concept repres foodon food product organ deriv food anatom entiti ncbi organism classif ontolog ncbitaxon entiti addit one cdno analyt method term may use describ process use acquir concentr data term may inherit ontolog biomed investig obi chemic method ontolog chmo physicochem method properti ontolog fix combin formalis languag use describ sampl sourc statu crop productionfood suppli chain addit knowledg relat interact food compon human physiolog function embodi within cndo dietari function class nutrit compon may associ one function categori common vocabulari relationship defin within cdno facilit descript commun exchang materi entityderiv nutrit composit dataset typic gener analyt laboratori organis vocabulari structur reflect common categori various use involv crop livestock organism product associ rd breed well food process suppli sector nutritionist inlcud compil user food composit databas cdno therefor support characteris genet divers manag biodivers collect well share knowledg relat dietari composit wider set research breeder farmer processor stakehold develop function class also assist understand interact organism genet environment variat contribut human diet health farm fork continuum descript guid crop composit dietari nutrit ontolog cdno wa publish crop scienc articl andreshernandez et al 2020 doi101002csc220092httpsacsessonlinelibrarywileycomdoifull101002csc220092 inform found httpobofoundryorgontologycdno version stabl releas version latest version ontolog alway found httppurlobolibraryorgobocdnoowl note thi show request ha approv obofoundryorg editor ' version editor thi ontolog use edit version srcontologycdnoeditowlsrcontologycdnoeditowl cite cdno pleas use thi github repositori ' issu trackerhttpsgithubcomsoutherncrossplantsciencecdnoissu request new termsclass report error specif concern relat ontolog use ontolog pleas cite iri httpobofoundryorgontologycdnohttpobofoundryorgontologycdno mention cdno paper pleas cite one follow andreshernandez l baten azman halimi r wall r king g j 2020 knowledg represent data share unlock crop variat nutrit food secur crop scienc 602 516529 doiorg101002csc220092 contribut cdno pleas use issu tracker comment request new term suggest chang exist term img width153 altcdno srchttpsuserimagesgithubusercontentcom2521577313741701278e5a8c4172647bba1938f11ff4f6f8epng,build statushttpstravisciorgsoutherncrossplantsciencecdnosvgbranchmasterhttpstravisciorgsoutherncrossplantsciencecdno doihttpszenodoorgbadge13996southerncrossplantsciencecdnosvghttpszenodoorgbadgelatestdoi13996southerncrossplantsciencecdno compositional dietary nutrition ontology cdno provides structured terminology describe nutritional attribute material entity contribute human diet term intended primarily associated datasets quantify concentration chemical nutritional component derived sample taken stage production food raw material including crop livestock fishery processing supply chain additional knowledge associated dietary source may represented term describe functional physical attribute whilst recognising dietary nutrient within food substrate may present complex dynamic physical chemical structure mixture cdno focus component typically quantified analytical chemistry laboratory primary cdno class dietary nutritional component contains hierarchical set term organised reflect commonly used classification chemical food composition class doe represent exhaustive classification chemical component focus structuring term according widely accepted category class independent may used conjunction class describe analytical method quantification physical property dietary function quantification data may used reported research literature inform food composition table labelling supply chain quality assurance control specifically term within nutritional component concentration class may used represent quantification component described dietary nutritional component class concentration data intended described conjunction postcomposed metadata concept represented foodon food product organism derives food anatomical entity ncbi organismal classification ontology ncbitaxon entity addition one cdno analytical method term may used describe process used acquire concentration data term may inherited ontology biomedical investigation obi chemical method ontology chmo physicochemical method property ontology fix combination formalise language used describe sample source status crop productionfood supply chain additional knowledge relating interaction food component human physiological function embodied within cndo dietary function class nutritional component may associated one functional category common vocabulary relationship defined within cdno facilitate description communication exchange material entityderived nutritional composition datasets typically generated analytical laboratory organisation vocabulary structured reflect common category variously used involved crop livestock organismal production associated rd breeding well food processing supply sector nutritionist inlcuding compiler user food composition database cdno therefore support characterisation genetic diversity management biodiversity collection well sharing knowledge relating dietary composition wider set researcher breeder farmer processor stakeholder development functional class also assist understanding interaction organismal genetic environmental variation contribute human diet health farm fork continuum descriptive guide crop compositional dietary nutrition ontology cdno wa published crop science article andreshernandez et al 2020 doi101002csc220092httpsacsessonlinelibrarywileycomdoifull101002csc220092 information found httpobofoundryorgontologycdno version stable release version latest version ontology always found httppurlobolibraryorgobocdnoowl note show request ha approved obofoundryorg editor ' version editor ontology use edit version srcontologycdnoeditowlsrcontologycdnoeditowl citing cdno please use github repository ' issue trackerhttpsgithubcomsoutherncrossplantsciencecdnoissues request new termsclasses report error specific concern related ontology use ontology please cite iri httpobofoundryorgontologycdnohttpobofoundryorgontologycdno mention cdno paper please cite one following andreshernandez l baten azman halimi r wall r king g j 2020 knowledge representation data sharing unlock crop variation nutritional food security crop science 602 516529 doiorg101002csc220092 contributing cdno please use issue tracker comment request new term suggesting change existing term img width153 altcdno srchttpsuserimagesgithubusercontentcom2521577313741701278e5a8c4172647bba1938f11ff4f6f8epng
Java,"# CleanFit

<img src=""/screenshots/app_icon_512.png"" height=""400px""/>

A sample Android App that demonstrates how to implement and use several different patterns, technologies and libraries:
* Clean Architecture
* MVP in the Presentation Layer
* Dependency Injection using Dagger 2
* GreenDao as an ORM solution
* rxJava & rxAndroid for Reactive Programming
* Material Design

## ToDo:
* Use of [ZXing](https://github.com/zxing/zxing) technology to scan products barcode
* Use of [Retrofit](http://square.github.io/retrofit/) to retrieve nutritional information from [OpenFoodFacts](http://openfoodfacts.org) given a certain barcode
* Testing using Espresso, Mockito, JUnit, Robolectric...
* Translate to spanish
* Include [Retrolambda](https://github.com/orfjackal/retrolambda) for Lambda Expressions.

## Download
[![Download on Google Play](https://developer.android.com/images/brand/en_app_rgb_wo_60.png)](https://play.google.com/store/apps/details?id=com.zireck.calories)

## Screenshots
<img src=""/screenshots/screenshot_home.png"" height=""500px""/>
<img src=""/screenshots/screenshot_diary_expanded.png"" height=""500px""/>
<img src=""/screenshots/screenshot_diary.png"" height=""500px""/>
<img src=""/screenshots/screenshot_food.png"" height=""500px""/>

## Libraries used:
* [Dagger 2](http://google.github.io/dagger)
* [rxJava](https://github.com/ReactiveX/RxJava)
* [rxAndroid](https://github.com/ReactiveX/RxAndroid)
* javaxAnnotation
* [ButterKnife](http://jakewharton.github.io/butterknife)
* [Picasso](http://square.github.io/picasso)
* [EasyFonts](https://github.com/vsvankhede/easyfonts)
* [FloatingActionButton](https://github.com/Clans/FloatingActionButton)
* [CircleImageView](https://github.com/hdodenhof/CircleImageView)
* [BetterPickers](https://github.com/code-troopers/android-betterpickers)
* [HelloCharts](https://github.com/lecho/hellocharts-android)
* [AdvancedRecyclerView](https://github.com/h6ah4i/android-advancedrecyclerview)
* [TextDrawable](https://github.com/amulyakhare/TextDrawable)
* [MaterialSpinner](https://github.com/ganfra/MaterialSpinner)
* [MaterialMenu](https://github.com/balysv/material-menu)
* [MaterialTabStrip](https://github.com/jpardogo/PagerSlidingTabStrip)
* [MaterialIconLib](https://github.com/code-mc/material-icon-lib)
* [MaterialDateTimePicker](https://github.com/wdullaer/MaterialDateTimePicker)
* [MaterialDialogs](https://github.com/afollestad/material-dialogs)
* [FitChart](https://github.com/txusballesteros/fit-chart)

## License

    Copyright 2015 Andrés Hernández

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
","cleanfit

img srcscreenshotsappicon512png height400px

a sample android app that demonstrates how to implement and use several different patterns technologies and libraries
 clean architecture
 mvp in the presentation layer
 dependency injection using dagger 2
 greendao as an orm solution
 rxjava rxandroid for reactive programming
 material design

 todo
 use of zxinghttpsgithubcomzxingzxing technology to scan products barcode
 use of retrofithttpsquaregithubioretrofit to retrieve nutritional information from openfoodfactshttpopenfoodfactsorg given a certain barcode
 testing using espresso mockito junit robolectric
 translate to spanish
 include retrolambdahttpsgithubcomorfjackalretrolambda for lambda expressions

 download
download on google playhttpsdeveloperandroidcomimagesbrandenapprgbwo60pnghttpsplaygooglecomstoreappsdetailsidcomzireckcalories

 screenshots
img srcscreenshotsscreenshothomepng height500px
img srcscreenshotsscreenshotdiaryexpandedpng height500px
img srcscreenshotsscreenshotdiarypng height500px
img srcscreenshotsscreenshotfoodpng height500px

 libraries used
 dagger 2httpgooglegithubiodagger
 rxjavahttpsgithubcomreactivexrxjava
 rxandroidhttpsgithubcomreactivexrxandroid
 javaxannotation
 butterknifehttpjakewhartongithubiobutterknife
 picassohttpsquaregithubiopicasso
 easyfontshttpsgithubcomvsvankhedeeasyfonts
 floatingactionbuttonhttpsgithubcomclansfloatingactionbutton
 circleimageviewhttpsgithubcomhdodenhofcircleimageview
 betterpickershttpsgithubcomcodetroopersandroidbetterpickers
 hellochartshttpsgithubcomlechohellochartsandroid
 advancedrecyclerviewhttpsgithubcomh6ah4iandroidadvancedrecyclerview
 textdrawablehttpsgithubcomamulyakharetextdrawable
 materialspinnerhttpsgithubcomganframaterialspinner
 materialmenuhttpsgithubcombalysvmaterialmenu
 materialtabstriphttpsgithubcomjpardogopagerslidingtabstrip
 materialiconlibhttpsgithubcomcodemcmaterialiconlib
 materialdatetimepickerhttpsgithubcomwdullaermaterialdatetimepicker
 materialdialogshttpsgithubcomafollestadmaterialdialogs
 fitcharthttpsgithubcomtxusballesterosfitchart

 license

 copyright 2015 andres hernandez

 licensed under the apache license version 20 the license
 you may not use this file except in compliance with the license
 you may obtain a copy of the license at

 httpwwwapacheorglicenseslicense20

 unless required by applicable law or agreed to in writing software
 distributed under the license is distributed on an as is basis
 without warranties or conditions of any kind either express or implied
 see the license for the specific language governing permissions and
 limitations under the license",cleanfit img srcscreenshotsappicon512png height400px sampl android app demonstr implement use sever differ pattern technolog librari clean architectur mvp present layer depend inject use dagger 2 greendao orm solut rxjava rxandroid reactiv program materi design todo use zxinghttpsgithubcomzxingzx technolog scan product barcod use retrofithttpsquaregithubioretrofit retriev nutrit inform openfoodfactshttpopenfoodfactsorg given certain barcod test use espresso mockito junit robolectr translat spanish includ retrolambdahttpsgithubcomorfjackalretrolambda lambda express download download googl playhttpsdeveloperandroidcomimagesbrandenapprgbwo60pnghttpsplaygooglecomstoreappsdetailsidcomzireckcalori screenshot img srcscreenshotsscreenshothomepng height500px img srcscreenshotsscreenshotdiaryexpandedpng height500px img srcscreenshotsscreenshotdiarypng height500px img srcscreenshotsscreenshotfoodpng height500px librari use dagger 2httpgooglegithubiodagg rxjavahttpsgithubcomreactivexrxjava rxandroidhttpsgithubcomreactivexrxandroid javaxannot butterknifehttpjakewhartongithubiobutterknif picassohttpsquaregithubiopicasso easyfontshttpsgithubcomvsvankhedeeasyfont floatingactionbuttonhttpsgithubcomclansfloatingactionbutton circleimageviewhttpsgithubcomhdodenhofcircleimageview betterpickershttpsgithubcomcodetroopersandroidbetterpick hellochartshttpsgithubcomlechohellochartsandroid advancedrecyclerviewhttpsgithubcomh6ah4iandroidadvancedrecyclerview textdrawablehttpsgithubcomamulyakharetextdraw materialspinnerhttpsgithubcomganframaterialspinn materialmenuhttpsgithubcombalysvmaterialmenu materialtabstriphttpsgithubcomjpardogopagerslidingtabstrip materialiconlibhttpsgithubcomcodemcmaterialiconlib materialdatetimepickerhttpsgithubcomwdullaermaterialdatetimepick materialdialogshttpsgithubcomafollestadmaterialdialog fitcharthttpsgithubcomtxusballesterosfitchart licens copyright 2015 andr hernandez licens apach licens version 20 licens may use thi file except complianc licens may obtain copi licens httpwwwapacheorglicenseslicense20 unless requir applic law agre write softwar distribut licens distribut basi without warranti condit ani kind either express impli see licens specif languag govern permiss limit licens,cleanfit img srcscreenshotsappicon512png height400px sample android app demonstrates implement use several different pattern technology library clean architecture mvp presentation layer dependency injection using dagger 2 greendao orm solution rxjava rxandroid reactive programming material design todo use zxinghttpsgithubcomzxingzxing technology scan product barcode use retrofithttpsquaregithubioretrofit retrieve nutritional information openfoodfactshttpopenfoodfactsorg given certain barcode testing using espresso mockito junit robolectric translate spanish include retrolambdahttpsgithubcomorfjackalretrolambda lambda expression download download google playhttpsdeveloperandroidcomimagesbrandenapprgbwo60pnghttpsplaygooglecomstoreappsdetailsidcomzireckcalories screenshots img srcscreenshotsscreenshothomepng height500px img srcscreenshotsscreenshotdiaryexpandedpng height500px img srcscreenshotsscreenshotdiarypng height500px img srcscreenshotsscreenshotfoodpng height500px library used dagger 2httpgooglegithubiodagger rxjavahttpsgithubcomreactivexrxjava rxandroidhttpsgithubcomreactivexrxandroid javaxannotation butterknifehttpjakewhartongithubiobutterknife picassohttpsquaregithubiopicasso easyfontshttpsgithubcomvsvankhedeeasyfonts floatingactionbuttonhttpsgithubcomclansfloatingactionbutton circleimageviewhttpsgithubcomhdodenhofcircleimageview betterpickershttpsgithubcomcodetroopersandroidbetterpickers hellochartshttpsgithubcomlechohellochartsandroid advancedrecyclerviewhttpsgithubcomh6ah4iandroidadvancedrecyclerview textdrawablehttpsgithubcomamulyakharetextdrawable materialspinnerhttpsgithubcomganframaterialspinner materialmenuhttpsgithubcombalysvmaterialmenu materialtabstriphttpsgithubcomjpardogopagerslidingtabstrip materialiconlibhttpsgithubcomcodemcmaterialiconlib materialdatetimepickerhttpsgithubcomwdullaermaterialdatetimepicker materialdialogshttpsgithubcomafollestadmaterialdialogs fitcharthttpsgithubcomtxusballesterosfitchart license copyright 2015 andres hernandez licensed apache license version 20 license may use file except compliance license may obtain copy license httpwwwapacheorglicenseslicense20 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license
CSS,"# Group Project - Nutrition App

#### Technologies used:
- Node.js with Express
- APIs
- PostgreSQL

#### Who this application is for and why:
This is for the health-conscious consumer looking to meet their daily caloric goals. 

#### Wireframes
Link: https://i.imgur.com/L9cjCat.png

#### Database Schema
Link: https://i.imgur.com/49jfnGz.png

#### Challenges

- Database connection issues were faced when deploying to Heroku. One approach we tried was to amend the SSL to 'require' or 'true'.
<!-- Explanations of the technologies used
A few paragraphs about the general approach you took
Link to your user stories – who are your users, what do they want, and why?
Link to your wireframes – sketches of major views / interfaces in your application
Link to your diagrams - database schema
Descriptions of any unsolved problems or major hurdles your team had to overcome -->
","group project nutrition app

 technologies used
 nodejs with express
 apis
 postgresql

 who this application is for and why
this is for the healthconscious consumer looking to meet their daily caloric goals 

 wireframes
link httpsiimgurcoml9cjcatpng

 database schema
link httpsiimgurcom49jfngzpng

 challenges

 database connection issues were faced when deploying to heroku one approach we tried was to amend the ssl to ' require ' or ' true ' 
 explanations of the technologies used
a few paragraphs about the general approach you took
link to your user stories who are your users what do they want and why
link to your wireframes sketches of major views interfaces in your application
link to your diagrams database schema
descriptions of any unsolved problems or major hurdles your team had to overcome",group project nutrit app technolog use nodej express api postgresql thi applic whi thi healthconsci consum look meet daili calor goal wirefram link httpsiimgurcoml9cjcatpng databas schema link httpsiimgurcom49jfngzpng challeng databas connect issu face deploy heroku one approach tri wa amend ssl ' requir ' ' true ' explan technolog use paragraph gener approach took link user stori user want whi link wirefram sketch major view interfac applic link diagram databas schema descript ani unsolv problem major hurdl team overcom,group project nutrition app technology used nodejs express apis postgresql application healthconscious consumer looking meet daily caloric goal wireframes link httpsiimgurcoml9cjcatpng database schema link httpsiimgurcom49jfngzpng challenge database connection issue faced deploying heroku one approach tried wa amend ssl ' require ' ' true ' explanation technology used paragraph general approach took link user story user want link wireframes sketch major view interface application link diagram database schema description unsolved problem major hurdle team overcome
Java,"#FeedMe

[![GetBadges Game](https://mensobscura-feedme.getbadges.io/shield/company/mensobscura-feedme)](https://mensobscura-feedme.getbadges.io/?ref=shield-game)

Une application centrée nutrition !

#Contributeurs

  Yassine Badache (ybadache)
  
  Thibault Rosa   (MensObscura)
  
  Thibaud Verbaere
  
  Étienne Wattebled (Etienne-Wattebled)
  
  Pauline Dessingué
  
  Maxime Clément
  
  Jean-Baptiste Delaeter
  
  Jordan Piorun
","feedme

getbadges gamehttpsmensobscurafeedmegetbadgesioshieldcompanymensobscurafeedmehttpsmensobscurafeedmegetbadgesiorefshieldgame

une application centree nutrition 

contributeurs

 yassine badache ybadache
 
 thibault rosa mensobscura
 
 thibaud verbaere
 
 etienne wattebled etiennewattebled
 
 pauline dessingue
 
 maxime clement
 
 jeanbaptiste delaeter
 
 jordan piorun",feedm getbadg gamehttpsmensobscurafeedmegetbadgesioshieldcompanymensobscurafeedmehttpsmensobscurafeedmegetbadgesiorefshieldgam une applic centre nutrit contributeur yassin badach ybadach thibault rosa mensobscura thibaud verbaer etienn wattebl etiennewattebl paulin dessingu maxim clement jeanbaptist delaet jordan piorun,feedme getbadges gamehttpsmensobscurafeedmegetbadgesioshieldcompanymensobscurafeedmehttpsmensobscurafeedmegetbadgesiorefshieldgame une application centree nutrition contributeurs yassine badache ybadache thibault rosa mensobscura thibaud verbaere etienne wattebled etiennewattebled pauline dessingue maxime clement jeanbaptiste delaeter jordan piorun
Objective-C,"<img src=""http://www.nutritionix.com/images/logo_home.png"">

# Nutritionix Client Library for iOS
===========

This is a iOS client for the [Nutritionix](http://www.nutritionix.com/) API.

This repo contains both the client library and a sample iOS project demonstrating the usage of the Nutritionix API for iOS.

There are two different invocation mechanisms and you are free to choose which one serves your application best - both make use of the AFNetworking library, which is included in the workspace.  One is asynchronous while the other is syncrhonous.  The synchronous call was created to prevent need for any call back mechanism (and works better in the unit test as well).

You must obtain an application id and key to use in the API service call.

## Use
```objective-c


NSDictionary *jsonDictionary = [Nutritionix_iOS_Library callNutritionixWithUPCAndWait:upc];


```

Contact Me:
-------------
If you have any questions comments or suggestions, send me a message. If you find a bug, or want to submit a pull request, let me know.

License:
--------
MIT License

> Copyright (c) 2014 Peter Kasson
> 
> Permission is hereby granted, free of charge, to any person obtaining 
>a copy of this software and associated documentation files (the  
>""Software""), to deal in the Software without restriction, including 
>without limitation the rights to use, copy, modify, merge, publish, 
>distribute, sublicense, and/or sell copies of the Software, and to 
>permit persons to whom the Software is furnished to do so, subject to  
>the following conditions:
> 
> The above copyright notice and this permission notice shall be 
>included in all copies or substantial portions of the Software.
> 
> THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, 
>EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
>MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
>IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
>CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, 
>TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
>SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","img srchttpwwwnutritionixcomimageslogohomepng

 nutritionix client library for ios


this is a ios client for the nutritionixhttpwwwnutritionixcom api

this repo contains both the client library and a sample ios project demonstrating the usage of the nutritionix api for ios

there are two different invocation mechanisms and you are free to choose which one serves your application best both make use of the afnetworking library which is included in the workspace one is asynchronous while the other is syncrhonous the synchronous call was created to prevent need for any call back mechanism and works better in the unit test as well

you must obtain an application id and key to use in the api service call

 use
objectivec


nsdictionary jsondictionary nutritionixioslibrary callnutritionixwithupcandwaitupc




contact me

if you have any questions comments or suggestions send me a message if you find a bug or want to submit a pull request let me know

license

mit license

 copyright c 2014 peter kasson
 
 permission is hereby granted free of charge to any person obtaining 
a copy of this software and associated documentation files the 
software to deal in the software without restriction including 
without limitation the rights to use copy modify merge publish 
distribute sublicense andor sell copies of the software and to 
permit persons to whom the software is furnished to do so subject to 
the following conditions
 
 the above copyright notice and this permission notice shall be 
included in all copies or substantial portions of the software
 
 the software is provided as is without warranty of any kind 
express or implied including but not limited to the warranties of 
merchantability fitness for a particular purpose and noninfringement 
in no event shall the authors or copyright holders be liable for any 
claim damages or other liability whether in an action of contract 
tort or otherwise arising from out of or in connection with the 
software or the use or other dealings in the software",img srchttpwwwnutritionixcomimageslogohomepng nutritionix client librari io thi io client nutritionixhttpwwwnutritionixcom api thi repo contain client librari sampl io project demonstr usag nutritionix api io two differ invoc mechan free choos one serv applic best make use afnetwork librari includ workspac one asynchron syncrhon synchron call wa creat prevent need ani call back mechan work better unit test well must obtain applic id key use api servic call use objectivec nsdictionari jsondictionari nutritionixioslibrari callnutritionixwithupcandwaitupc contact ani question comment suggest send messag find bug want submit pull request let know licens mit licens copyright c 2014 peter kasson permiss herebi grant free charg ani person obtain copi thi softwar associ document file softwar deal softwar without restrict includ without limit right use copi modifi merg publish distribut sublicens andor sell copi softwar permit person softwar furnish subject follow condit abov copyright notic thi permiss notic shall includ copi substanti portion softwar softwar provid without warranti ani kind express impli includ limit warranti merchant fit particular purpos noninfring event shall author copyright holder liabl ani claim damag liabil whether action contract tort otherwis aris connect softwar use deal softwar,img srchttpwwwnutritionixcomimageslogohomepng nutritionix client library io io client nutritionixhttpwwwnutritionixcom api repo contains client library sample io project demonstrating usage nutritionix api io two different invocation mechanism free choose one serf application best make use afnetworking library included workspace one asynchronous syncrhonous synchronous call wa created prevent need call back mechanism work better unit test well must obtain application id key use api service call use objectivec nsdictionary jsondictionary nutritionixioslibrary callnutritionixwithupcandwaitupc contact question comment suggestion send message find bug want submit pull request let know license mit license copyright c 2014 peter kasson permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
Vue,"# vue-nutrition-label

> A VueJS component to create a 2018 FDA-style nutrition label

View [Demo](https://nutritionix.github.io/vue-nutrition-label/demo/)

## Installation
### via npm

``` bash
npm install vue-nutrition-label --save
```

### via CDN
``` html
<script src=""https://cdn.jsdelivr.net/npm/vue-nutrition-label/dist/vue-nutrition-label.min.js""></script>
<link href=""https://cdn.jsdelivr.net/npm/vue-nutrition-label/dist/vue-nutrition-label.min.css"" rel=""stylesheet"" type=""text/css"">
```

## Usage
### via npm
``` html
<!-- Vue component -->
<template>
  <div>
    <nutrition-label :options=""options"" v-model=""item""></nutrition-label>
  </div>
</template>

<script>
  import NutritionLabel from 'vue-nutrition-label';

  // register globally
  Vue.component('nutrition-label', NutritionLabel);

  export default {
    // or register locally
    components: {
      NutritionLabel
    },
    data () {
      return {
        options: {},
        item: {}
      };
    }
  }
</script>

<style>
  your styles
</style>
```
### via CDN
``` html
<html>
  <head>
    <title>...</title>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/vue-nutrition-label/dist/vue-nutrition-label.min.js""></script>
    <link href=""https://cdn.jsdelivr.net/npm/vue-nutrition-label/dist/vue-nutrition-label.min.css"" rel=""stylesheet"" type=""text/css"">
  </head>
  <body>
    <div id=""app"">
      <nutrition-label :options=""options"" v-model=""item""></nutrition-label>
    </div>
   <script>
      var vm = new Vue({
        el: '#app',
        components: {
          'nutrition-label': window.VueNutritionLabel.NutritionLabel
        },
        data() {
          return {
            options: {},
            item: {}
       });
    </script>
  </body>
</html>
```

## :options
The `options` prop must be an `Object`.

``` javascript
const options = {
  width: 280,
  useFdaRounding: 1, // use FDA rounding rules
  readOnly: false,  // show/hide serving input field
  multipleItems: false,
  addedSugars: {
    show: 1,
    na: 1
  },
  calcium: {
    show: 1,
    na: 1
  },
  calories: {
    show: 1,
    na: 1
  },
  cholesterol: {
    show: 1,
    na: 1
  },
  fatCalories: {
    show: 1,
    na: 1
  },
  fiber: {
    show: 1,
    na: 1
  },
  iron: {
    show: 1,
    na: 1
  },
  monounsaturatedFat: {
    show: 0,
    na: 1
  },
  polyunsaturatedFat: {
    show: 0,
    na: 1
  },
  potassium: {
    show: 1,
    na: 1
  },
  protein: {
    show: 1,
    na: 1
  },
  saturatedFat: {
    show: 1,
    na: 1
  },
  sodium: {
    show: 1,
    na: 1
  },
  sugarAlcohol: {
    show: 0,
    na: 1
  },
  sugars: {
    show: 1,
    na: 1
  },
  totalCarb: {
    show: 1,
    na: 1
  },
  totalFat: {
    show: 1,
    na: 1
  },
  transFat: {
    show: 1,
    na: 1
  },
  vitaminA: {
    show: 1,
    na: 1
  },
  vitaminC: {
    show: 1,
    na: 1
  },
  vitaminD: {
    show: 1,
    na: 1
  }
}
```

## Item Object
``` javascript
const item = {
  name: 'Double Cheese Burger',
  serving: 1,
  servingPerContainer: 0,
  servingUnitName: 'serving',
  ingredientStatement: 'Swiss cheese, American cheese, more cheese and a burger.',
  nutrition: {
    calories: 510,
    fatCalories: 170,
    totalFat: 19,
    saturatedFat: 9,
    transFat: 0,
    polyunsaturatedFat: 0,
    monounsaturatedFat: 0,
    cholesterol: 10,
    sodium: 560,
    totalCarb: 79,
    fiber: 4,
    sugars: 35,
    protein: 9,
    vitaminA: 1,
    vitaminC: 2,
    calcium: 35,
    iron: 1,
    addedSugars: 0,
    potassium: 100,
    vitaminD: 0,
    servingWeight: 175
  }
}
```
## Build Setup

``` bash
# install dependencies
npm install

# serve with hot reload at localhost:8080
npm run dev

# build for production with minification
npm run bundle
```

For a detailed explanation on how things work, check out the [guide](http://vuejs-templates.github.io/webpack/) and [docs for vue-loader](http://vuejs.github.io/vue-loader).
","vuenutritionlabel

 a vuejs component to create a 2018 fdastyle nutrition label

view demohttpsnutritionixgithubiovuenutritionlabeldemo

 installation
 via npm

 bash
npm install vuenutritionlabel save


 via cdn
 html
script srchttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelminjsscript
link hrefhttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelmincss relstylesheet typetextcss


 usage
 via npm
 html
 vue component 
template
 div
 nutritionlabel optionsoptions vmodelitemnutritionlabel
 div
template

script
 import nutritionlabel from ' vuenutritionlabel ' 

 register globally
 vuecomponent ' nutritionlabel ' nutritionlabel

 export default 
 or register locally
 components 
 nutritionlabel
 
 data 
 return 
 options 
 item 
 
 
 
script

style
 your styles
style

 via cdn
 html
html
 head
 titletitle
 script srchttpscdnjscloudflarecomajaxlibsvue252vueminjsscript
 script srchttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelminjsscript
 link hrefhttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelmincss relstylesheet typetextcss
 head
 body
 div idapp
 nutritionlabel optionsoptions vmodelitemnutritionlabel
 div
 script
 var vm new vue
 el ' app ' 
 components 
 ' nutritionlabel ' windowvuenutritionlabelnutritionlabel
 
 data 
 return 
 options 
 item 
 
 script
 body
html


 options
the options prop must be an object

 javascript
const options 
 width 280
 usefdarounding 1 use fda rounding rules
 readonly false showhide serving input field
 multipleitems false
 addedsugars 
 show 1
 na 1
 
 calcium 
 show 1
 na 1
 
 calories 
 show 1
 na 1
 
 cholesterol 
 show 1
 na 1
 
 fatcalories 
 show 1
 na 1
 
 fiber 
 show 1
 na 1
 
 iron 
 show 1
 na 1
 
 monounsaturatedfat 
 show 0
 na 1
 
 polyunsaturatedfat 
 show 0
 na 1
 
 potassium 
 show 1
 na 1
 
 protein 
 show 1
 na 1
 
 saturatedfat 
 show 1
 na 1
 
 sodium 
 show 1
 na 1
 
 sugaralcohol 
 show 0
 na 1
 
 sugars 
 show 1
 na 1
 
 totalcarb 
 show 1
 na 1
 
 totalfat 
 show 1
 na 1
 
 transfat 
 show 1
 na 1
 
 vitamina 
 show 1
 na 1
 
 vitaminc 
 show 1
 na 1
 
 vitamind 
 show 1
 na 1
 



 item object
 javascript
const item 
 name ' double cheese burger ' 
 serving 1
 servingpercontainer 0
 servingunitname ' serving ' 
 ingredientstatement ' swiss cheese american cheese more cheese and a burger ' 
 nutrition 
 calories 510
 fatcalories 170
 totalfat 19
 saturatedfat 9
 transfat 0
 polyunsaturatedfat 0
 monounsaturatedfat 0
 cholesterol 10
 sodium 560
 totalcarb 79
 fiber 4
 sugars 35
 protein 9
 vitamina 1
 vitaminc 2
 calcium 35
 iron 1
 addedsugars 0
 potassium 100
 vitamind 0
 servingweight 175
 


 build setup

 bash
 install dependencies
npm install

 serve with hot reload at localhost8080
npm run dev

 build for production with minification
npm run bundle


for a detailed explanation on how things work check out the guidehttpvuejstemplatesgithubiowebpack and docs for vueloaderhttpvuejsgithubiovueloader",vuenutritionlabel vuej compon creat 2018 fdastyl nutrit label view demohttpsnutritionixgithubiovuenutritionlabeldemo instal via npm bash npm instal vuenutritionlabel save via cdn html script srchttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelminjsscript link hrefhttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelmincss relstylesheet typetextcss usag via npm html vue compon templat div nutritionlabel optionsopt vmodelitemnutritionlabel div templat script import nutritionlabel ' vuenutritionlabel ' regist global vuecompon ' nutritionlabel ' nutritionlabel export default regist local compon nutritionlabel data return option item script style style style via cdn html html head titletitl script srchttpscdnjscloudflarecomajaxlibsvue252vueminjsscript script srchttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelminjsscript link hrefhttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelmincss relstylesheet typetextcss head bodi div idapp nutritionlabel optionsopt vmodelitemnutritionlabel div script var vm new vue el ' app ' compon ' nutritionlabel ' windowvuenutritionlabelnutritionlabel data return option item script bodi html option option prop must object javascript const option width 280 usefdaround 1 use fda round rule readonli fals showhid serv input field multipleitem fals addedsugar show 1 na 1 calcium show 1 na 1 calori show 1 na 1 cholesterol show 1 na 1 fatcalori show 1 na 1 fiber show 1 na 1 iron show 1 na 1 monounsaturatedfat show 0 na 1 polyunsaturatedfat show 0 na 1 potassium show 1 na 1 protein show 1 na 1 saturatedfat show 1 na 1 sodium show 1 na 1 sugaralcohol show 0 na 1 sugar show 1 na 1 totalcarb show 1 na 1 totalfat show 1 na 1 transfat show 1 na 1 vitamina show 1 na 1 vitaminc show 1 na 1 vitamind show 1 na 1 item object javascript const item name ' doubl chees burger ' serv 1 servingpercontain 0 servingunitnam ' serv ' ingredientstat ' swiss chees american chees chees burger ' nutrit calori 510 fatcalori 170 totalfat 19 saturatedfat 9 transfat 0 polyunsaturatedfat 0 monounsaturatedfat 0 cholesterol 10 sodium 560 totalcarb 79 fiber 4 sugar 35 protein 9 vitamina 1 vitaminc 2 calcium 35 iron 1 addedsugar 0 potassium 100 vitamind 0 servingweight 175 build setup bash instal depend npm instal serv hot reload localhost8080 npm run dev build product minif npm run bundl detail explan thing work check guidehttpvuejstemplatesgithubiowebpack doc vueloaderhttpvuejsgithubiovueload,vuenutritionlabel vuejs component create 2018 fdastyle nutrition label view demohttpsnutritionixgithubiovuenutritionlabeldemo installation via npm bash npm install vuenutritionlabel save via cdn html script srchttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelminjsscript link hrefhttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelmincss relstylesheet typetextcss usage via npm html vue component template div nutritionlabel optionsoptions vmodelitemnutritionlabel div template script import nutritionlabel ' vuenutritionlabel ' register globally vuecomponent ' nutritionlabel ' nutritionlabel export default register locally component nutritionlabel data return option item script style style style via cdn html html head titletitle script srchttpscdnjscloudflarecomajaxlibsvue252vueminjsscript script srchttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelminjsscript link hrefhttpscdnjsdelivrnetnpmvuenutritionlabeldistvuenutritionlabelmincss relstylesheet typetextcss head body div idapp nutritionlabel optionsoptions vmodelitemnutritionlabel div script var vm new vue el ' app ' component ' nutritionlabel ' windowvuenutritionlabelnutritionlabel data return option item script body html option option prop must object javascript const option width 280 usefdarounding 1 use fda rounding rule readonly false showhide serving input field multipleitems false addedsugars show 1 na 1 calcium show 1 na 1 calorie show 1 na 1 cholesterol show 1 na 1 fatcalories show 1 na 1 fiber show 1 na 1 iron show 1 na 1 monounsaturatedfat show 0 na 1 polyunsaturatedfat show 0 na 1 potassium show 1 na 1 protein show 1 na 1 saturatedfat show 1 na 1 sodium show 1 na 1 sugaralcohol show 0 na 1 sugar show 1 na 1 totalcarb show 1 na 1 totalfat show 1 na 1 transfat show 1 na 1 vitamina show 1 na 1 vitaminc show 1 na 1 vitamind show 1 na 1 item object javascript const item name ' double cheese burger ' serving 1 servingpercontainer 0 servingunitname ' serving ' ingredientstatement ' swiss cheese american cheese cheese burger ' nutrition calorie 510 fatcalories 170 totalfat 19 saturatedfat 9 transfat 0 polyunsaturatedfat 0 monounsaturatedfat 0 cholesterol 10 sodium 560 totalcarb 79 fiber 4 sugar 35 protein 9 vitamina 1 vitaminc 2 calcium 35 iron 1 addedsugars 0 potassium 100 vitamind 0 servingweight 175 build setup bash install dependency npm install serve hot reload localhost8080 npm run dev build production minification npm run bundle detailed explanation thing work check guidehttpvuejstemplatesgithubiowebpack doc vueloaderhttpvuejsgithubiovueloader
Java,"[![Build Status](https://api.travis-ci.org/IBM/watson-calorie-counter.svg?branch=master)](https://travis-ci.org/IBM/watson-calorie-counter)

# Create a calorie counter mobile app using Watson Visual Recognition

In this Code Pattern, we will create a calorie counter mobile app using Apache Cordova, Node.js and Watson Visual Recognition. This mobile app extracts nutritional information from captured images of food items.

Currently this mobile app only runs on Android, but can be easily ported to iOS.

![Architecture diagram](doc/source/images/architecture.png)

## Flow

1. User interacts with the mobile app and captures an image.
2. The image is passed to the server application which uses Watson Visual Recognition Service to analyze the images and Nutritionix API to provide nutritional information.
3. Data is returned to the mobile app for display.

## Included components

* [Watson Visual Recognition](https://www.ibm.com/watson/developercloud/visual-recognition.html): Visual Recognition understands the contents of images - visual concepts tag the image, find human faces, approximate age and gender, and find similar images in a collection.

## Featured Technologies

* Mobile: Systems of engagement are increasingly using mobile technology as the platform for delivery.
* [Nutritionix API](https://developer.nutritionix.com/): The largest verified database of nutrition information.
* [Node.js](https://nodejs.org/): An asynchronous event driven JavaScript runtime, designed to build scalable applications.

# Watch the Video

[![](https://img.youtube.com/vi/Jp_9hKoNYrM/0.jpg)](https://youtu.be/Jp_9hKoNYrM)

# Steps

> NOTE: The Watson Visual Recognition service required for this patten only exists in the US-South/Dallas region (as of 11/30/18). You will only be able to deploy and/or use this code there.

This Code Pattern contains several pieces. The app server communicates with the Watson Visual Recognition service. The mobile application is built locally and run on the Android phone.

## Deploy the Server Application to IBM Cloud

[![Deploy to IBM Cloud](https://cloud.ibm.com/devops/setup/deploy/button.png)](https://cloud.ibm.com/devops/setup/deploy?repository=https://github.com/IBM/watson-calorie-counter)

1. Press the above ``Deploy to IBM Cloud`` button and then click on ``Deploy``.

2. In `Toolchains`, click on `Delivery Pipeline` to watch while the app is deployed.

![Toolchain pipeline](doc/source/images/toolchain-pipeline.png)

3. To see the app and services created and configured for this Code Pattern, use the IBM Cloud dashboard. The app is named `watson-calorie-counter` with a unique suffix. The following services are created and easily identified by the `wcc-` prefix:
    * wcc-visual-recognition

> Note: Make note of the `watson-calorie-counter` URL route - it will be required for later use in the mobile app.

To complete the installation, perform the following steps:

1. [Clone the repo](#1-clone-the-repo)
2. [Obtain a Nutritionix API ID and key](#2-obtain-a-nutritionix-api-id-and-key)
3. [Update config values for the Mobile App](#3-update-config-values-for-the-mobile-app)
4. Perform either 4a or 4b.

    4a. [Install dependencies to build the mobile application](#4a-install-dependencies-to-build-the-mobile-application)

    4b. [Run mobile application build in Docker container](#4b-run-mobile-application-build-in-docker-container)

5. [Add Android platform and plug-ins](#5-add-android-platform-and-plug-ins)
6. [Setup your Android device](#6-setup-your-android-device)
7. [Build and run the mobile app](#7-build-and-run-the-mobile-app)

## 1. Clone the repo

Clone the `watson-calorie-counter` repo locally. In a terminal, run:

```
$ git clone https://github.com/IBM/watson-calorie-counter.git
$ cd watson-calorie-counter
```

## 2. Obtain a Nutritionix API ID and key

Nutritionix data is used to gather nutritional information of an analyzed image. Instructions for obtaining a key can be found at [Nutritionix.com](https://developer.nutritionix.com/).

> Note: Make note of the API ID and key - they will be required for later use in the mobile app.

## 3. Update config values for the Mobile App

Edit `mobile/www/config.json` and update the setting with the values retrieved previously.

```javascript
""BLUEMIX_SERVER_URL"": ""<add-bluemix-server-url>"",
""NUTRITIONIX_APP_ID"": ""<add-nutritionix-app-id>"",
""NUTRITIONIX_APP_KEY"": ""<add-nutritionix-app-key>""
```

## 4a. Install dependencies to build the mobile application

Building the mobile application requires a few dependencies that you can either manually install yourself, **or** you can use [Docker](https://docs.docker.com/engine/installation/) by skipping to [Run mobile application build in Docker container](#4b-run-mobile-application-build-in-docker-container)

### Using manually-installed dependencies

For this Code Pattern, you'll need to install the prerequisites, by following their respective documentation:

* [Java Development Kit (JDK)](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)
* [Node.js and npm](https://nodejs.org/en/download/) (`npm` version 4.5.0 or higher)
* [Android Studio](https://developer.android.com/studio/), which includes Android tools and gives you access to Android SDKs
* [Cordova](https://cordova.apache.org/docs/en/latest/guide/platforms/android/index.html)
* [Gradle](https://gradle.org/install/)

You'll need to install the specific SDK appropriate for your mobile device. From `Android Studio`, download and install the desired API Level for the SDK. We are using Android API Level 23 as this is widely supported on most phones as of January, 2018. To do this:

* Launch `Android Studio` and accept all defaults.
* Click on the `SDK Manager` icon in the toolbar.
* Navigate to `Appearance & Behavior` -> `System Settings` -> `Android SDK`
* Select Android API level of your choice (Recommended Android 6.0 (Marshmallow) (API Level 23) and above).
* Click apply to download and install.

> Note: the `mobile/config.xml` is configured to build for Android API Level 23. Adjust this if you wish to build for a different API:
```
<preference name=""android-targetSdkVersion"" value=""23"" />
```

Once you have completed all of the required installs and setup, you should have the following environment variables set appropriately for your platform:

* `JAVA_HOME`
* `ANDROID_HOME`
* `PATH`

> Note: For additonal help setting these environment variables, refer to the  [Troubleshooting](#troubleshooting) section below.

## 4b. Run mobile application build in Docker container

If you are running [Docker](https://docs.docker.com/engine/installation/), build the mobile app in a Docker container.

Either download the image:
```
docker pull scottdangelo/cordova_build
```

Or build locally:
```
$ cd watson-calorie-counter/mobile
$ docker build -t cordova_build .
[truncated output]
Successfully built <image-id>
```

Now create the following alias for `cordova` and the commands for cordova will run inside the container. Use `cordova_build` in place of `scottdangelo/cordova_build` if you have built the container locally.

```
alias cordova='docker run -it --rm --privileged  -v $PWD:/mobile scottdangelo:cordova_build cordova'
```

> Note: the `mobile/config.xml` is configured to build for Android API Level 23. Adjust this if you wish to build for a different API:
```
<preference name=""android-targetSdkVersion"" value=""23"" />
```

## 5. Add Android platform and plug-ins

Start by adding the Android platform as the target for your mobile app.

```
$ cd watson-calorie-counter/mobile
$ cordova platform add android
```

Ensure that everything has been installed correctly:

```
$ cordova requirements
```

Finally, install the plugins required by the application:

```
$ cordova plugin add cordova-plugin-camera
$ cordova plugin add cordova-plugin-file-transfer
```

## 6. Setup your Android device

In order to run the application on your Android device, you will need to be prepared to transfer the application's `.apk` file to your device (created in the next step). There are multiple ways for developers to achieve this.

Android Studio will handle the transfer for you if you tether your Android device to your computer, and enable both `developer options` and `web debugging`.

> Note: Please refer to documentation on your specific phone to set these options.

For Mac users, [Android File Transfer](https://www.android.com/filetransfer/) will facilitate simple file transfers between your computer and Android device.

## 7. Build and run the mobile app

```
$ cd watson-calorie-counter/mobile
$ cordova build android
```

An `.apk` file should appear at `watson-calorie-counter/mobile/platforms/android/app/build/outputs/apk/debug/`, which contains the Android application.

You can then either manually transfer the `.apk` to your device and run it yourself, or if your device is tethered (as described in the previous step), then you can run:

```
$ cordova run android
```

However, a Docker container does not have access to your host's USB devices, unless you explicitly allow them to be passed through. You can expose your device to the Docker container, and allow Cordova to do the transfer for you. To accomplish that, you'll need to know which USB device to pass through. Discover your USB devices on a Linux machine with `lsusb`.

For example, in this case, I know that my Android device is `Bus 001, Device 002`:

```
$ lsusb
Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
Bus 001 Device 003: ID 046d:082d Logitech, Inc. HD Pro Webcam C920
Bus 001 Device 002: ID 18d1:4ee6 Google Inc.
Bus 001 Device 005: ID 046d:c085 Logitech, Inc.
Bus 001 Device 004: ID 045e:02e6 Microsoft Corp.
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
```

I can then pass my device through to the container using `--device=/dev/bus/usb/<bus-number>/<device-number>` and allow Cordova to access it. The new alias for the cordova command would then be:

```
alias cordova='docker run -it --rm --privileged  --device=/dev/bus/usb/001/002 -v $PWD:/mobile scottdangelo:cordova_build cordova'
```
Then we can run:
```
cordova run android
```

At this point, the app named `Calorie Counter` should be on your mobile device. Use the camera icon to take a photo of a food item, and allow Watson to analyze the image and fetch the calorie results.

# Sample Output

<img src=""doc/source/images/output1.jpg"" width=""250"">  <img src=""doc/source/images/output2.jpg"" width=""250"">

# Troubleshooting

* `cordova run android` error: Failure [INSTALL_FAILED_UPDATE_INCOMPATIBLE]

> The `Calorie Counter` app is already installed on your phone and incompatible with the version you are now trying to run. Uninstall the current version and try again.

* `cordova run android` error: No target specified and no devices found, deploying to emulator

> Ensure that your phone is plugged into your computer and you can access it from the Android File Transfer utility (see Step #6 above).

* How to determine proper values for environment variables:

Open `Android Studio` and navigate to `File` -> `Project Structure` -> `SDK
Location`. This location value will serve as the base for your environment variables. For example, if the location is `/users/joe/Android/sdk`, then:

```
$ export ANDROID_HOME=/users/joe/Android/sdk
$ export ANDROID_SDK_HOME=/users/joe/Android/sdk/platforms/android-<api-level>
$ export PATH=${PATH}:/users/joe/Android/sdk/platform-tools:/users/joe/Android/sdk/tools
```

* Error: Server error, status code: 502, error code: 10001, message: Service broker error: {""description""=>""Only one free key is allowed per organization. Contact your organization owner to obtain the key.""}

> Only one free key is allowed per organization. Binding the service to an application triggers a process that tries to allocate a new key, which will get rejected. If you already have an instance of Visual Recognition and an associated key, you can bind that instance to your application or update the API key in your server code to tell the app which key to use.

* When using Docker, first `cordova` command fails with:
```
-bash: cordova: command not found
```

> Test that you have the proper alias with:
```
alias |grep cordova
```
If you do not see the `alias cordova=...` output from [4b](#4b-run-mobile-application-build-in-docker-container), re-execute the `alias` command above.

# Links

* [Demo on Youtube](https://youtu.be/Jp_9hKoNYrM): Watch the video.
* [Watson Node.js SDK](https://github.com/watson-developer-cloud/node-sdk): : Visit the Node.js library to access IBM Watson services.
* [Sample code](https://www.ibm.com/developerworks/library/cc-sample-code-image-classification-watson-node/index.html): Identify objects in an image with the Watson Visual Recognition service.

# Learn more

* **Artificial Intelligence Code Patterns**: Enjoyed this Code Pattern? Check out our other [AI Code Patterns](https://developer.ibm.com/technologies/artificial-intelligence/).
* **AI and Data Code Pattern Playlist**: Bookmark our [playlist](https://www.youtube.com/playlist?list=PLzUbsvIyrNfknNewObx5N7uGZ5FKH0Fde) with all of our Code Pattern videos
* **With Watson**: Want to take your Watson app to the next level? Looking to utilize Watson Brand assets? [Join the With Watson program](https://www.ibm.com/watson/with-watson/) to leverage exclusive brand, marketing, and tech resources to amplify and accelerate your Watson embedded commercial solution.

# License

This code pattern is licensed under the Apache Software License, Version 2.  Separate third party code objects invoked within this code pattern are licensed by their respective providers pursuant to their own separate licenses. Contributions are subject to the [Developer Certificate of Origin, Version 1.1 (DCO)](https://developercertificate.org/) and the [Apache Software License, Version 2](https://www.apache.org/licenses/LICENSE-2.0.txt).

[Apache Software License (ASL) FAQ](https://www.apache.org/foundation/license-faq.html#WhatDoesItMEAN)
","build statushttpsapitravisciorgibmwatsoncaloriecountersvgbranchmasterhttpstravisciorgibmwatsoncaloriecounter

 create a calorie counter mobile app using watson visual recognition

in this code pattern we will create a calorie counter mobile app using apache cordova nodejs and watson visual recognition this mobile app extracts nutritional information from captured images of food items

currently this mobile app only runs on android but can be easily ported to ios

architecture diagramdocsourceimagesarchitecturepng

 flow

1 user interacts with the mobile app and captures an image
2 the image is passed to the server application which uses watson visual recognition service to analyze the images and nutritionix api to provide nutritional information
3 data is returned to the mobile app for display

 included components

 watson visual recognitionhttpswwwibmcomwatsondevelopercloudvisualrecognitionhtml visual recognition understands the contents of images visual concepts tag the image find human faces approximate age and gender and find similar images in a collection

 featured technologies

 mobile systems of engagement are increasingly using mobile technology as the platform for delivery
 nutritionix apihttpsdevelopernutritionixcom the largest verified database of nutrition information
 nodejshttpsnodejsorg an asynchronous event driven javascript runtime designed to build scalable applications

 watch the video

httpsimgyoutubecomvijp9hkonyrm0jpghttpsyoutubejp9hkonyrm

 steps

 note the watson visual recognition service required for this patten only exists in the ussouthdallas region as of 113018 you will only be able to deploy andor use this code there

this code pattern contains several pieces the app server communicates with the watson visual recognition service the mobile application is built locally and run on the android phone

 deploy the server application to ibm cloud

deploy to ibm cloudhttpscloudibmcomdevopssetupdeploybuttonpnghttpscloudibmcomdevopssetupdeployrepositoryhttpsgithubcomibmwatsoncaloriecounter

1 press the above deploy to ibm cloud button and then click on deploy

2 in toolchains click on delivery pipeline to watch while the app is deployed

toolchain pipelinedocsourceimagestoolchainpipelinepng

3 to see the app and services created and configured for this code pattern use the ibm cloud dashboard the app is named watsoncaloriecounter with a unique suffix the following services are created and easily identified by the wcc prefix
 wccvisualrecognition

 note make note of the watsoncaloriecounter url route it will be required for later use in the mobile app

to complete the installation perform the following steps

1 clone the repo1clonetherepo
2 obtain a nutritionix api id and key2obtainanutritionixapiidandkey
3 update config values for the mobile app3updateconfigvaluesforthemobileapp
4 perform either 4a or 4b

 4a install dependencies to build the mobile application4ainstalldependenciestobuildthemobileapplication

 4b run mobile application build in docker container4brunmobileapplicationbuildindockercontainer

5 add android platform and plugins5addandroidplatformandplugins
6 setup your android device6setupyourandroiddevice
7 build and run the mobile app7buildandrunthemobileapp

 1 clone the repo

clone the watsoncaloriecounter repo locally in a terminal run


 git clone httpsgithubcomibmwatsoncaloriecountergit
 cd watsoncaloriecounter


 2 obtain a nutritionix api id and key

nutritionix data is used to gather nutritional information of an analyzed image instructions for obtaining a key can be found at nutritionixcomhttpsdevelopernutritionixcom

 note make note of the api id and key they will be required for later use in the mobile app

 3 update config values for the mobile app

edit mobilewwwconfigjson and update the setting with the values retrieved previously

javascript
bluemixserverurl addbluemixserverurl
nutritionixappid addnutritionixappid
nutritionixappkey addnutritionixappkey


 4a install dependencies to build the mobile application

building the mobile application requires a few dependencies that you can either manually install yourself or you can use dockerhttpsdocsdockercomengineinstallation by skipping to run mobile application build in docker container4brunmobileapplicationbuildindockercontainer

 using manuallyinstalled dependencies

for this code pattern you ' ll need to install the prerequisites by following their respective documentation

 java development kit jdkhttpswwworaclecomtechnetworkjavajavasedownloadsjdk8downloads2133151html
 nodejs and npmhttpsnodejsorgendownload npm version 450 or higher
 android studiohttpsdeveloperandroidcomstudio which includes android tools and gives you access to android sdks
 cordovahttpscordovaapacheorgdocsenlatestguideplatformsandroidindexhtml
 gradlehttpsgradleorginstall

you ' ll need to install the specific sdk appropriate for your mobile device from android studio download and install the desired api level for the sdk we are using android api level 23 as this is widely supported on most phones as of january 2018 to do this

 launch android studio and accept all defaults
 click on the sdk manager icon in the toolbar
 navigate to appearance behavior system settings android sdk
 select android api level of your choice recommended android 60 marshmallow api level 23 and above
 click apply to download and install

 note the mobileconfigxml is configured to build for android api level 23 adjust this if you wish to build for a different api

preference nameandroidtargetsdkversion value23 


once you have completed all of the required installs and setup you should have the following environment variables set appropriately for your platform

 javahome
 androidhome
 path

 note for additonal help setting these environment variables refer to the troubleshootingtroubleshooting section below

 4b run mobile application build in docker container

if you are running dockerhttpsdocsdockercomengineinstallation build the mobile app in a docker container

either download the image

docker pull scottdangelocordovabuild


or build locally

 cd watsoncaloriecountermobile
 docker build t cordovabuild 
truncated output
successfully built imageid


now create the following alias for cordova and the commands for cordova will run inside the container use cordovabuild in place of scottdangelocordovabuild if you have built the container locally


alias cordova ' docker run it rm privileged v pwdmobile scottdangelocordovabuild cordova ' 


 note the mobileconfigxml is configured to build for android api level 23 adjust this if you wish to build for a different api

preference nameandroidtargetsdkversion value23 


 5 add android platform and plugins

start by adding the android platform as the target for your mobile app


 cd watsoncaloriecountermobile
 cordova platform add android


ensure that everything has been installed correctly


 cordova requirements


finally install the plugins required by the application


 cordova plugin add cordovaplugincamera
 cordova plugin add cordovapluginfiletransfer


 6 setup your android device

in order to run the application on your android device you will need to be prepared to transfer the application ' s apk file to your device created in the next step there are multiple ways for developers to achieve this

android studio will handle the transfer for you if you tether your android device to your computer and enable both developer options and web debugging

 note please refer to documentation on your specific phone to set these options

for mac users android file transferhttpswwwandroidcomfiletransfer will facilitate simple file transfers between your computer and android device

 7 build and run the mobile app


 cd watsoncaloriecountermobile
 cordova build android


an apk file should appear at watsoncaloriecountermobileplatformsandroidappbuildoutputsapkdebug which contains the android application

you can then either manually transfer the apk to your device and run it yourself or if your device is tethered as described in the previous step then you can run


 cordova run android


however a docker container does not have access to your host ' s usb devices unless you explicitly allow them to be passed through you can expose your device to the docker container and allow cordova to do the transfer for you to accomplish that you ' ll need to know which usb device to pass through discover your usb devices on a linux machine with lsusb

for example in this case i know that my android device is bus 001 device 002


 lsusb
bus 002 device 001 id 1d6b0003 linux foundation 30 root hub
bus 001 device 003 id 046d082d logitech inc hd pro webcam c920
bus 001 device 002 id 18d14ee6 google inc
bus 001 device 005 id 046dc085 logitech inc
bus 001 device 004 id 045e02e6 microsoft corp
bus 001 device 001 id 1d6b0002 linux foundation 20 root hub


i can then pass my device through to the container using devicedevbususbbusnumberdevicenumber and allow cordova to access it the new alias for the cordova command would then be


alias cordova ' docker run it rm privileged devicedevbususb001002 v pwdmobile scottdangelocordovabuild cordova ' 

then we can run

cordova run android


at this point the app named calorie counter should be on your mobile device use the camera icon to take a photo of a food item and allow watson to analyze the image and fetch the calorie results

 sample output

img srcdocsourceimagesoutput1jpg width250 img srcdocsourceimagesoutput2jpg width250

 troubleshooting

 cordova run android error failure installfailedupdateincompatible

 the calorie counter app is already installed on your phone and incompatible with the version you are now trying to run uninstall the current version and try again

 cordova run android error no target specified and no devices found deploying to emulator

 ensure that your phone is plugged into your computer and you can access it from the android file transfer utility see step 6 above

 how to determine proper values for environment variables

open android studio and navigate to file project structure sdk
location this location value will serve as the base for your environment variables for example if the location is usersjoeandroidsdk then


 export androidhomeusersjoeandroidsdk
 export androidsdkhomeusersjoeandroidsdkplatformsandroidapilevel
 export pathpathusersjoeandroidsdkplatformtoolsusersjoeandroidsdktools


 error server error status code 502 error code 10001 message service broker error descriptiononly one free key is allowed per organization contact your organization owner to obtain the key

 only one free key is allowed per organization binding the service to an application triggers a process that tries to allocate a new key which will get rejected if you already have an instance of visual recognition and an associated key you can bind that instance to your application or update the api key in your server code to tell the app which key to use

 when using docker first cordova command fails with

bash cordova command not found


 test that you have the proper alias with

alias grep cordova

if you do not see the alias cordova output from 4b4brunmobileapplicationbuildindockercontainer reexecute the alias command above

 links

 demo on youtubehttpsyoutubejp9hkonyrm watch the video
 watson nodejs sdkhttpsgithubcomwatsondevelopercloudnodesdk visit the nodejs library to access ibm watson services
 sample codehttpswwwibmcomdeveloperworkslibraryccsamplecodeimageclassificationwatsonnodeindexhtml identify objects in an image with the watson visual recognition service

 learn more

 artificial intelligence code patterns enjoyed this code pattern check out our other ai code patternshttpsdeveloperibmcomtechnologiesartificialintelligence
 ai and data code pattern playlist bookmark our playlisthttpswwwyoutubecomplaylistlistplzubsviyrnfknnewobx5n7ugz5fkh0fde with all of our code pattern videos
 with watson want to take your watson app to the next level looking to utilize watson brand assets join the with watson programhttpswwwibmcomwatsonwithwatson to leverage exclusive brand marketing and tech resources to amplify and accelerate your watson embedded commercial solution

 license

this code pattern is licensed under the apache software license version 2 separate third party code objects invoked within this code pattern are licensed by their respective providers pursuant to their own separate licenses contributions are subject to the developer certificate of origin version 11 dcohttpsdevelopercertificateorg and the apache software license version 2httpswwwapacheorglicenseslicense20txt

apache software license asl faqhttpswwwapacheorgfoundationlicensefaqhtmlwhatdoesitmean",build statushttpsapitravisciorgibmwatsoncaloriecountersvgbranchmasterhttpstravisciorgibmwatsoncaloriecount creat calori counter mobil app use watson visual recognit thi code pattern creat calori counter mobil app use apach cordova nodej watson visual recognit thi mobil app extract nutrit inform captur imag food item current thi mobil app onli run android easili port io architectur diagramdocsourceimagesarchitecturepng flow 1 user interact mobil app captur imag 2 imag pass server applic use watson visual recognit servic analyz imag nutritionix api provid nutrit inform 3 data return mobil app display includ compon watson visual recognitionhttpswwwibmcomwatsondevelopercloudvisualrecognitionhtml visual recognit understand content imag visual concept tag imag find human face approxim age gender find similar imag collect featur technolog mobil system engag increasingli use mobil technolog platform deliveri nutritionix apihttpsdevelopernutritionixcom largest verifi databas nutrit inform nodejshttpsnodejsorg asynchron event driven javascript runtim design build scalabl applic watch video httpsimgyoutubecomvijp9hkonyrm0jpghttpsyoutubejp9hkonyrm step note watson visual recognit servic requir thi patten onli exist ussouthdalla region 113018 onli abl deploy andor use thi code thi code pattern contain sever piec app server commun watson visual recognit servic mobil applic built local run android phone deploy server applic ibm cloud deploy ibm cloudhttpscloudibmcomdevopssetupdeploybuttonpnghttpscloudibmcomdevopssetupdeployrepositoryhttpsgithubcomibmwatsoncaloriecount 1 press abov deploy ibm cloud button click deploy 2 toolchain click deliveri pipelin watch app deploy toolchain pipelinedocsourceimagestoolchainpipelinepng 3 see app servic creat configur thi code pattern use ibm cloud dashboard app name watsoncaloriecount uniqu suffix follow servic creat easili identifi wcc prefix wccvisualrecognit note make note watsoncaloriecount url rout requir later use mobil app complet instal perform follow step 1 clone repo1clonetherepo 2 obtain nutritionix api id key2obtainanutritionixapiidandkey 3 updat config valu mobil app3updateconfigvaluesforthemobileapp 4 perform either 4a 4b 4a instal depend build mobil application4ainstalldependenciestobuildthemobileappl 4b run mobil applic build docker container4brunmobileapplicationbuildindockercontain 5 add android platform plugins5addandroidplatformandplugin 6 setup android device6setupyourandroiddevic 7 build run mobil app7buildandrunthemobileapp 1 clone repo clone watsoncaloriecount repo local termin run git clone httpsgithubcomibmwatsoncaloriecountergit cd watsoncaloriecount 2 obtain nutritionix api id key nutritionix data use gather nutrit inform analyz imag instruct obtain key found nutritionixcomhttpsdevelopernutritionixcom note make note api id key requir later use mobil app 3 updat config valu mobil app edit mobilewwwconfigjson updat set valu retriev previous javascript bluemixserverurl addbluemixserverurl nutritionixappid addnutritionixappid nutritionixappkey addnutritionixappkey 4a instal depend build mobil applic build mobil applic requir depend either manual instal use dockerhttpsdocsdockercomengineinstal skip run mobil applic build docker container4brunmobileapplicationbuildindockercontain use manuallyinstal depend thi code pattern ' need instal prerequisit follow respect document java develop kit jdkhttpswwworaclecomtechnetworkjavajavasedownloadsjdk8downloads2133151html nodej npmhttpsnodejsorgendownload npm version 450 higher android studiohttpsdeveloperandroidcomstudio includ android tool give access android sdk cordovahttpscordovaapacheorgdocsenlatestguideplatformsandroidindexhtml gradlehttpsgradleorginstal ' need instal specif sdk appropri mobil devic android studio download instal desir api level sdk use android api level 23 thi wide support phone januari 2018 thi launch android studio accept default click sdk manag icon toolbar navig appear behavior system set android sdk select android api level choic recommend android 60 marshmallow api level 23 abov click appli download instal note mobileconfigxml configur build android api level 23 adjust thi wish build differ api prefer nameandroidtargetsdkvers value23 onc complet requir instal setup follow environ variabl set appropri platform javahom androidhom path note additon help set environ variabl refer troubleshootingtroubleshoot section 4b run mobil applic build docker contain run dockerhttpsdocsdockercomengineinstal build mobil app docker contain either download imag docker pull scottdangelocordovabuild build local cd watsoncaloriecountermobil docker build cordovabuild truncat output success built imageid creat follow alia cordova command cordova run insid contain use cordovabuild place scottdangelocordovabuild built contain local alia cordova ' docker run rm privileg v pwdmobil scottdangelocordovabuild cordova ' note mobileconfigxml configur build android api level 23 adjust thi wish build differ api prefer nameandroidtargetsdkvers value23 5 add android platform plugin start ad android platform target mobil app cd watsoncaloriecountermobil cordova platform add android ensur everyth ha instal correctli cordova requir final instal plugin requir applic cordova plugin add cordovaplugincamera cordova plugin add cordovapluginfiletransf 6 setup android devic order run applic android devic need prepar transfer applic ' apk file devic creat next step multipl way develop achiev thi android studio handl transfer tether android devic comput enabl develop option web debug note pleas refer document specif phone set option mac user android file transferhttpswwwandroidcomfiletransf facilit simpl file transfer comput android devic 7 build run mobil app cd watsoncaloriecountermobil cordova build android apk file appear watsoncaloriecountermobileplatformsandroidappbuildoutputsapkdebug contain android applic either manual transfer apk devic run devic tether describ previou step run cordova run android howev docker contain doe access host ' usb devic unless explicitli allow pass expos devic docker contain allow cordova transfer accomplish ' need know usb devic pass discov usb devic linux machin lsusb exampl thi case know android devic bu 001 devic 002 lsusb bu 002 devic 001 id 1d6b0003 linux foundat 30 root hub bu 001 devic 003 id 046d082d logitech inc hd pro webcam c920 bu 001 devic 002 id 18d14ee6 googl inc bu 001 devic 005 id 046dc085 logitech inc bu 001 devic 004 id 045e02e6 microsoft corp bu 001 devic 001 id 1d6b0002 linux foundat 20 root hub pass devic contain use devicedevbususbbusnumberdevicenumb allow cordova access new alia cordova command would alia cordova ' docker run rm privileg devicedevbususb001002 v pwdmobil scottdangelocordovabuild cordova ' run cordova run android thi point app name calori counter mobil devic use camera icon take photo food item allow watson analyz imag fetch calori result sampl output img srcdocsourceimagesoutput1jpg width250 img srcdocsourceimagesoutput2jpg width250 troubleshoot cordova run android error failur installfailedupdateincompat calori counter app alreadi instal phone incompat version tri run uninstal current version tri cordova run android error target specifi devic found deploy emul ensur phone plug comput access android file transfer util see step 6 abov determin proper valu environ variabl open android studio navig file project structur sdk locat thi locat valu serv base environ variabl exampl locat usersjoeandroidsdk export androidhomeusersjoeandroidsdk export androidsdkhomeusersjoeandroidsdkplatformsandroidapilevel export pathpathusersjoeandroidsdkplatformtoolsusersjoeandroidsdktool error server error statu code 502 error code 10001 messag servic broker error descriptiononli one free key allow per organ contact organ owner obtain key onli one free key allow per organ bind servic applic trigger process tri alloc new key get reject alreadi instanc visual recognit associ key bind instanc applic updat api key server code tell app key use use docker first cordova command fail bash cordova command found test proper alia alia grep cordova see alia cordova output 4b4brunmobileapplicationbuildindockercontain reexecut alia command abov link demo youtubehttpsyoutubejp9hkonyrm watch video watson nodej sdkhttpsgithubcomwatsondevelopercloudnodesdk visit nodej librari access ibm watson servic sampl codehttpswwwibmcomdeveloperworkslibraryccsamplecodeimageclassificationwatsonnodeindexhtml identifi object imag watson visual recognit servic learn artifici intellig code pattern enjoy thi code pattern check ai code patternshttpsdeveloperibmcomtechnologiesartificialintellig ai data code pattern playlist bookmark playlisthttpswwwyoutubecomplaylistlistplzubsviyrnfknnewobx5n7ugz5fkh0fd code pattern video watson want take watson app next level look util watson brand asset join watson programhttpswwwibmcomwatsonwithwatson leverag exclus brand market tech resourc amplifi acceler watson embed commerci solut licens thi code pattern licens apach softwar licens version 2 separ third parti code object invok within thi code pattern licens respect provid pursuant separ licens contribut subject develop certif origin version 11 dcohttpsdevelopercertificateorg apach softwar licens version 2httpswwwapacheorglicenseslicense20txt apach softwar licens asl faqhttpswwwapacheorgfoundationlicensefaqhtmlwhatdoesitmean,build statushttpsapitravisciorgibmwatsoncaloriecountersvgbranchmasterhttpstravisciorgibmwatsoncaloriecounter create calorie counter mobile app using watson visual recognition code pattern create calorie counter mobile app using apache cordova nodejs watson visual recognition mobile app extract nutritional information captured image food item currently mobile app run android easily ported io architecture diagramdocsourceimagesarchitecturepng flow 1 user interacts mobile app capture image 2 image passed server application us watson visual recognition service analyze image nutritionix api provide nutritional information 3 data returned mobile app display included component watson visual recognitionhttpswwwibmcomwatsondevelopercloudvisualrecognitionhtml visual recognition understands content image visual concept tag image find human face approximate age gender find similar image collection featured technology mobile system engagement increasingly using mobile technology platform delivery nutritionix apihttpsdevelopernutritionixcom largest verified database nutrition information nodejshttpsnodejsorg asynchronous event driven javascript runtime designed build scalable application watch video httpsimgyoutubecomvijp9hkonyrm0jpghttpsyoutubejp9hkonyrm step note watson visual recognition service required patten exists ussouthdallas region 113018 able deploy andor use code code pattern contains several piece app server communicates watson visual recognition service mobile application built locally run android phone deploy server application ibm cloud deploy ibm cloudhttpscloudibmcomdevopssetupdeploybuttonpnghttpscloudibmcomdevopssetupdeployrepositoryhttpsgithubcomibmwatsoncaloriecounter 1 press deploy ibm cloud button click deploy 2 toolchains click delivery pipeline watch app deployed toolchain pipelinedocsourceimagestoolchainpipelinepng 3 see app service created configured code pattern use ibm cloud dashboard app named watsoncaloriecounter unique suffix following service created easily identified wcc prefix wccvisualrecognition note make note watsoncaloriecounter url route required later use mobile app complete installation perform following step 1 clone repo1clonetherepo 2 obtain nutritionix api id key2obtainanutritionixapiidandkey 3 update config value mobile app3updateconfigvaluesforthemobileapp 4 perform either 4a 4b 4a install dependency build mobile application4ainstalldependenciestobuildthemobileapplication 4b run mobile application build docker container4brunmobileapplicationbuildindockercontainer 5 add android platform plugins5addandroidplatformandplugins 6 setup android device6setupyourandroiddevice 7 build run mobile app7buildandrunthemobileapp 1 clone repo clone watsoncaloriecounter repo locally terminal run git clone httpsgithubcomibmwatsoncaloriecountergit cd watsoncaloriecounter 2 obtain nutritionix api id key nutritionix data used gather nutritional information analyzed image instruction obtaining key found nutritionixcomhttpsdevelopernutritionixcom note make note api id key required later use mobile app 3 update config value mobile app edit mobilewwwconfigjson update setting value retrieved previously javascript bluemixserverurl addbluemixserverurl nutritionixappid addnutritionixappid nutritionixappkey addnutritionixappkey 4a install dependency build mobile application building mobile application requires dependency either manually install use dockerhttpsdocsdockercomengineinstallation skipping run mobile application build docker container4brunmobileapplicationbuildindockercontainer using manuallyinstalled dependency code pattern ' need install prerequisite following respective documentation java development kit jdkhttpswwworaclecomtechnetworkjavajavasedownloadsjdk8downloads2133151html nodejs npmhttpsnodejsorgendownload npm version 450 higher android studiohttpsdeveloperandroidcomstudio includes android tool give access android sdks cordovahttpscordovaapacheorgdocsenlatestguideplatformsandroidindexhtml gradlehttpsgradleorginstall ' need install specific sdk appropriate mobile device android studio download install desired api level sdk using android api level 23 widely supported phone january 2018 launch android studio accept default click sdk manager icon toolbar navigate appearance behavior system setting android sdk select android api level choice recommended android 60 marshmallow api level 23 click apply download install note mobileconfigxml configured build android api level 23 adjust wish build different api preference nameandroidtargetsdkversion value23 completed required installs setup following environment variable set appropriately platform javahome androidhome path note additonal help setting environment variable refer troubleshootingtroubleshooting section 4b run mobile application build docker container running dockerhttpsdocsdockercomengineinstallation build mobile app docker container either download image docker pull scottdangelocordovabuild build locally cd watsoncaloriecountermobile docker build cordovabuild truncated output successfully built imageid create following alias cordova command cordova run inside container use cordovabuild place scottdangelocordovabuild built container locally alias cordova ' docker run rm privileged v pwdmobile scottdangelocordovabuild cordova ' note mobileconfigxml configured build android api level 23 adjust wish build different api preference nameandroidtargetsdkversion value23 5 add android platform plugins start adding android platform target mobile app cd watsoncaloriecountermobile cordova platform add android ensure everything ha installed correctly cordova requirement finally install plugins required application cordova plugin add cordovaplugincamera cordova plugin add cordovapluginfiletransfer 6 setup android device order run application android device need prepared transfer application ' apk file device created next step multiple way developer achieve android studio handle transfer tether android device computer enable developer option web debugging note please refer documentation specific phone set option mac user android file transferhttpswwwandroidcomfiletransfer facilitate simple file transfer computer android device 7 build run mobile app cd watsoncaloriecountermobile cordova build android apk file appear watsoncaloriecountermobileplatformsandroidappbuildoutputsapkdebug contains android application either manually transfer apk device run device tethered described previous step run cordova run android however docker container doe access host ' usb device unless explicitly allow passed expose device docker container allow cordova transfer accomplish ' need know usb device pas discover usb device linux machine lsusb example case know android device bus 001 device 002 lsusb bus 002 device 001 id 1d6b0003 linux foundation 30 root hub bus 001 device 003 id 046d082d logitech inc hd pro webcam c920 bus 001 device 002 id 18d14ee6 google inc bus 001 device 005 id 046dc085 logitech inc bus 001 device 004 id 045e02e6 microsoft corp bus 001 device 001 id 1d6b0002 linux foundation 20 root hub pas device container using devicedevbususbbusnumberdevicenumber allow cordova access new alias cordova command would alias cordova ' docker run rm privileged devicedevbususb001002 v pwdmobile scottdangelocordovabuild cordova ' run cordova run android point app named calorie counter mobile device use camera icon take photo food item allow watson analyze image fetch calorie result sample output img srcdocsourceimagesoutput1jpg width250 img srcdocsourceimagesoutput2jpg width250 troubleshooting cordova run android error failure installfailedupdateincompatible calorie counter app already installed phone incompatible version trying run uninstall current version try cordova run android error target specified device found deploying emulator ensure phone plugged computer access android file transfer utility see step 6 determine proper value environment variable open android studio navigate file project structure sdk location location value serve base environment variable example location usersjoeandroidsdk export androidhomeusersjoeandroidsdk export androidsdkhomeusersjoeandroidsdkplatformsandroidapilevel export pathpathusersjoeandroidsdkplatformtoolsusersjoeandroidsdktools error server error status code 502 error code 10001 message service broker error descriptiononly one free key allowed per organization contact organization owner obtain key one free key allowed per organization binding service application trigger process try allocate new key get rejected already instance visual recognition associated key bind instance application update api key server code tell app key use using docker first cordova command fails bash cordova command found test proper alias alias grep cordova see alias cordova output 4b4brunmobileapplicationbuildindockercontainer reexecute alias command link demo youtubehttpsyoutubejp9hkonyrm watch video watson nodejs sdkhttpsgithubcomwatsondevelopercloudnodesdk visit nodejs library access ibm watson service sample codehttpswwwibmcomdeveloperworkslibraryccsamplecodeimageclassificationwatsonnodeindexhtml identify object image watson visual recognition service learn artificial intelligence code pattern enjoyed code pattern check ai code patternshttpsdeveloperibmcomtechnologiesartificialintelligence ai data code pattern playlist bookmark playlisthttpswwwyoutubecomplaylistlistplzubsviyrnfknnewobx5n7ugz5fkh0fde code pattern video watson want take watson app next level looking utilize watson brand asset join watson programhttpswwwibmcomwatsonwithwatson leverage exclusive brand marketing tech resource amplify accelerate watson embedded commercial solution license code pattern licensed apache software license version 2 separate third party code object invoked within code pattern licensed respective provider pursuant separate license contribution subject developer certificate origin version 11 dcohttpsdevelopercertificateorg apache software license version 2httpswwwapacheorglicenseslicense20txt apache software license asl faqhttpswwwapacheorgfoundationlicensefaqhtmlwhatdoesitmean
R,"# nutritionR
A wrapper for the Nutritionix API (https://www.nutritionix.com), allowing nutritional analysis of foods and recipes expressed in natural language.

# Requirements

Requires a Nutritionix API key (it's free!). Go to https://developer.nutritionix.com

# Installation / getting started

1. Install the package

```
devtools::install_github(""tylerburleigh/nutritionR"")
```

2. Load the package and set your API keys

```
library(""nutritionR"")
Sys.setenv(NUTRITIONIX_APP_ID = ""MY_APP_ID"")
Sys.setenv(NUTRITIONIX_API_KEY = ""MY_API_KEY"")
```

# How do I use `nutritionR`?

This package has two functions:

## 1. `nutritionix_lookup()`

`nutritionix_lookup()` takes a natural language food query as input, it sends this query to the Nutritionix API, and then returns an list object with all sorts of nutrition information. 

You can inspect this object. It has all sorts of information like portion size, quantity, weight, brand name (if applicable), and of course nutrition. If you don't specify a portion size or quantity, it will make its own assumptions. You can see what these assumptions are.

For example, let's say you wanted to query Nutritionix with ""A hamburger with cheese"":

```
obj <- nutritionix_lookup(""A hamburger with cheese"")
```

## 2. `nutrient()`

`nutrient()` takes a nutrition object returned by `nutritionix_lookup()` and a nutrient as input, and returns the information about that nutrient. Specifically, it returns the name, amount, and unit. 

For example, let's say you wanted to know how many calories were in your query ""A hamburger with cheese"".

```
obj <- nutritionix_lookup(""A hamburger with cheese"")
nutrient(obj, ""calories"")

$name
[1] ""calories""

$amount
[1] 653.26

$unit
[1] ""kcal""
```

# Natural language, what?

The Nutritionix API uses natural language processing to process your queries. It can usually figure out what food items you're referring to even when you give it a complex input with non-food related details. For example, let's say you had eggs and toast for breakfast, and a burrito for lunch. You can use this query exactly as it is:

```
obj <- nutritionix_lookup(""I had eggs and toast for breakfast, and a burrito for lunch."")
nutrient(obj, ""calories"")

$name
[1] ""calories""

$amount
[1] 569.1

$unit
[1] ""kcal""
```

Here, `nutritionix_lookup()` returns a list object with 3 items, and `nutrient(obj, ""calories"")` returns the calories for all of the ingredients summed together.

# Using `nutritionR` for recipes

You can use `nutritionR` to lookup nutrition info for recipes. 

For example, this is one of my favorite simple curry recipes:

- 2 cups dry red lentils
- 2 tsps turmeric
- 4 tbsp olive oil
- 2 tsps cumin seeds
- 1 small onion
- 2 cloves garlic
- 2 fresh green chiles
- 1 tsp garam masala
- 1 tsp ground coriander
- 1 tbsp fresh ginger
- 2 medium tomatoes

If I want to know the nutrition of this recipe, I can take these ingredients and enter them as a query to the `nutritionix_lookup()` function, as a comma-separated string like this:

```
obj <- nutritionix_lookup(""2 cups red lentils, 
                           2 tsps turmeric, 
                           4 tbsp olive oil, 
                           2 tsps cumin seeds, 
                           1 small onion, 
                           2 cloves garlic, 
                           2 fresh green chiles, 
                           1 tsp garam masala, 
                           1 tsp ground coriander, 
                           1 tbsp fresh ginger, 
                           2 medium tomatoes"")
nutrient(obj, ""calories"")

$name
[1] ""calories""

$amount
[1] 2022.532

$unit
[1] ""kcal""
```

Let's say I want to know the calories per serving. If I know how many servings the recipe makes, then I could divide the `amount` returned by `nutrient()` by the number of servings.

```
obj <- nutritionix_lookup(""2 cups dry red lentils, 
                           2 tsps turmeric, 
                           4 tbsp olive oil, 
                           2 tsps cumin seeds, 
                           1 small onion, 
                           2 cloves garlic, 
                           2 fresh green chiles, 
                           1 tsp garam masala, 
                           1 tsp ground coriander, 
                           1 tbsp fresh ginger, 
                           2 medium tomatoes"")
calories <- nutrient(obj, ""calories"")
calories$amount / 6

[1] 337.0887
```

# Great, so what nutrients can I lookup?

Currently, 68 nutrients are supported. 
This includes macronutrients like fat, protein, carbs, calories, and also micronutrients, vitamins, and minerals.

The full list of nutrients is as follows:

- calcium
- carbohydrate
- cholesterol
- calories
- saturated fat
- fat
- trans fat
- iron
- fiber
- potassium
- sodium
- protein
- sugar
- vitamin d
- alanine
- alcohol
- arginine
- ash
- aspartic acid
- caffeine
- carotene alpha
- carotene beta
- choline
- cryptoxanthin
- copper
- cystine
- monosaturated fat
- polysaturated fat
- folate
- folic acid
- folate
- glutamic acid
- glycine
- histidine
- isoleucine
- leucine
- lutein and zeaxanthin
- lycopene
- lysine
- methionine
- magnesium
- manganese
- niacin
- phosphorus
- pantothenic acid
- phenylalanine
- proline
- retinol
- riboflavin
- selenium
- serine
- theobromine
- thiamin
- threonin
- vitamin e
- tryptophan
- tyrosine
- valine
- vitamin a
- vitamin b12
- vitamin b-6
- vitamin c
- vitamin d2 and d3
- vitamin k
- water
- zinc

This list can also be accessed with `data(nutrients)`


# Package maintainer / author

nutritionR is written and maintained by [Tyler Burleigh](https://tylerburleigh.com).

<a href=""https://twitter.com/intent/follow?screen_name=tylerburleigh""><img src=""https://img.shields.io/twitter/follow/tylerburleigh?style=social&logo=twitter"" alt=""follow on Twitter""></a>
","nutritionr
a wrapper for the nutritionix api httpswwwnutritionixcom allowing nutritional analysis of foods and recipes expressed in natural language

 requirements

requires a nutritionix api key it ' s free go to httpsdevelopernutritionixcom

 installation getting started

1 install the package


devtoolsinstallgithubtylerburleighnutritionr


2 load the package and set your api keys


librarynutritionr
syssetenvnutritionixappid myappid
syssetenvnutritionixapikey myapikey


 how do i use nutritionr

this package has two functions

 1 nutritionixlookup

nutritionixlookup takes a natural language food query as input it sends this query to the nutritionix api and then returns an list object with all sorts of nutrition information 

you can inspect this object it has all sorts of information like portion size quantity weight brand name if applicable and of course nutrition if you don ' t specify a portion size or quantity it will make its own assumptions you can see what these assumptions are

for example let ' s say you wanted to query nutritionix with a hamburger with cheese


obj nutritionixlookupa hamburger with cheese


 2 nutrient

nutrient takes a nutrition object returned by nutritionixlookup and a nutrient as input and returns the information about that nutrient specifically it returns the name amount and unit 

for example let ' s say you wanted to know how many calories were in your query a hamburger with cheese


obj nutritionixlookupa hamburger with cheese
nutrientobj calories

name
1 calories

amount
1 65326

unit
1 kcal


 natural language what

the nutritionix api uses natural language processing to process your queries it can usually figure out what food items you ' re referring to even when you give it a complex input with nonfood related details for example let ' s say you had eggs and toast for breakfast and a burrito for lunch you can use this query exactly as it is


obj nutritionixlookupi had eggs and toast for breakfast and a burrito for lunch
nutrientobj calories

name
1 calories

amount
1 5691

unit
1 kcal


here nutritionixlookup returns a list object with 3 items and nutrientobj calories returns the calories for all of the ingredients summed together

 using nutritionr for recipes

you can use nutritionr to lookup nutrition info for recipes 

for example this is one of my favorite simple curry recipes

 2 cups dry red lentils
 2 tsps turmeric
 4 tbsp olive oil
 2 tsps cumin seeds
 1 small onion
 2 cloves garlic
 2 fresh green chiles
 1 tsp garam masala
 1 tsp ground coriander
 1 tbsp fresh ginger
 2 medium tomatoes

if i want to know the nutrition of this recipe i can take these ingredients and enter them as a query to the nutritionixlookup function as a commaseparated string like this


obj nutritionixlookup2 cups red lentils 
 2 tsps turmeric 
 4 tbsp olive oil 
 2 tsps cumin seeds 
 1 small onion 
 2 cloves garlic 
 2 fresh green chiles 
 1 tsp garam masala 
 1 tsp ground coriander 
 1 tbsp fresh ginger 
 2 medium tomatoes
nutrientobj calories

name
1 calories

amount
1 2022532

unit
1 kcal


let ' s say i want to know the calories per serving if i know how many servings the recipe makes then i could divide the amount returned by nutrient by the number of servings


obj nutritionixlookup2 cups dry red lentils 
 2 tsps turmeric 
 4 tbsp olive oil 
 2 tsps cumin seeds 
 1 small onion 
 2 cloves garlic 
 2 fresh green chiles 
 1 tsp garam masala 
 1 tsp ground coriander 
 1 tbsp fresh ginger 
 2 medium tomatoes
calories nutrientobj calories
caloriesamount 6

1 3370887


 great so what nutrients can i lookup

currently 68 nutrients are supported 
this includes macronutrients like fat protein carbs calories and also micronutrients vitamins and minerals

the full list of nutrients is as follows

 calcium
 carbohydrate
 cholesterol
 calories
 saturated fat
 fat
 trans fat
 iron
 fiber
 potassium
 sodium
 protein
 sugar
 vitamin d
 alanine
 alcohol
 arginine
 ash
 aspartic acid
 caffeine
 carotene alpha
 carotene beta
 choline
 cryptoxanthin
 copper
 cystine
 monosaturated fat
 polysaturated fat
 folate
 folic acid
 folate
 glutamic acid
 glycine
 histidine
 isoleucine
 leucine
 lutein and zeaxanthin
 lycopene
 lysine
 methionine
 magnesium
 manganese
 niacin
 phosphorus
 pantothenic acid
 phenylalanine
 proline
 retinol
 riboflavin
 selenium
 serine
 theobromine
 thiamin
 threonin
 vitamin e
 tryptophan
 tyrosine
 valine
 vitamin a
 vitamin b12
 vitamin b6
 vitamin c
 vitamin d2 and d3
 vitamin k
 water
 zinc

this list can also be accessed with datanutrients


 package maintainer author

nutritionr is written and maintained by tyler burleighhttpstylerburleighcom

a hrefhttpstwittercomintentfollowscreennametylerburleighimg srchttpsimgshieldsiotwitterfollowtylerburleighstylesociallogotwitter altfollow on twittera",nutritionr wrapper nutritionix api httpswwwnutritionixcom allow nutrit analysi food recip express natur languag requir requir nutritionix api key ' free go httpsdevelopernutritionixcom instal get start 1 instal packag devtoolsinstallgithubtylerburleighnutritionr 2 load packag set api key librarynutritionr syssetenvnutritionixappid myappid syssetenvnutritionixapikey myapikey use nutritionr thi packag ha two function 1 nutritionixlookup nutritionixlookup take natur languag food queri input send thi queri nutritionix api return list object sort nutrit inform inspect thi object ha sort inform like portion size quantiti weight brand name applic cours nutrit ' specifi portion size quantiti make assumpt see assumpt exampl let ' say want queri nutritionix hamburg chees obj nutritionixlookupa hamburg chees 2 nutrient nutrient take nutrit object return nutritionixlookup nutrient input return inform nutrient specif return name amount unit exampl let ' say want know mani calori queri hamburg chees obj nutritionixlookupa hamburg chees nutrientobj calori name 1 calori amount 1 65326 unit 1 kcal natur languag nutritionix api use natur languag process process queri usual figur food item ' refer even give complex input nonfood relat detail exampl let ' say egg toast breakfast burrito lunch use thi queri exactli obj nutritionixlookupi egg toast breakfast burrito lunch nutrientobj calori name 1 calori amount 1 5691 unit 1 kcal nutritionixlookup return list object 3 item nutrientobj calori return calori ingredi sum togeth use nutritionr recip use nutritionr lookup nutrit info recip exampl thi one favorit simpl curri recip 2 cup dri red lentil 2 tsp turmer 4 tbsp oliv oil 2 tsp cumin seed 1 small onion 2 clove garlic 2 fresh green chile 1 tsp garam masala 1 tsp ground coriand 1 tbsp fresh ginger 2 medium tomato want know nutrit thi recip take ingredi enter queri nutritionixlookup function commasepar string like thi obj nutritionixlookup2 cup red lentil 2 tsp turmer 4 tbsp oliv oil 2 tsp cumin seed 1 small onion 2 clove garlic 2 fresh green chile 1 tsp garam masala 1 tsp ground coriand 1 tbsp fresh ginger 2 medium tomato nutrientobj calori name 1 calori amount 1 2022532 unit 1 kcal let ' say want know calori per serv know mani serv recip make could divid amount return nutrient number serv obj nutritionixlookup2 cup dri red lentil 2 tsp turmer 4 tbsp oliv oil 2 tsp cumin seed 1 small onion 2 clove garlic 2 fresh green chile 1 tsp garam masala 1 tsp ground coriand 1 tbsp fresh ginger 2 medium tomato calori nutrientobj calori caloriesamount 6 1 3370887 great nutrient lookup current 68 nutrient support thi includ macronutri like fat protein carb calori also micronutri vitamin miner full list nutrient follow calcium carbohydr cholesterol calori satur fat fat tran fat iron fiber potassium sodium protein sugar vitamin alanin alcohol arginin ash aspart acid caffein caroten alpha caroten beta cholin cryptoxanthin copper cystin monosatur fat polysatur fat folat folic acid folat glutam acid glycin histidin isoleucin leucin lutein zeaxanthin lycopen lysin methionin magnesium manganes niacin phosphoru pantothen acid phenylalanin prolin retinol riboflavin selenium serin theobromin thiamin threonin vitamin e tryptophan tyrosin valin vitamin vitamin b12 vitamin b6 vitamin c vitamin d2 d3 vitamin k water zinc thi list also access datanutri packag maintain author nutritionr written maintain tyler burleighhttpstylerburleighcom hrefhttpstwittercomintentfollowscreennametylerburleighimg srchttpsimgshieldsiotwitterfollowtylerburleighstylesociallogotwitt altfollow twittera,nutritionr wrapper nutritionix api httpswwwnutritionixcom allowing nutritional analysis food recipe expressed natural language requirement requires nutritionix api key ' free go httpsdevelopernutritionixcom installation getting started 1 install package devtoolsinstallgithubtylerburleighnutritionr 2 load package set api key librarynutritionr syssetenvnutritionixappid myappid syssetenvnutritionixapikey myapikey use nutritionr package ha two function 1 nutritionixlookup nutritionixlookup take natural language food query input sends query nutritionix api return list object sort nutrition information inspect object ha sort information like portion size quantity weight brand name applicable course nutrition ' specify portion size quantity make assumption see assumption example let ' say wanted query nutritionix hamburger cheese obj nutritionixlookupa hamburger cheese 2 nutrient nutrient take nutrition object returned nutritionixlookup nutrient input return information nutrient specifically return name amount unit example let ' say wanted know many calorie query hamburger cheese obj nutritionixlookupa hamburger cheese nutrientobj calorie name 1 calorie amount 1 65326 unit 1 kcal natural language nutritionix api us natural language processing process query usually figure food item ' referring even give complex input nonfood related detail example let ' say egg toast breakfast burrito lunch use query exactly obj nutritionixlookupi egg toast breakfast burrito lunch nutrientobj calorie name 1 calorie amount 1 5691 unit 1 kcal nutritionixlookup return list object 3 item nutrientobj calorie return calorie ingredient summed together using nutritionr recipe use nutritionr lookup nutrition info recipe example one favorite simple curry recipe 2 cup dry red lentil 2 tsps turmeric 4 tbsp olive oil 2 tsps cumin seed 1 small onion 2 clove garlic 2 fresh green chile 1 tsp garam masala 1 tsp ground coriander 1 tbsp fresh ginger 2 medium tomato want know nutrition recipe take ingredient enter query nutritionixlookup function commaseparated string like obj nutritionixlookup2 cup red lentil 2 tsps turmeric 4 tbsp olive oil 2 tsps cumin seed 1 small onion 2 clove garlic 2 fresh green chile 1 tsp garam masala 1 tsp ground coriander 1 tbsp fresh ginger 2 medium tomato nutrientobj calorie name 1 calorie amount 1 2022532 unit 1 kcal let ' say want know calorie per serving know many serving recipe make could divide amount returned nutrient number serving obj nutritionixlookup2 cup dry red lentil 2 tsps turmeric 4 tbsp olive oil 2 tsps cumin seed 1 small onion 2 clove garlic 2 fresh green chile 1 tsp garam masala 1 tsp ground coriander 1 tbsp fresh ginger 2 medium tomato calorie nutrientobj calorie caloriesamount 6 1 3370887 great nutrient lookup currently 68 nutrient supported includes macronutrients like fat protein carbs calorie also micronutrient vitamin mineral full list nutrient follows calcium carbohydrate cholesterol calorie saturated fat fat trans fat iron fiber potassium sodium protein sugar vitamin alanine alcohol arginine ash aspartic acid caffeine carotene alpha carotene beta choline cryptoxanthin copper cystine monosaturated fat polysaturated fat folate folic acid folate glutamic acid glycine histidine isoleucine leucine lutein zeaxanthin lycopene lysine methionine magnesium manganese niacin phosphorus pantothenic acid phenylalanine proline retinol riboflavin selenium serine theobromine thiamin threonin vitamin e tryptophan tyrosine valine vitamin vitamin b12 vitamin b6 vitamin c vitamin d2 d3 vitamin k water zinc list also accessed datanutrients package maintainer author nutritionr written maintained tyler burleighhttpstylerburleighcom hrefhttpstwittercomintentfollowscreennametylerburleighimg srchttpsimgshieldsiotwitterfollowtylerburleighstylesociallogotwitter altfollow twittera
Python,"#Rutgers Nutritional Information Scraper

Scrapes food.rutgers.edu for menus and nutritional information, saves to file.

Official website reports wonky numbers for certain fields, so only scraping calories, serving size, and ingredients for now.

###Format
Enable indentation with the `--fancy` flag.

Use the `--dicts` flag to organize for easier random access, like so:
```
{
	'Brower Commons' : {
		'Breakfast' : [
			'CATEGORY' : [
				{
					'name' : 'ITEM NAME',
					'serving' : 'SERVING SIZE',
					'calories' : 100,
					'ingredients' : [
						'INGREDIENT1',
						'INGREDIENT2',
						...
					]
				},
				{
					...
				},
				...
			],
			...
		],
		'Lunch' : {
			...
		},
		'Dinner' : {
			...
		},
		'Knight Room' : {
			...
		}
	},
	'Busch Dining Hall' : {
		...
	},
	'Neilson Dining Hall' : {
		...
	},
	'Livingston Dining Commons' : {
		...
	}
}
```

Use without the `--dicts` flag to organize with arrays like the old food API does.
```
[
	{
		'location_name' : 'LOCATION NAME'
		'meals' : [
			{
				'meal_name' : 'MEAL NAME',
				'genres' : [
					{
						'genre_name' : 'CATEGORY NAME'
						'items' : [
							{
								'name' : 'ITEM NAME',
								'serving' : 'SERVING SIZE',
								'calories' : 100,
								'ingredients' : [
									'INGREDIENT1',
									'INGREDIENT2',
									...
								]
							},
							...
						]
					},
					...
				]
			},
			...
		]
	},
	...
]
```

###Dependencies
Python script requires package `BeautifulSoup`.","rutgers nutritional information scraper

scrapes foodrutgersedu for menus and nutritional information saves to file

official website reports wonky numbers for certain fields so only scraping calories serving size and ingredients for now

format
enable indentation with the fancy flag

use the dicts flag to organize for easier random access like so


 &#9; ' brower commons ' 
 &#9; &#9; ' breakfast ' 
 &#9; &#9; &#9; ' category ' 
 &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; ' name ' ' item name ' 
 &#9; &#9; &#9; &#9; &#9; ' serving ' ' serving size ' 
 &#9; &#9; &#9; &#9; &#9; ' calories ' 100
 &#9; &#9; &#9; &#9; &#9; ' ingredients ' 
 &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient1 ' 
 &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient2 ' 
 &#9; &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; 
 &#9; &#9; &#9; 
 &#9; &#9; 
 &#9; &#9; ' lunch ' 
 &#9; &#9; &#9; 
 &#9; &#9; 
 &#9; &#9; ' dinner ' 
 &#9; &#9; &#9; 
 &#9; &#9; 
 &#9; &#9; ' knight room ' 
 &#9; &#9; &#9; 
 &#9; &#9; 
 &#9; 
 &#9; ' busch dining hall ' 
 &#9; &#9; 
 &#9; 
 &#9; ' neilson dining hall ' 
 &#9; &#9; 
 &#9; 
 &#9; ' livingston dining commons ' 
 &#9; &#9; 
 &#9; 



use without the dicts flag to organize with arrays like the old food api does


 &#9; 
 &#9; &#9; ' locationname ' ' location name ' 
 &#9; &#9; ' meals ' 
 &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; ' mealname ' ' meal name ' 
 &#9; &#9; &#9; &#9; ' genres ' 
 &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; &#9; ' genrename ' ' category name ' 
 &#9; &#9; &#9; &#9; &#9; &#9; ' items ' 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' name ' ' item name ' 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' serving ' ' serving size ' 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' calories ' 100
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredients ' 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient1 ' 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient2 ' 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; &#9; 
 &#9; &#9; &#9; 
 &#9; &#9; &#9; 
 &#9; &#9; 
 &#9; 
 &#9; 



dependencies
python script requires package beautifulsoup",rutger nutrit inform scraper scrape foodrutgersedu menu nutrit inform save file offici websit report wonki number certain field onli scrape calori serv size ingredi format enabl indent fanci flag use dict flag organ easier random access like &#9; ' brower common ' &#9; &#9; ' breakfast ' &#9; &#9; &#9; ' categori ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' name ' ' item name ' &#9; &#9; &#9; &#9; &#9; ' serv ' ' serv size ' &#9; &#9; &#9; &#9; &#9; ' calori ' 100 &#9; &#9; &#9; &#9; &#9; ' ingredi ' &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient1 ' &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient2 ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' lunch ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' dinner ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' knight room ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' busch dine hall ' &#9; &#9; &#9; &#9; ' neilson dine hall ' &#9; &#9; &#9; &#9; ' livingston dine common ' &#9; &#9; &#9; use without dict flag organ array like old food api doe &#9; &#9; &#9; ' locationnam ' ' locat name ' &#9; &#9; ' meal ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' mealnam ' ' meal name ' &#9; &#9; &#9; &#9; ' genr ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' genrenam ' ' categori name ' &#9; &#9; &#9; &#9; &#9; &#9; ' item ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' name ' ' item name ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' serv ' ' serv size ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' calori ' 100 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredi ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient1 ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient2 ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; depend python script requir packag beautifulsoup,rutgers nutritional information scraper scrape foodrutgersedu menu nutritional information save file official website report wonky number certain field scraping calorie serving size ingredient format enable indentation fancy flag use dicts flag organize easier random access like &#9; ' brower common ' &#9; &#9; ' breakfast ' &#9; &#9; &#9; ' category ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' name ' ' item name ' &#9; &#9; &#9; &#9; &#9; ' serving ' ' serving size ' &#9; &#9; &#9; &#9; &#9; ' calorie ' 100 &#9; &#9; &#9; &#9; &#9; ' ingredient ' &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient1 ' &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient2 ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' lunch ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' dinner ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' knight room ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' busch dining hall ' &#9; &#9; &#9; &#9; ' neilson dining hall ' &#9; &#9; &#9; &#9; ' livingston dining common ' &#9; &#9; &#9; use without dicts flag organize array like old food api doe &#9; &#9; &#9; ' locationname ' ' location name ' &#9; &#9; ' meal ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' mealname ' ' meal name ' &#9; &#9; &#9; &#9; ' genre ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' genrename ' ' category name ' &#9; &#9; &#9; &#9; &#9; &#9; ' item ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' name ' ' item name ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' serving ' ' serving size ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' calorie ' 100 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient1 ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; ' ingredient2 ' &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; dependency python script requires package beautifulsoup
Swift,"# SeeNutrition
<p align = ""middle"">
    <img src=""Documentation/login.png"" alt=""login page"" width=""350""/>
    <img src=""Documentation/chicken1.png"" alt=""chicken1"" width=""350""/>
    <img src=""Documentation/chicken2.png"" alt=""chicken2"" width=""350""/>
    <img src=""Documentation/spaghetti1.png"" alt=""spaghetti1"" width=""350""/>
    <img src=""Documentation/spaghetti2.png"" alt=""spaghetti2"" width=""350""/>
    <img src=""Documentation/salad1.png"" alt=""salad1"" width=""350""/>
    <img src=""Documentation/salad2.png"" alt=""salad2"" width=""350""/>
</p>

SeeNutrition is a machine learning food app. Inspired by the classic app from the TV show Silicon Valley, It can not only classify ""hotdog and not hotdog"", but also find out the name of food in the photo you take, and display its nutrition information. </br>

It utilizes Google's image regnition services and its pre-trained neural net, and gets the nutrition data from Nutritionix api. It uses Firebase as backend for user registration and login.</br>

Download on App Store today!

","seenutrition
p align middle
 img srcdocumentationloginpng altlogin page width350
 img srcdocumentationchicken1png altchicken1 width350
 img srcdocumentationchicken2png altchicken2 width350
 img srcdocumentationspaghetti1png altspaghetti1 width350
 img srcdocumentationspaghetti2png altspaghetti2 width350
 img srcdocumentationsalad1png altsalad1 width350
 img srcdocumentationsalad2png altsalad2 width350
p

seenutrition is a machine learning food app inspired by the classic app from the tv show silicon valley it can not only classify hotdog and not hotdog but also find out the name of food in the photo you take and display its nutrition information br

it utilizes google ' s image regnition services and its pretrained neural net and gets the nutrition data from nutritionix api it uses firebase as backend for user registration and loginbr

download on app store today",seenutrit p align middl img srcdocumentationloginpng altlogin page width350 img srcdocumentationchicken1png altchicken1 width350 img srcdocumentationchicken2png altchicken2 width350 img srcdocumentationspaghetti1png altspaghetti1 width350 img srcdocumentationspaghetti2png altspaghetti2 width350 img srcdocumentationsalad1png altsalad1 width350 img srcdocumentationsalad2png altsalad2 width350 p seenutrit machin learn food app inspir classic app tv show silicon valley onli classifi hotdog hotdog also find name food photo take display nutrit inform br util googl ' imag regnit servic pretrain neural net get nutrit data nutritionix api use firebas backend user registr loginbr download app store today,seenutrition p align middle img srcdocumentationloginpng altlogin page width350 img srcdocumentationchicken1png altchicken1 width350 img srcdocumentationchicken2png altchicken2 width350 img srcdocumentationspaghetti1png altspaghetti1 width350 img srcdocumentationspaghetti2png altspaghetti2 width350 img srcdocumentationsalad1png altsalad1 width350 img srcdocumentationsalad2png altsalad2 width350 p seenutrition machine learning food app inspired classic app tv show silicon valley classify hotdog hotdog also find name food photo take display nutrition information br utilizes google ' image regnition service pretrained neural net get nutrition data nutritionix api us firebase backend user registration loginbr download app store today
JavaScript,"![logo_ironhack_blue 7](https://user-images.githubusercontent.com/23629340/40541063-a07a0a8a-601a-11e8-91b5-2f13e4e6b441.png)

# LAB | React IronNutrition

## Introduction

You just realized that since the beginning of the bootcamp, your diet is not healthy and it may have an impact on your health (and productivity), now and in the long term.

To take care of the food you eat, you decided to create a nutrition app that will track everything you eat!

![](https://media.giphy.com/media/fH0dyqpPJRvTbiF5rJ/giphy.gif)

## Setup

- Fork this repo
- Clone this repo

```shell
$ cd lab-react-ironnutrution
$ npm install
$ npm start
```

## Submission

- Upon completion, run the following commands:

  ```
  git add .
  git commit -m ""done""
  git push origin master
  ```

- Create Pull Request so your TAs can check up your work.

## Instructions

### Iteration 0 | Setup

#### Bulma installation

We will use [Bulma](https://bulma.io/) for the design :)

```sh
$ npm install bulma --save
```

```javascript
import 'bulma/css/bulma.css';
```

#### Import a JSON

Import the foods from the `foods.json`.

```js
import foods from './foods.json';
```

#### About the design

If you struggle with the design, you can find a static example of what is expected inside file `style-guides.html`.

So let's start!

### Iteration 1 | Create `FoodBox` component

Create a `FoodBox` component that takes at least `food` as a prop and displays a box with all the information about an ingredient.

You can use this HTML snippet to display properly the `FoodBox`:

```html
<div className=""box"">
  <article className=""media"">
    <div className=""media-left"">
      <figure className=""image is-64x64"">
        <img src=""https://i.imgur.com/eTmWoAN.png"" />
      </figure>
    </div>
    <div className=""media-content"">
      <div className=""content"">
        <p>
          <strong>Pizza</strong> <br />
          <small>400 cal</small>
        </p>
      </div>
    </div>
    <div className=""media-right"">
      <div className=""field has-addons"">
        <div className=""control"">
          <input className=""input"" type=""number"" value=""1"" />
        </div>
        <div className=""control"">
          <button className=""button is-info"">
            +
          </button>
        </div>
      </div>
    </div>
  </article>
</div>
```

![](https://i.imgur.com/bY9i5Rw.png)

### Iteration 2 | Display food

In your `App` component (your main component), display as many `FoodBox` as elements inside the variable `foods`.

![](https://i.imgur.com/3TVQJDO.png)

### Iteration 3 | Add new food

Create a button to add new foods.

When a user clicks the button, a form will appear with fields for a name, number of calories, and an image.

When the user clicks submit, the food will be added to the list.

The form should disappear when the user clicks the submit button.

### Iteration 4 | Implement search bar

Create a `Search` component to perform a search that updates the list of all meal.

![](https://i.imgur.com/XaOpAx8.png)

### Iteration 5 | Create add buttons

On your `FoodBox`, you have an input an ""+"" button. Use them so that when a user clicks on the button, it adds them on a list on the right called ""_Today's foods_"".

You will also need to display the total amount of calories at the bottom of the list as a recap.

![](https://media.giphy.com/media/fH0dyqpPJRvTbiF5rJ/giphy.gif)

If you don't remember how to create responsive columns with Bulma, you can check the [documentation](https://bulma.io/documentation/columns/basics/).

### Iteration 6 | Bonus | Group ingredients

You made an awesome application, but you have found a little problem in the UX. For example, if you click twice on ""Pizza"", it will display 2 lines ""_1 Pizza = 400 cal_"" instead of 1 line ""_2 Pizza = 800 cal_"". Fix that problem.

### Iteration 7 | Bonus | Allow the user to remove an ingredient

On the ""_Today's food_"", add a trash icon to let users removing one of their items.

Happy coding! :heart:
","logoironhackblue 7httpsuserimagesgithubusercontentcom2362934040541063a07a0a8a601a11e891b52f13e4e6b441png

 lab react ironnutrition

 introduction

you just realized that since the beginning of the bootcamp your diet is not healthy and it may have an impact on your health and productivity now and in the long term

to take care of the food you eat you decided to create a nutrition app that will track everything you eat

httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif

 setup

 fork this repo
 clone this repo

shell
 cd labreactironnutrution
 npm install
 npm start


 submission

 upon completion run the following commands

 
 git add 
 git commit m done
 git push origin master
 

 create pull request so your tas can check up your work

 instructions

 iteration 0 setup

 bulma installation

we will use bulmahttpsbulmaio for the design 

sh
 npm install bulma save


javascript
import ' bulmacssbulmacss ' 


 import a json

import the foods from the foodsjson

js
import foods from ' foodsjson ' 


 about the design

if you struggle with the design you can find a static example of what is expected inside file styleguideshtml

so let ' s start

 iteration 1 create foodbox component

create a foodbox component that takes at least food as a prop and displays a box with all the information about an ingredient

you can use this html snippet to display properly the foodbox

html
div classnamebox
 article classnamemedia
 div classnamemedialeft
 figure classnameimage is64x64
 img srchttpsiimgurcometmwoanpng 
 figure
 div
 div classnamemediacontent
 div classnamecontent
 p
 strongpizzastrong br 
 small400 calsmall
 p
 div
 div
 div classnamemediaright
 div classnamefield hasaddons
 div classnamecontrol
 input classnameinput typenumber value1 
 div
 div classnamecontrol
 button classnamebutton isinfo
 
 button
 div
 div
 div
 article
div


httpsiimgurcomby9i5rwpng

 iteration 2 display food

in your app component your main component display as many foodbox as elements inside the variable foods

httpsiimgurcom3tvqjdopng

 iteration 3 add new food

create a button to add new foods

when a user clicks the button a form will appear with fields for a name number of calories and an image

when the user clicks submit the food will be added to the list

the form should disappear when the user clicks the submit button

 iteration 4 implement search bar

create a search component to perform a search that updates the list of all meal

httpsiimgurcomxaopax8png

 iteration 5 create add buttons

on your foodbox you have an input an button use them so that when a user clicks on the button it adds them on a list on the right called today ' s foods

you will also need to display the total amount of calories at the bottom of the list as a recap

httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif

if you don ' t remember how to create responsive columns with bulma you can check the documentationhttpsbulmaiodocumentationcolumnsbasics

 iteration 6 bonus group ingredients

you made an awesome application but you have found a little problem in the ux for example if you click twice on pizza it will display 2 lines 1 pizza 400 cal instead of 1 line 2 pizza 800 cal fix that problem

 iteration 7 bonus allow the user to remove an ingredient

on the today ' s food add a trash icon to let users removing one of their items

happy coding heart",logoironhackblu 7httpsuserimagesgithubusercontentcom2362934040541063a07a0a8a601a11e891b52f13e4e6b441png lab react ironnutrit introduct realiz sinc begin bootcamp diet healthi may impact health product long term take care food eat decid creat nutrit app track everyth eat httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif setup fork thi repo clone thi repo shell cd labreactironnutrut npm instal npm start submiss upon complet run follow command git add git commit done git push origin master creat pull request ta check work instruct iter 0 setup bulma instal use bulmahttpsbulmaio design sh npm instal bulma save javascript import ' bulmacssbulmacss ' import json import food foodsjson js import food ' foodsjson ' design struggl design find static exampl expect insid file styleguideshtml let ' start iter 1 creat foodbox compon creat foodbox compon take least food prop display box inform ingredi use thi html snippet display properli foodbox html div classnamebox articl classnamemedia div classnamemedialeft figur classnameimag is64x64 img srchttpsiimgurcometmwoanpng figur div div classnamemediacont div classnamecont p strongpizzastrong br small400 calsmal p div div div classnamemediaright div classnamefield hasaddon div classnamecontrol input classnameinput typenumb value1 div div classnamecontrol button classnamebutton isinfo button div div div articl div httpsiimgurcomby9i5rwpng iter 2 display food app compon main compon display mani foodbox element insid variabl food httpsiimgurcom3tvqjdopng iter 3 add new food creat button add new food user click button form appear field name number calori imag user click submit food ad list form disappear user click submit button iter 4 implement search bar creat search compon perform search updat list meal httpsiimgurcomxaopax8png iter 5 creat add button foodbox input button use user click button add list right call today ' food also need display total amount calori bottom list recap httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif ' rememb creat respons column bulma check documentationhttpsbulmaiodocumentationcolumnsbas iter 6 bonu group ingredi made awesom applic found littl problem ux exampl click twice pizza display 2 line 1 pizza 400 cal instead 1 line 2 pizza 800 cal fix problem iter 7 bonu allow user remov ingredi today ' food add trash icon let user remov one item happi code heart,logoironhackblue 7httpsuserimagesgithubusercontentcom2362934040541063a07a0a8a601a11e891b52f13e4e6b441png lab react ironnutrition introduction realized since beginning bootcamp diet healthy may impact health productivity long term take care food eat decided create nutrition app track everything eat httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif setup fork repo clone repo shell cd labreactironnutrution npm install npm start submission upon completion run following command git add git commit done git push origin master create pull request ta check work instruction iteration 0 setup bulma installation use bulmahttpsbulmaio design sh npm install bulma save javascript import ' bulmacssbulmacss ' import json import food foodsjson j import food ' foodsjson ' design struggle design find static example expected inside file styleguideshtml let ' start iteration 1 create foodbox component create foodbox component take least food prop display box information ingredient use html snippet display properly foodbox html div classnamebox article classnamemedia div classnamemedialeft figure classnameimage is64x64 img srchttpsiimgurcometmwoanpng figure div div classnamemediacontent div classnamecontent p strongpizzastrong br small400 calsmall p div div div classnamemediaright div classnamefield hasaddons div classnamecontrol input classnameinput typenumber value1 div div classnamecontrol button classnamebutton isinfo button div div div article div httpsiimgurcomby9i5rwpng iteration 2 display food app component main component display many foodbox element inside variable food httpsiimgurcom3tvqjdopng iteration 3 add new food create button add new food user click button form appear field name number calorie image user click submit food added list form disappear user click submit button iteration 4 implement search bar create search component perform search update list meal httpsiimgurcomxaopax8png iteration 5 create add button foodbox input button use user click button add list right called today ' food also need display total amount calorie bottom list recap httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif ' remember create responsive column bulma check documentationhttpsbulmaiodocumentationcolumnsbasics iteration 6 bonus group ingredient made awesome application found little problem ux example click twice pizza display 2 line 1 pizza 400 cal instead 1 line 2 pizza 800 cal fix problem iteration 7 bonus allow user remove ingredient today ' food add trash icon let user removing one item happy coding heart
Java,"# WhatTheFood (Android)

Training Dataset:
1. Apple (200 images)
2. Orange (200 images)
3. Salak (100 images)
4. Mangosteen (100 images)
5. Banana (200 images)
","whatthefood android

training dataset
1 apple 200 images
2 orange 200 images
3 salak 100 images
4 mangosteen 100 images
5 banana 200 images",whatthefood android train dataset 1 appl 200 imag 2 orang 200 imag 3 salak 100 imag 4 mangosteen 100 imag 5 banana 200 imag,whatthefood android training dataset 1 apple 200 image 2 orange 200 image 3 salak 100 image 4 mangosteen 100 image 5 banana 200 image
Kotlin,"![ScreenShoot Apps](https://raw.githubusercontent.com/amirisback/nutrition-framework/master/docs/image/banner.png?raw=true)

## About This Project (release-and-work-in-progress 👷🔧️👷‍♀️⛏)
[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-nutrition--framework-brightgreen.svg?style=flat-square)](https://android-arsenal.com/details/1/8370)
[![JitPack](https://jitpack.io/v/amirisback/nutrition-framework.svg?style=flat-square)](https://jitpack.io/#amirisback/nutrition-framework)
- Generator Aplikasi MicroNutrient
- Pengembang Framework untuk Membuat Aplikasi Seputar Permasalahan Gizi berbasis Platform Android
- General Framework for Application Development Around Nutrition Using the Android Platform, Skripsi S1 Muhammad Faisal Amir from Telkom University
- Privacy Policy [Click Here](https://github.com/amirisback/nutrition-framework/blob/master/PRIVACY-POLICY.md)

## Version Release
This Is Latest Release

    ~ Beta Release
    $version_release = 1.0.0

What's New??

    * Multi Platform Library *
    * Compose UI Multi Platform *
    * Update Compose Component *
    * List Item Compose Desktop and Android *
    * Grid Item Compose Desktop and Android *
    * Vitamin Function *
    * NutriRecyclerView Update *

## Screen Shoot Apps - Android

| SS 1 | SS 2 | SS 3 | SS 4 |
|:----:|:----:|:----:|:----:|
|<img width=""200px"" height=""360px"" src=""https://raw.githubusercontent.com/amirisback/nutrition-framework/master/docs/image/ss/ss-1.png""> | <img width=""200px"" height=""360px"" src=""https://raw.githubusercontent.com/amirisback/nutrition-framework/master/docs/image/ss/ss-2.png""> | <img width=""200px"" height=""360px"" src=""https://raw.githubusercontent.com/amirisback/nutrition-framework/master/docs/image/ss/ss-3.png""> | <img width=""200px"" height=""360px"" src=""https://raw.githubusercontent.com/amirisback/nutrition-framework/master/docs/image/ss/ss-4.png""> |

## Download this project

### Step 1. Add the JitPack repository to your build file (build.gradle : Project / Root)

#### <Option 1> Groovy Gradle (build.gradle)

    // Add it in your root build.gradle at the end of repositories:

    allprojects {
        repositories {
            ...
            maven { url 'https://jitpack.io' }
        }
    }

#### <Option 2> Kotlin DSL Gradle (build.gradle.kts / settings.gradle.kts)

```kotlin
// Add it in your root build.gradle.kts at the end of repositories:

allprojects {
    repositories {
        ...
        maven { url = uri(""https://jitpack.io"") }
    }
}
```

### Step 2. Add the dependency (build.gradle : Module)

#### <Option 1> Groovy Gradle (build.gradle)

    dependencies {
        // library nutrition-framework
        implementation 'com.github.amirisback:nutrition-framework:1.0.0'
    }

#### <Option 2> Kotlin DSL Gradle (build.gradle.kts)

    dependencies {
        // library nutrition-framework
        implementation(""com.github.amirisback:nutrition-framework:1.0.0"")
    }

## Application Framework
![ScreenShoot Apps](docs/image/skeleton-component.png?raw=true)

## User Manual Protocol
- How To Generate New Project [Klik Disini](https://github.com/amirisback/nutrition-framework/wiki/How-To-Generate-New-Project)
- How To Start Project [Klik Disini](https://github.com/amirisback/nutrition-framework/wiki/How-To-Start)
- Android Library Implementation [Klik Disini](https://github.com/amirisback/nutrition-framework/wiki/Implementasi-Code-Framework-Android-Library)
- Desktop Library Implementation [Klik Disini](https://github.com/amirisback/nutrition-framework/wiki/Implementasi-Code-Framework-Desktop-Library)

## Test Case Framework
- Scenario Test [Click Here](https://github.com/amirisback/nutrition-framework/tree/master/docs/scenario-test)
- Report All Test [Click Here](https://github.com/amirisback/nutrition-framework/blob/master/docs/scenario-test/report-profiler-test.xlsx?raw=true)
- Android
    - Test Case Android [nf-testcase-app-consume-library](https://github.com/amirisback/nf-testcase-app-consume-library)
    - Test Case Android [nf-testcase-app-no-framework](https://github.com/amirisback/nf-testcase-app-no-framework)
    - Test Case Android [nf-testcase-googlesample](https://github.com/amirisback/nf-testcase-googlesample)
    - Test Case Android [nf-testcase-googlesample-consume-library](https://github.com/amirisback/nf-testcase-googlesample-consume-library)
- Desktop
    - Test Case Desktop [nutrition-framework-desktop](https://github.com/amirisback/nutrition-framework-desktop)

## Documentation

### Research Data
- Image [Click Here](https://github.com/amirisback/nutrition-framework/tree/master/docs/image)
- Proposal [Click Here](https://github.com/amirisback/nutrition-framework/tree/master/docs/proposal)
- Guidance [Click Here](https://github.com/amirisback/nutrition-framework/tree/master/docs/bimbingan)
- Journal List [Click Here](https://github.com/amirisback/nutrition-framework/tree/master/docs/journal)
- Design on Figma [Click Here](https://www.figma.com/file/Ons8XY0YvxecwC71Aa92Qj/TA?node-id=0%3A1)
- Sheet Feedback [Click Here](https://docs.google.com/spreadsheets/d/1P8U2lu8odQJwLPD3QiSJGJXAgocdc_H5j7PdT23lPZc/edit#gid=0)
- Diagram on Draw Io [Click Here](https://drive.google.com/file/d/1OCsoqVV3UYnLxpUK9jYm2yNjcFj9sUPP/view?usp=sharing)
- Research Nutrition Apps [Click Here](https://docs.google.com/spreadsheets/d/1t0aWoMrBEVfeZTIV438V8P0YMeGUK2VV_HHC7qnZUtU/edit?usp=sharing)

### Final Task (Tugas Akhir)
- Important Document [Click Here](https://github.com/amirisback/nutrition-framework/tree/master/docs/pengganti-sidang)
- Final Task Journal [Click Here](https://github.com/amirisback/nutrition-framework/raw/master/docs/pengganti-sidang/Muhammad%20Faisal%20Amir_1301198497_TUGAS_AKHIR.docx)
- HKI Certificate [Click Here](https://github.com/amirisback/nutrition-framework/blob/master/docs/pengganti-sidang/hki-license/HCAP1512210222_ki_file_cert.pdf)
- HKI Link URL [Click Here](https://pdki-indonesia.dgip.go.id/detail/EC00202180905?type=copyright&keyword=generator+aplikasi+micronutrient)
- Slide Presentasi [Click Here](https://docs.google.com/presentation/d/12kmmpXcHClVqapPHyhkMgV1aC2vENhD6EjkcO2tIvfM/edit?usp=sharing)

## Telkom University Lecturers
- DAS - Dana Sulistyo Kusumo, S.T., M.T., PhD. (NIP. 02780011) - danakusumo@telkomuniversity.ac.id
- SYP - Shinta Yulia Puspitasari, S.T., M.T. (NIP. 13880046)- shintayulia@telkomuniversity.ac.id
- HMT - Hasmawati, S.Kom., M. Kom. (NIP. 15900049)

## Screen Shoot Apps - Desktop
![ScreenShoot Apps](docs/image/ss/ss-desktop.png?raw=true)

## Architecture
-   Pattern  [Model-View-ViewModel](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel)  (MVVM) facilitating a [separation](https://en.wikipedia.org/wiki/Separation_of_concerns) of development of the graphical user interface.
-   [S.O.L.I.D](https://en.wikipedia.org/wiki/SOLID)  design principles intended to make software designs more understandable, flexible and maintainable.

## Tech-stack
Min API level is set to 21, so the presented approach is suitable for over 94% of devices running Android. This project takes advantage of many popular libraries and tools of the Android ecosystem. Most of the libraries are in the stable version unless there is a good reason to use non-stable dependency.
-   [Jetpack](https://developer.android.com/jetpack):
    -   [Android KTX](https://developer.android.com/kotlin/ktx.html)  - provide concise, idiomatic Kotlin to Jetpack and Android platform APIs.
    -   [AndroidX](https://developer.android.com/jetpack/androidx)  - major improvement to the original Android  [Support Library](https://developer.android.com/topic/libraries/support-library/index), which is no longer maintained.
    -   [View Binding](https://developer.android.com/topic/libraries/view-binding)  - allows you to more easily write code that interacts with views/
    -   [Lifecycle](https://developer.android.com/topic/libraries/architecture/lifecycle)  - perform actions in response to a change in the lifecycle status of another component, such as activities and fragments.
    -   [LiveData](https://developer.android.com/topic/libraries/architecture/livedata)  - lifecycle-aware, meaning it respects the lifecycle of other app components, such as activities, fragments, or services.
    -   [Navigation](https://developer.android.com/guide/navigation/)  - helps you implement navigation, from simple button clicks to more complex patterns, such as app bars and the navigation drawer.
    -   [Room](https://developer.android.com/topic/libraries/architecture/room)  - persistence library provides an abstraction layer over SQLite to allow for more robust database access while harnessing the full power of SQLite.
    -   [ViewModel](https://developer.android.com/topic/libraries/architecture/viewmodel)  - designed to store and manage UI-related data in a lifecycle conscious way. The ViewModel class allows data to survive configuration changes such as screen rotations.
-   [Coroutines](https://kotlinlang.org/docs/reference/coroutines-overview.html)  - managing background threads with simplified code and reducing needs for callbacks.
-   [Coroutines Flow](https://kotlinlang.org/docs/reference/coroutines-overview.html)  - cold asynchronous data stream that sequentially emits values and completes normally or with an exception
-   [Dagger2](https://dagger.dev/)  - dependency injector for replacement all Factory classes.
-   [Retrofit](https://square.github.io/retrofit/)  - type-safe HTTP client.
-   [Glide](https://github.com/bumptech/glide)  - image loading and caching library
-   [Compose](https://www.jetbrains.com/lp/compose/) - Compose for Desktop simplifies and accelerates UI development for desktop applications, and allows extensive UI code sharing between Android and desktop applications. Currently in alpha.
-   [Coil](https://coil-kt.github.io/coil/) - Coroutine Image Loader

## Inpiration


<table>
    <tr>
        <th>No.</th>
        <th>Github Name / Organization</th>
        <th>Github Project</th>
    </tr>
    <tr>
        <td>1.</td>
        <td><a href=""https://github.com/amirisback"">Muhammad Faisal Amir</a></td>
        <td><a href=""https://github.com/amirisback/frogo-log"">frogo-log</a></td>
    </tr>
    <tr>
        <td>2.</td>
        <td><a href=""https://github.com/amirisback"">Muhammad Faisal Amir</a></td>
        <td><a href=""https://github.com/amirisback/frogo-admob"">frogo-admob</a></td>
    </tr>
    <tr>
        <td>3.</td>
        <td><a href=""https://github.com/amirisback"">Muhammad Faisal Amir</a></td>
        <td><a href=""https://github.com/amirisback/frogo-recycler-view"">frogo-recycler-view</a></td>
    </tr>
    <tr>
        <td>4.</td>
        <td><a href=""https://github.com/amirisback"">Muhammad Faisal Amir</a></td>
        <td><a href=""https://github.com/amirisback/frogo-notification"">frogo-notification</a></td>
    </tr>
    <tr>
        <td>5.</td>
        <td><a href=""https://github.com/amirisback"">Muhammad Faisal Amir</a></td>
        <td><a href=""https://github.com/amirisback/android-kick-start"">android-kick-start</a></td>
    </tr>
    <tr>
        <td>6.</td>
        <td><a href=""https://github.com/amirisback"">Muhammad Faisal Amir</a></td>
        <td><a href=""https://github.com/amirisback/android-kick-start-modular"">android-kick-start-modular</a></td>
    </tr>
    <tr>
        <td>7.</td>
        <td><a href=""https://github.com/amirisback"">Muhammad Faisal Amir</a></td>
        <td><a href=""https://github.com/amirisback/desktop-experimental-catalgoue"">desktop-experimental-catalgoue</a></td>
    </tr>
    <tr>
        <td>8.</td>
        <td><a href=""https://github.com/amirisback"">Muhammad Faisal Amir</a></td>
        <td><a href=""https://github.com/amirisback/jitpack-library-kotlin-dsl-guide"">jitpack-library-kotlin-dsl-guide</a></td>
    </tr>
    <tr>
        <td>9.</td>
        <td><a href=""https://github.com/frogobox"">Frogobox</a></td>
        <td><a href=""https://github.com/frogobox/frogo-android-sdk"">frogo-android-sdk</a></td>
    </tr>
    <tr>
        <td>10.</td>
        <td><a href=""https://github.com/frogobox"">Frogobox</a></td>
        <td><a href=""https://github.com/frogobox/frogo-android-ui-kit"">frogo-android-ui-kit</a></td>
    </tr>
    <tr>
        <td>11.</td>
        <td><a href=""https://github.com/frogobox"">Frogobox</a></td>
        <td><a href=""https://github.com/frogobox/frogo-consume-api"">frogo-consume-api</a></td>
    </tr>
    <tr>
        <td>12.</td>
        <td><a href=""https://github.com/nazmulidris"">Nazmul Idris</a></td>
        <td><a href=""https://github.com/nazmulidris/color-console"">color-console</a></td>
    </tr>
    <tr>
        <td>13.</td>
        <td><a href=""https://github.com/aclassen"">Andre Claßen</a></td>
        <td><a href=""https://github.com/aclassen/ComposeReorderable"">ComposeReorderable</a></td>
    </tr>
    <tr>
        <td>14.</td>
        <td><a href=""https://github.com/Gurupreet"">Gurupreet Singh</a></td>
        <td><a href=""https://github.com/Gurupreet/ComposeCookBook"">ComposeCookBook</a></td>
    </tr>
    <tr>
        <td>15.</td>
        <td><a href=""https://github.com/joreilly"">John O'Reilly</a></td>
        <td><a href=""https://github.com/joreilly/PeopleInSpace"">PeopleInSpace</a></td>
    </tr>
</table>

## Colaborator
Name Of Contribute
- Dana Sulistyo Kusumo, S.T., M.T., PhD. - danakusumo@telkomuniversity.ac.id
- Shinta Yulia Puspitasari, S.T., M.T. - shintayulia@telkomuniversity.ac.id
- Muhammad Faisal Amir - faisalamircs@telkomuniversity.ac.id

## Attention !!!
- Please enjoy and don't forget fork and give a star
- Don't Forget Follow My Github Account

## Mad Score Card
![Mad Score](docs/image/mad_score.png?raw=true)

## Profiler
![Profiler](docs/image/profiler.png?raw=true)

## HKI Certificate
![HKI Certificate](docs/image/hki-certificate.png?raw=true)
","screenshoot appshttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagebannerpngrawtrue

 about this project releaseandworkinprogress 
android arsenalhttpsimgshieldsiobadgeandroid20arsenalnutritionframeworkbrightgreensvgstyleflatsquarehttpsandroidarsenalcomdetails18370
jitpackhttpsjitpackiovamirisbacknutritionframeworksvgstyleflatsquarehttpsjitpackioamirisbacknutritionframework
 generator aplikasi micronutrient
 pengembang framework untuk membuat aplikasi seputar permasalahan gizi berbasis platform android
 general framework for application development around nutrition using the android platform skripsi s1 muhammad faisal amir from telkom university
 privacy policy click herehttpsgithubcomamirisbacknutritionframeworkblobmasterprivacypolicymd

 version release
this is latest release

 beta release
 versionrelease 100

what ' s new

 multi platform library 
 compose ui multi platform 
 update compose component 
 list item compose desktop and android 
 grid item compose desktop and android 
 vitamin function 
 nutrirecyclerview update 

 screen shoot apps android

 ss 1 ss 2 ss 3 ss 4 

img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss1png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss2png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss3png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss4png 

 download this project

 step 1 add the jitpack repository to your build file buildgradle project root

 option 1 groovy gradle buildgradle

 add it in your root buildgradle at the end of repositories

 allprojects 
 repositories 
 
 maven url ' httpsjitpackio ' 
 
 

 option 2 kotlin dsl gradle buildgradlekts settingsgradlekts

kotlin
 add it in your root buildgradlekts at the end of repositories

allprojects 
 repositories 
 
 maven url urihttpsjitpackio 
 



 step 2 add the dependency buildgradle module

 option 1 groovy gradle buildgradle

 dependencies 
 library nutritionframework
 implementation ' comgithubamirisbacknutritionframework100 ' 
 

 option 2 kotlin dsl gradle buildgradlekts

 dependencies 
 library nutritionframework
 implementationcomgithubamirisbacknutritionframework100
 

 application framework
screenshoot appsdocsimageskeletoncomponentpngrawtrue

 user manual protocol
 how to generate new project klik disinihttpsgithubcomamirisbacknutritionframeworkwikihowtogeneratenewproject
 how to start project klik disinihttpsgithubcomamirisbacknutritionframeworkwikihowtostart
 android library implementation klik disinihttpsgithubcomamirisbacknutritionframeworkwikiimplementasicodeframeworkandroidlibrary
 desktop library implementation klik disinihttpsgithubcomamirisbacknutritionframeworkwikiimplementasicodeframeworkdesktoplibrary

 test case framework
 scenario test click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsscenariotest
 report all test click herehttpsgithubcomamirisbacknutritionframeworkblobmasterdocsscenariotestreportprofilertestxlsxrawtrue
 android
 test case android nftestcaseappconsumelibraryhttpsgithubcomamirisbacknftestcaseappconsumelibrary
 test case android nftestcaseappnoframeworkhttpsgithubcomamirisbacknftestcaseappnoframework
 test case android nftestcasegooglesamplehttpsgithubcomamirisbacknftestcasegooglesample
 test case android nftestcasegooglesampleconsumelibraryhttpsgithubcomamirisbacknftestcasegooglesampleconsumelibrary
 desktop
 test case desktop nutritionframeworkdesktophttpsgithubcomamirisbacknutritionframeworkdesktop

 documentation

 research data
 image click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsimage
 proposal click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsproposal
 guidance click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsbimbingan
 journal list click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsjournal
 design on figma click herehttpswwwfigmacomfileons8xy0yvxecwc71aa92qjtanodeid03a1
 sheet feedback click herehttpsdocsgooglecomspreadsheetsd1p8u2lu8odqjwlpd3qisjgjxagocdch5j7pdt23lpzceditgid0
 diagram on draw io click herehttpsdrivegooglecomfiled1ocsoqvv3uynlxpuk9jym2ynjcfj9suppviewuspsharing
 research nutrition apps click herehttpsdocsgooglecomspreadsheetsd1t0awomrbevfeztiv438v8p0ymeguk2vvhhc7qnzutuedituspsharing

 final task tugas akhir
 important document click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocspenggantisidang
 final task journal click herehttpsgithubcomamirisbacknutritionframeworkrawmasterdocspenggantisidangmuhammad20faisal20amir1301198497tugasakhirdocx
 hki certificate click herehttpsgithubcomamirisbacknutritionframeworkblobmasterdocspenggantisidanghkilicensehcap1512210222kifilecertpdf
 hki link url click herehttpspdkiindonesiadgipgoiddetailec00202180905typecopyrightkeywordgeneratoraplikasimicronutrient
 slide presentasi click herehttpsdocsgooglecompresentationd12kmmpxchclvqapphyhkmgv1ac2venhd6ejkco2tivfmedituspsharing

 telkom university lecturers
 das dana sulistyo kusumo st mt phd nip 02780011 danakusumotelkomuniversityacid
 syp shinta yulia puspitasari st mt nip 13880046 shintayuliatelkomuniversityacid
 hmt hasmawati skom m kom nip 15900049

 screen shoot apps desktop
screenshoot appsdocsimagessssdesktoppngrawtrue

 architecture
 pattern modelviewviewmodelhttpsenwikipediaorgwikimodele28093viewe28093viewmodel mvvm facilitating a separationhttpsenwikipediaorgwikiseparationofconcerns of development of the graphical user interface
 solidhttpsenwikipediaorgwikisolid design principles intended to make software designs more understandable flexible and maintainable

 techstack
min api level is set to 21 so the presented approach is suitable for over 94 of devices running android this project takes advantage of many popular libraries and tools of the android ecosystem most of the libraries are in the stable version unless there is a good reason to use nonstable dependency
 jetpackhttpsdeveloperandroidcomjetpack
 android ktxhttpsdeveloperandroidcomkotlinktxhtml provide concise idiomatic kotlin to jetpack and android platform apis
 androidxhttpsdeveloperandroidcomjetpackandroidx major improvement to the original android support libraryhttpsdeveloperandroidcomtopiclibrariessupportlibraryindex which is no longer maintained
 view bindinghttpsdeveloperandroidcomtopiclibrariesviewbinding allows you to more easily write code that interacts with views
 lifecyclehttpsdeveloperandroidcomtopiclibrariesarchitecturelifecycle perform actions in response to a change in the lifecycle status of another component such as activities and fragments
 livedatahttpsdeveloperandroidcomtopiclibrariesarchitecturelivedata lifecycleaware meaning it respects the lifecycle of other app components such as activities fragments or services
 navigationhttpsdeveloperandroidcomguidenavigation helps you implement navigation from simple button clicks to more complex patterns such as app bars and the navigation drawer
 roomhttpsdeveloperandroidcomtopiclibrariesarchitectureroom persistence library provides an abstraction layer over sqlite to allow for more robust database access while harnessing the full power of sqlite
 viewmodelhttpsdeveloperandroidcomtopiclibrariesarchitectureviewmodel designed to store and manage uirelated data in a lifecycle conscious way the viewmodel class allows data to survive configuration changes such as screen rotations
 coroutineshttpskotlinlangorgdocsreferencecoroutinesoverviewhtml managing background threads with simplified code and reducing needs for callbacks
 coroutines flowhttpskotlinlangorgdocsreferencecoroutinesoverviewhtml cold asynchronous data stream that sequentially emits values and completes normally or with an exception
 dagger2httpsdaggerdev dependency injector for replacement all factory classes
 retrofithttpssquaregithubioretrofit typesafe http client
 glidehttpsgithubcombumptechglide image loading and caching library
 composehttpswwwjetbrainscomlpcompose compose for desktop simplifies and accelerates ui development for desktop applications and allows extensive ui code sharing between android and desktop applications currently in alpha
 coilhttpscoilktgithubiocoil coroutine image loader

 inpiration


table
 tr
 thnoth
 thgithub name organizationth
 thgithub projectth
 tr
 tr
 td1td
 tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd
 tda hrefhttpsgithubcomamirisbackfrogologfrogologatd
 tr
 tr
 td2td
 tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd
 tda hrefhttpsgithubcomamirisbackfrogoadmobfrogoadmobatd
 tr
 tr
 td3td
 tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd
 tda hrefhttpsgithubcomamirisbackfrogorecyclerviewfrogorecyclerviewatd
 tr
 tr
 td4td
 tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd
 tda hrefhttpsgithubcomamirisbackfrogonotificationfrogonotificationatd
 tr
 tr
 td5td
 tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd
 tda hrefhttpsgithubcomamirisbackandroidkickstartandroidkickstartatd
 tr
 tr
 td6td
 tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd
 tda hrefhttpsgithubcomamirisbackandroidkickstartmodularandroidkickstartmodularatd
 tr
 tr
 td7td
 tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd
 tda hrefhttpsgithubcomamirisbackdesktopexperimentalcatalgouedesktopexperimentalcatalgoueatd
 tr
 tr
 td8td
 tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd
 tda hrefhttpsgithubcomamirisbackjitpacklibrarykotlindslguidejitpacklibrarykotlindslguideatd
 tr
 tr
 td9td
 tda hrefhttpsgithubcomfrogoboxfrogoboxatd
 tda hrefhttpsgithubcomfrogoboxfrogoandroidsdkfrogoandroidsdkatd
 tr
 tr
 td10td
 tda hrefhttpsgithubcomfrogoboxfrogoboxatd
 tda hrefhttpsgithubcomfrogoboxfrogoandroiduikitfrogoandroiduikitatd
 tr
 tr
 td11td
 tda hrefhttpsgithubcomfrogoboxfrogoboxatd
 tda hrefhttpsgithubcomfrogoboxfrogoconsumeapifrogoconsumeapiatd
 tr
 tr
 td12td
 tda hrefhttpsgithubcomnazmulidrisnazmul idrisatd
 tda hrefhttpsgithubcomnazmulidriscolorconsolecolorconsoleatd
 tr
 tr
 td13td
 tda hrefhttpsgithubcomaclassenandre claenatd
 tda hrefhttpsgithubcomaclassencomposereorderablecomposereorderableatd
 tr
 tr
 td14td
 tda hrefhttpsgithubcomgurupreetgurupreet singhatd
 tda hrefhttpsgithubcomgurupreetcomposecookbookcomposecookbookatd
 tr
 tr
 td15td
 tda hrefhttpsgithubcomjoreillyjohn o ' reillyatd
 tda hrefhttpsgithubcomjoreillypeopleinspacepeopleinspaceatd
 tr
table

 colaborator
name of contribute
 dana sulistyo kusumo st mt phd danakusumotelkomuniversityacid
 shinta yulia puspitasari st mt shintayuliatelkomuniversityacid
 muhammad faisal amir faisalamircstelkomuniversityacid

 attention 
 please enjoy and don ' t forget fork and give a star
 don ' t forget follow my github account

 mad score card
mad scoredocsimagemadscorepngrawtrue

 profiler
profilerdocsimageprofilerpngrawtrue

 hki certificate
hki certificatedocsimagehkicertificatepngrawtrue",screenshoot appshttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagebannerpngrawtru thi project releaseandworkinprogress android arsenalhttpsimgshieldsiobadgeandroid20arsenalnutritionframeworkbrightgreensvgstyleflatsquarehttpsandroidarsenalcomdetails18370 jitpackhttpsjitpackiovamirisbacknutritionframeworksvgstyleflatsquarehttpsjitpackioamirisbacknutritionframework gener aplikasi micronutri pengembang framework untuk membuat aplikasi seputar permasalahan gizi berbasi platform android gener framework applic develop around nutrit use android platform skripsi s1 muhammad faisal amir telkom univers privaci polici click herehttpsgithubcomamirisbacknutritionframeworkblobmasterprivacypolicymd version releas thi latest releas beta releas versionreleas 100 ' new multi platform librari compos ui multi platform updat compos compon list item compos desktop android grid item compos desktop android vitamin function nutrirecyclerview updat screen shoot app android ss 1 ss 2 ss 3 ss 4 img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss1png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss2png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss3png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss4png download thi project step 1 add jitpack repositori build file buildgradl project root option 1 groovi gradl buildgradl add root buildgradl end repositori allproject repositori maven url ' httpsjitpackio ' option 2 kotlin dsl gradl buildgradlekt settingsgradlekt kotlin add root buildgradlekt end repositori allproject repositori maven url urihttpsjitpackio step 2 add depend buildgradl modul option 1 groovi gradl buildgradl depend librari nutritionframework implement ' comgithubamirisbacknutritionframework100 ' option 2 kotlin dsl gradl buildgradlekt depend librari nutritionframework implementationcomgithubamirisbacknutritionframework100 applic framework screenshoot appsdocsimageskeletoncomponentpngrawtru user manual protocol gener new project klik disinihttpsgithubcomamirisbacknutritionframeworkwikihowtogeneratenewproject start project klik disinihttpsgithubcomamirisbacknutritionframeworkwikihowtostart android librari implement klik disinihttpsgithubcomamirisbacknutritionframeworkwikiimplementasicodeframeworkandroidlibrari desktop librari implement klik disinihttpsgithubcomamirisbacknutritionframeworkwikiimplementasicodeframeworkdesktoplibrari test case framework scenario test click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsscenariotest report test click herehttpsgithubcomamirisbacknutritionframeworkblobmasterdocsscenariotestreportprofilertestxlsxrawtru android test case android nftestcaseappconsumelibraryhttpsgithubcomamirisbacknftestcaseappconsumelibrari test case android nftestcaseappnoframeworkhttpsgithubcomamirisbacknftestcaseappnoframework test case android nftestcasegooglesamplehttpsgithubcomamirisbacknftestcasegooglesampl test case android nftestcasegooglesampleconsumelibraryhttpsgithubcomamirisbacknftestcasegooglesampleconsumelibrari desktop test case desktop nutritionframeworkdesktophttpsgithubcomamirisbacknutritionframeworkdesktop document research data imag click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsimag propos click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocspropos guidanc click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsbimbingan journal list click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsjourn design figma click herehttpswwwfigmacomfileons8xy0yvxecwc71aa92qjtanodeid03a1 sheet feedback click herehttpsdocsgooglecomspreadsheetsd1p8u2lu8odqjwlpd3qisjgjxagocdch5j7pdt23lpzceditgid0 diagram draw io click herehttpsdrivegooglecomfiled1ocsoqvv3uynlxpuk9jym2ynjcfj9suppviewuspshar research nutrit app click herehttpsdocsgooglecomspreadsheetsd1t0awomrbevfeztiv438v8p0ymeguk2vvhhc7qnzutuedituspshar final task tuga akhir import document click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocspenggantisidang final task journal click herehttpsgithubcomamirisbacknutritionframeworkrawmasterdocspenggantisidangmuhammad20faisal20amir1301198497tugasakhirdocx hki certif click herehttpsgithubcomamirisbacknutritionframeworkblobmasterdocspenggantisidanghkilicensehcap1512210222kifilecertpdf hki link url click herehttpspdkiindonesiadgipgoiddetailec00202180905typecopyrightkeywordgeneratoraplikasimicronutri slide presentasi click herehttpsdocsgooglecompresentationd12kmmpxchclvqapphyhkmgv1ac2venhd6ejkco2tivfmedituspshar telkom univers lectur da dana sulistyo kusumo st mt phd nip 02780011 danakusumotelkomuniversityacid syp shinta yulia puspitasari st mt nip 13880046 shintayuliatelkomuniversityacid hmt hasmawati skom kom nip 15900049 screen shoot app desktop screenshoot appsdocsimagessssdesktoppngrawtru architectur pattern modelviewviewmodelhttpsenwikipediaorgwikimodele28093viewe28093viewmodel mvvm facilit separationhttpsenwikipediaorgwikiseparationofconcern develop graphic user interfac solidhttpsenwikipediaorgwikisolid design principl intend make softwar design understand flexibl maintain techstack min api level set 21 present approach suitabl 94 devic run android thi project take advantag mani popular librari tool android ecosystem librari stabl version unless good reason use nonstabl depend jetpackhttpsdeveloperandroidcomjetpack android ktxhttpsdeveloperandroidcomkotlinktxhtml provid concis idiomat kotlin jetpack android platform api androidxhttpsdeveloperandroidcomjetpackandroidx major improv origin android support libraryhttpsdeveloperandroidcomtopiclibrariessupportlibraryindex longer maintain view bindinghttpsdeveloperandroidcomtopiclibrariesviewbind allow easili write code interact view lifecyclehttpsdeveloperandroidcomtopiclibrariesarchitecturelifecycl perform action respons chang lifecycl statu anoth compon activ fragment livedatahttpsdeveloperandroidcomtopiclibrariesarchitecturelivedata lifecycleawar mean respect lifecycl app compon activ fragment servic navigationhttpsdeveloperandroidcomguidenavig help implement navig simpl button click complex pattern app bar navig drawer roomhttpsdeveloperandroidcomtopiclibrariesarchitectureroom persist librari provid abstract layer sqlite allow robust databas access har full power sqlite viewmodelhttpsdeveloperandroidcomtopiclibrariesarchitectureviewmodel design store manag uirel data lifecycl consciou way viewmodel class allow data surviv configur chang screen rotat coroutineshttpskotlinlangorgdocsreferencecoroutinesoverviewhtml manag background thread simplifi code reduc need callback coroutin flowhttpskotlinlangorgdocsreferencecoroutinesoverviewhtml cold asynchron data stream sequenti emit valu complet normal except dagger2httpsdaggerdev depend injector replac factori class retrofithttpssquaregithubioretrofit typesaf http client glidehttpsgithubcombumptechglid imag load cach librari composehttpswwwjetbrainscomlpcompos compos desktop simplifi acceler ui develop desktop applic allow extens ui code share android desktop applic current alpha coilhttpscoilktgithubiocoil coroutin imag loader inpir tabl tr thnoth thgithub name organizationth thgithub projectth tr tr td1td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackfrogologfrogologatd tr tr td2td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackfrogoadmobfrogoadmobatd tr tr td3td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackfrogorecyclerviewfrogorecyclerviewatd tr tr td4td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackfrogonotificationfrogonotificationatd tr tr td5td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackandroidkickstartandroidkickstartatd tr tr td6td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackandroidkickstartmodularandroidkickstartmodularatd tr tr td7td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackdesktopexperimentalcatalgouedesktopexperimentalcatalgoueatd tr tr td8td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackjitpacklibrarykotlindslguidejitpacklibrarykotlindslguideatd tr tr td9td tda hrefhttpsgithubcomfrogoboxfrogoboxatd tda hrefhttpsgithubcomfrogoboxfrogoandroidsdkfrogoandroidsdkatd tr tr td10td tda hrefhttpsgithubcomfrogoboxfrogoboxatd tda hrefhttpsgithubcomfrogoboxfrogoandroiduikitfrogoandroiduikitatd tr tr td11td tda hrefhttpsgithubcomfrogoboxfrogoboxatd tda hrefhttpsgithubcomfrogoboxfrogoconsumeapifrogoconsumeapiatd tr tr td12td tda hrefhttpsgithubcomnazmulidrisnazmul idrisatd tda hrefhttpsgithubcomnazmulidriscolorconsolecolorconsoleatd tr tr td13td tda hrefhttpsgithubcomaclassenandr claenatd tda hrefhttpsgithubcomaclassencomposereorderablecomposereorderableatd tr tr td14td tda hrefhttpsgithubcomgurupreetgurupreet singhatd tda hrefhttpsgithubcomgurupreetcomposecookbookcomposecookbookatd tr tr td15td tda hrefhttpsgithubcomjoreillyjohn ' reillyatd tda hrefhttpsgithubcomjoreillypeopleinspacepeopleinspaceatd tr tabl colabor name contribut dana sulistyo kusumo st mt phd danakusumotelkomuniversityacid shinta yulia puspitasari st mt shintayuliatelkomuniversityacid muhammad faisal amir faisalamircstelkomuniversityacid attent pleas enjoy ' forget fork give star ' forget follow github account mad score card mad scoredocsimagemadscorepngrawtru profil profilerdocsimageprofilerpngrawtru hki certif hki certificatedocsimagehkicertificatepngrawtru,screenshoot appshttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagebannerpngrawtrue project releaseandworkinprogress android arsenalhttpsimgshieldsiobadgeandroid20arsenalnutritionframeworkbrightgreensvgstyleflatsquarehttpsandroidarsenalcomdetails18370 jitpackhttpsjitpackiovamirisbacknutritionframeworksvgstyleflatsquarehttpsjitpackioamirisbacknutritionframework generator aplikasi micronutrient pengembang framework untuk membuat aplikasi seputar permasalahan gizi berbasis platform android general framework application development around nutrition using android platform skripsi s1 muhammad faisal amir telkom university privacy policy click herehttpsgithubcomamirisbacknutritionframeworkblobmasterprivacypolicymd version release latest release beta release versionrelease 100 ' new multi platform library compose ui multi platform update compose component list item compose desktop android grid item compose desktop android vitamin function nutrirecyclerview update screen shoot apps android 1 2 3 4 img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss1png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss2png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss3png img width200px height360px srchttpsrawgithubusercontentcomamirisbacknutritionframeworkmasterdocsimagessss4png download project step 1 add jitpack repository build file buildgradle project root option 1 groovy gradle buildgradle add root buildgradle end repository allprojects repository maven url ' httpsjitpackio ' option 2 kotlin dsl gradle buildgradlekts settingsgradlekts kotlin add root buildgradlekts end repository allprojects repository maven url urihttpsjitpackio step 2 add dependency buildgradle module option 1 groovy gradle buildgradle dependency library nutritionframework implementation ' comgithubamirisbacknutritionframework100 ' option 2 kotlin dsl gradle buildgradlekts dependency library nutritionframework implementationcomgithubamirisbacknutritionframework100 application framework screenshoot appsdocsimageskeletoncomponentpngrawtrue user manual protocol generate new project klik disinihttpsgithubcomamirisbacknutritionframeworkwikihowtogeneratenewproject start project klik disinihttpsgithubcomamirisbacknutritionframeworkwikihowtostart android library implementation klik disinihttpsgithubcomamirisbacknutritionframeworkwikiimplementasicodeframeworkandroidlibrary desktop library implementation klik disinihttpsgithubcomamirisbacknutritionframeworkwikiimplementasicodeframeworkdesktoplibrary test case framework scenario test click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsscenariotest report test click herehttpsgithubcomamirisbacknutritionframeworkblobmasterdocsscenariotestreportprofilertestxlsxrawtrue android test case android nftestcaseappconsumelibraryhttpsgithubcomamirisbacknftestcaseappconsumelibrary test case android nftestcaseappnoframeworkhttpsgithubcomamirisbacknftestcaseappnoframework test case android nftestcasegooglesamplehttpsgithubcomamirisbacknftestcasegooglesample test case android nftestcasegooglesampleconsumelibraryhttpsgithubcomamirisbacknftestcasegooglesampleconsumelibrary desktop test case desktop nutritionframeworkdesktophttpsgithubcomamirisbacknutritionframeworkdesktop documentation research data image click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsimage proposal click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsproposal guidance click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsbimbingan journal list click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocsjournal design figma click herehttpswwwfigmacomfileons8xy0yvxecwc71aa92qjtanodeid03a1 sheet feedback click herehttpsdocsgooglecomspreadsheetsd1p8u2lu8odqjwlpd3qisjgjxagocdch5j7pdt23lpzceditgid0 diagram draw io click herehttpsdrivegooglecomfiled1ocsoqvv3uynlxpuk9jym2ynjcfj9suppviewuspsharing research nutrition apps click herehttpsdocsgooglecomspreadsheetsd1t0awomrbevfeztiv438v8p0ymeguk2vvhhc7qnzutuedituspsharing final task tugas akhir important document click herehttpsgithubcomamirisbacknutritionframeworktreemasterdocspenggantisidang final task journal click herehttpsgithubcomamirisbacknutritionframeworkrawmasterdocspenggantisidangmuhammad20faisal20amir1301198497tugasakhirdocx hki certificate click herehttpsgithubcomamirisbacknutritionframeworkblobmasterdocspenggantisidanghkilicensehcap1512210222kifilecertpdf hki link url click herehttpspdkiindonesiadgipgoiddetailec00202180905typecopyrightkeywordgeneratoraplikasimicronutrient slide presentasi click herehttpsdocsgooglecompresentationd12kmmpxchclvqapphyhkmgv1ac2venhd6ejkco2tivfmedituspsharing telkom university lecturer da dana sulistyo kusumo st mt phd nip 02780011 danakusumotelkomuniversityacid syp shinta yulia puspitasari st mt nip 13880046 shintayuliatelkomuniversityacid hmt hasmawati skom kom nip 15900049 screen shoot apps desktop screenshoot appsdocsimagessssdesktoppngrawtrue architecture pattern modelviewviewmodelhttpsenwikipediaorgwikimodele28093viewe28093viewmodel mvvm facilitating separationhttpsenwikipediaorgwikiseparationofconcerns development graphical user interface solidhttpsenwikipediaorgwikisolid design principle intended make software design understandable flexible maintainable techstack min api level set 21 presented approach suitable 94 device running android project take advantage many popular library tool android ecosystem library stable version unless good reason use nonstable dependency jetpackhttpsdeveloperandroidcomjetpack android ktxhttpsdeveloperandroidcomkotlinktxhtml provide concise idiomatic kotlin jetpack android platform apis androidxhttpsdeveloperandroidcomjetpackandroidx major improvement original android support libraryhttpsdeveloperandroidcomtopiclibrariessupportlibraryindex longer maintained view bindinghttpsdeveloperandroidcomtopiclibrariesviewbinding allows easily write code interacts view lifecyclehttpsdeveloperandroidcomtopiclibrariesarchitecturelifecycle perform action response change lifecycle status another component activity fragment livedatahttpsdeveloperandroidcomtopiclibrariesarchitecturelivedata lifecycleaware meaning respect lifecycle app component activity fragment service navigationhttpsdeveloperandroidcomguidenavigation help implement navigation simple button click complex pattern app bar navigation drawer roomhttpsdeveloperandroidcomtopiclibrariesarchitectureroom persistence library provides abstraction layer sqlite allow robust database access harnessing full power sqlite viewmodelhttpsdeveloperandroidcomtopiclibrariesarchitectureviewmodel designed store manage uirelated data lifecycle conscious way viewmodel class allows data survive configuration change screen rotation coroutineshttpskotlinlangorgdocsreferencecoroutinesoverviewhtml managing background thread simplified code reducing need callback coroutines flowhttpskotlinlangorgdocsreferencecoroutinesoverviewhtml cold asynchronous data stream sequentially emits value completes normally exception dagger2httpsdaggerdev dependency injector replacement factory class retrofithttpssquaregithubioretrofit typesafe http client glidehttpsgithubcombumptechglide image loading caching library composehttpswwwjetbrainscomlpcompose compose desktop simplifies accelerates ui development desktop application allows extensive ui code sharing android desktop application currently alpha coilhttpscoilktgithubiocoil coroutine image loader inpiration table tr thnoth thgithub name organizationth thgithub projectth tr tr td1td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackfrogologfrogologatd tr tr td2td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackfrogoadmobfrogoadmobatd tr tr td3td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackfrogorecyclerviewfrogorecyclerviewatd tr tr td4td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackfrogonotificationfrogonotificationatd tr tr td5td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackandroidkickstartandroidkickstartatd tr tr td6td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackandroidkickstartmodularandroidkickstartmodularatd tr tr td7td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackdesktopexperimentalcatalgouedesktopexperimentalcatalgoueatd tr tr td8td tda hrefhttpsgithubcomamirisbackmuhammad faisal amiratd tda hrefhttpsgithubcomamirisbackjitpacklibrarykotlindslguidejitpacklibrarykotlindslguideatd tr tr td9td tda hrefhttpsgithubcomfrogoboxfrogoboxatd tda hrefhttpsgithubcomfrogoboxfrogoandroidsdkfrogoandroidsdkatd tr tr td10td tda hrefhttpsgithubcomfrogoboxfrogoboxatd tda hrefhttpsgithubcomfrogoboxfrogoandroiduikitfrogoandroiduikitatd tr tr td11td tda hrefhttpsgithubcomfrogoboxfrogoboxatd tda hrefhttpsgithubcomfrogoboxfrogoconsumeapifrogoconsumeapiatd tr tr td12td tda hrefhttpsgithubcomnazmulidrisnazmul idrisatd tda hrefhttpsgithubcomnazmulidriscolorconsolecolorconsoleatd tr tr td13td tda hrefhttpsgithubcomaclassenandre claenatd tda hrefhttpsgithubcomaclassencomposereorderablecomposereorderableatd tr tr td14td tda hrefhttpsgithubcomgurupreetgurupreet singhatd tda hrefhttpsgithubcomgurupreetcomposecookbookcomposecookbookatd tr tr td15td tda hrefhttpsgithubcomjoreillyjohn ' reillyatd tda hrefhttpsgithubcomjoreillypeopleinspacepeopleinspaceatd tr table colaborator name contribute dana sulistyo kusumo st mt phd danakusumotelkomuniversityacid shinta yulia puspitasari st mt shintayuliatelkomuniversityacid muhammad faisal amir faisalamircstelkomuniversityacid attention please enjoy ' forget fork give star ' forget follow github account mad score card mad scoredocsimagemadscorepngrawtrue profiler profilerdocsimageprofilerpngrawtrue hki certificate hki certificatedocsimagehkicertificatepngrawtrue
Python,"# Nutrition-Optimization-New
This repo implements a linear program solver to create an optimal diet based on a large database of foods and nutritional content. I originally created this program in attempt to optimize my own health, and have been happily eating a program-recommended chili 5 days a week since March of 2019! Nutritional data was obtained by downloading the database files from the [USDA's Food Composition Database](https://fdc.nal.usda.gov/download-datasets.html). This dataset contains nutritional content information for over 9000 foods and over 100 nutrients. Nutritional guidelines were estimated for a 25 year-old male based on [health.gov](https://health.gov/dietaryguidelines/2015/guidelines/appendix-7/) and [The National Academies Press dietary references](https://www.nap.edu/read/11537/chapter/33).  

Here's an example diet output by the program:
![ex_foods](ex_foods.PNG)
![ex_nutrients](ex_nutrients.PNG)


The nuts and bolts of how to run the code are detailed below. It is a bit clunky to work with as it relies on inputing nutrient and food constraints into two separate excel csv files. Sorry :(

- data_parse.py is used to convert the USDA's Food Composition Database .csv files into a more human-readable form, where each row of the CSV represents a food and each column represents a nutrient.

- linear_solver.py is used to formulate the task of selecting a diet with optimal nutritional content as a linear program. Nutritional minimums and maximums are input as constraints to the program, and the objective function seeks to minimize the overall weight of selected foods. As of now, the mechanism for interacting with the solver is a bit clunky, and I am still thinking of a more elegant way to input constraints, etc. 

- In the food_exclusions.xlsx file, the first column indicates whether the food should be included at all in the optimization. The second column indicates whether the food's weight should count towards the objective function. The solver will attempt to use only foods that do not count towards the overall weight first, so one can easily specify a set of base ingredients that the solver will always attempt to use first. The third and fourth columns specify the minimum and maximum allowable weight of that food in the solution.

- In the nut_constraints.xlsx, the first and second columns correspond to the daily min and max values for each nutrient.

- All nutritional content values can be viewed in data_chart.xlsx

- To generate a diet, modify the nut_constraints and food_exclusions files, then run linear_solver.py. A diet will be output indicating the weight of each food included in the diet as well as the overall nutritional content of the diet.

- This repository isn't really in a finished state yet, but if you're interested in using it, let me know and I'll be happy to answer any questions to get it up and running for you!
","nutritionoptimizationnew
this repo implements a linear program solver to create an optimal diet based on a large database of foods and nutritional content i originally created this program in attempt to optimize my own health and have been happily eating a programrecommended chili 5 days a week since march of 2019 nutritional data was obtained by downloading the database files from the usda ' s food composition databasehttpsfdcnalusdagovdownloaddatasetshtml this dataset contains nutritional content information for over 9000 foods and over 100 nutrients nutritional guidelines were estimated for a 25 yearold male based on healthgovhttpshealthgovdietaryguidelines2015guidelinesappendix7 and the national academies press dietary referenceshttpswwwnapeduread11537chapter33 

here ' s an example diet output by the program
exfoodsexfoodspng
exnutrientsexnutrientspng


the nuts and bolts of how to run the code are detailed below it is a bit clunky to work with as it relies on inputing nutrient and food constraints into two separate excel csv files sorry 

 dataparsepy is used to convert the usda ' s food composition database csv files into a more humanreadable form where each row of the csv represents a food and each column represents a nutrient

 linearsolverpy is used to formulate the task of selecting a diet with optimal nutritional content as a linear program nutritional minimums and maximums are input as constraints to the program and the objective function seeks to minimize the overall weight of selected foods as of now the mechanism for interacting with the solver is a bit clunky and i am still thinking of a more elegant way to input constraints etc 

 in the foodexclusionsxlsx file the first column indicates whether the food should be included at all in the optimization the second column indicates whether the food ' s weight should count towards the objective function the solver will attempt to use only foods that do not count towards the overall weight first so one can easily specify a set of base ingredients that the solver will always attempt to use first the third and fourth columns specify the minimum and maximum allowable weight of that food in the solution

 in the nutconstraintsxlsx the first and second columns correspond to the daily min and max values for each nutrient

 all nutritional content values can be viewed in datachartxlsx

 to generate a diet modify the nutconstraints and foodexclusions files then run linearsolverpy a diet will be output indicating the weight of each food included in the diet as well as the overall nutritional content of the diet

 this repository isn ' t really in a finished state yet but if you ' re interested in using it let me know and i ' ll be happy to answer any questions to get it up and running for you",nutritionoptimizationnew thi repo implement linear program solver creat optim diet base larg databas food nutrit content origin creat thi program attempt optim health happili eat programrecommend chili 5 day week sinc march 2019 nutrit data wa obtain download databas file usda ' food composit databasehttpsfdcnalusdagovdownloaddatasetshtml thi dataset contain nutrit content inform 9000 food 100 nutrient nutrit guidelin estim 25 yearold male base healthgovhttpshealthgovdietaryguidelines2015guidelinesappendix7 nation academi press dietari referenceshttpswwwnapeduread11537chapter33 ' exampl diet output program exfoodsexfoodspng exnutrientsexnutrientspng nut bolt run code detail bit clunki work reli input nutrient food constraint two separ excel csv file sorri dataparsepi use convert usda ' food composit databas csv file humanread form row csv repres food column repres nutrient linearsolverpi use formul task select diet optim nutrit content linear program nutrit minimum maximum input constraint program object function seek minim overal weight select food mechan interact solver bit clunki still think eleg way input constraint etc foodexclusionsxlsx file first column indic whether food includ optim second column indic whether food ' weight count toward object function solver attempt use onli food count toward overal weight first one easili specifi set base ingredi solver alway attempt use first third fourth column specifi minimum maximum allow weight food solut nutconstraintsxlsx first second column correspond daili min max valu nutrient nutrit content valu view datachartxlsx gener diet modifi nutconstraint foodexclus file run linearsolverpi diet output indic weight food includ diet well overal nutrit content diet thi repositori ' realli finish state yet ' interest use let know ' happi answer ani question get run,nutritionoptimizationnew repo implement linear program solver create optimal diet based large database food nutritional content originally created program attempt optimize health happily eating programrecommended chili 5 day week since march 2019 nutritional data wa obtained downloading database file usda ' food composition databasehttpsfdcnalusdagovdownloaddatasetshtml dataset contains nutritional content information 9000 food 100 nutrient nutritional guideline estimated 25 yearold male based healthgovhttpshealthgovdietaryguidelines2015guidelinesappendix7 national academy press dietary referenceshttpswwwnapeduread11537chapter33 ' example diet output program exfoodsexfoodspng exnutrientsexnutrientspng nut bolt run code detailed bit clunky work relies inputing nutrient food constraint two separate excel csv file sorry dataparsepy used convert usda ' food composition database csv file humanreadable form row csv represents food column represents nutrient linearsolverpy used formulate task selecting diet optimal nutritional content linear program nutritional minimum maximum input constraint program objective function seek minimize overall weight selected food mechanism interacting solver bit clunky still thinking elegant way input constraint etc foodexclusionsxlsx file first column indicates whether food included optimization second column indicates whether food ' weight count towards objective function solver attempt use food count towards overall weight first one easily specify set base ingredient solver always attempt use first third fourth column specify minimum maximum allowable weight food solution nutconstraintsxlsx first second column correspond daily min max value nutrient nutritional content value viewed datachartxlsx generate diet modify nutconstraints foodexclusions file run linearsolverpy diet output indicating weight food included diet well overall nutritional content diet repository ' really finished state yet ' interested using let know ' happy answer question get running
HTML,"# React | Nutrition

## Introduction

You just realized that lately your diet is not healthy and it may have an impact on your health (and productivity), now and in the long term. 

To take care of the food you eat, you decided to create a nutrition app that will track everything you eat!


![](https://media.giphy.com/media/fH0dyqpPJRvTbiF5rJ/giphy.gif)


## Requirements

- Fork this repo
- Clone this repo

## Submission

- Upon completion, run the following commands:

  ```
  git add .
  git commit -m ""done""
  git push origin master
  ```

- Create Pull Request so your teacher can check up your work.

## Instructions


### Import a JSON

Import the foods from the `foods.json`.

```js
import foods from './foods.json'
```


## About the design

If you struggle with the design, you can find a static example of what is expected inside file `style-guides.html` in the `starter-code` folder.

So let's start: 

### Iteration 1 | Create `FoodBox` component

Create a `FoodBox` component that takes at least `food` as a prop and displays a box with all the information about an ingredient.

You can use this HTML snippet to display properly the `FoodBox`:


![](https://i.imgur.com/bY9i5Rw.png)


### Iteration 2 | Display food

In your `App` component (your main component), display as many `FoodBox` as elements inside the variable `foods`.


![](https://i.imgur.com/3TVQJDO.png)



### Iteration 3 | Add new food


Create a button to add new foods.

When a user clicks the button, a form will appear with fields for a name, number of calories, and an image.

When the user clicks submit, the food will be added to the list.

The form should disappear when the user clicks the submit button.


### Iteration 4 | Implement search bar

Create a `Search` component to perform a search that updates the list of all meal. 

![](https://i.imgur.com/XaOpAx8.png)



### Iteration 5 | Create add buttons

On your `FoodBox`, you have an input an ""+"" button. Use them so that when a user clicks on the button, it adds them on a list on the right called ""*Today's foods*"".

You will also need to display the total amount of calories at the bottom of the list as a recap.

![](https://media.giphy.com/media/fH0dyqpPJRvTbiF5rJ/giphy.gif)

If you don't remember how to create responsive columns with Bulma, you can check the [documentation](https://bulma.io/documentation/columns/basics/).


### Iteration 5 | Bonus | Group ingredients

You made an awesome application, but you have found a little problem in the UX. For example, if you click twice on ""Pizza"", it will display 2 lines ""*1 Pizza = 400 cal*"" instead of 1 line  ""*2 Pizza = 800 cal*"". Fix that problem.


### Iteration 6 | Bonus | Allow the user to remove an ingredient

On the ""*Today's food*"", add a trash icon to let users removing one of their items.


Happy coding! :heart:
","react nutrition

 introduction

you just realized that lately your diet is not healthy and it may have an impact on your health and productivity now and in the long term 

to take care of the food you eat you decided to create a nutrition app that will track everything you eat


httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif


 requirements

 fork this repo
 clone this repo

 submission

 upon completion run the following commands

 
 git add 
 git commit m done
 git push origin master
 

 create pull request so your teacher can check up your work

 instructions


 import a json

import the foods from the foodsjson

js
import foods from ' foodsjson ' 



 about the design

if you struggle with the design you can find a static example of what is expected inside file styleguideshtml in the startercode folder

so let ' s start 

 iteration 1 create foodbox component

create a foodbox component that takes at least food as a prop and displays a box with all the information about an ingredient

you can use this html snippet to display properly the foodbox


httpsiimgurcomby9i5rwpng


 iteration 2 display food

in your app component your main component display as many foodbox as elements inside the variable foods


httpsiimgurcom3tvqjdopng



 iteration 3 add new food


create a button to add new foods

when a user clicks the button a form will appear with fields for a name number of calories and an image

when the user clicks submit the food will be added to the list

the form should disappear when the user clicks the submit button


 iteration 4 implement search bar

create a search component to perform a search that updates the list of all meal 

httpsiimgurcomxaopax8png



 iteration 5 create add buttons

on your foodbox you have an input an button use them so that when a user clicks on the button it adds them on a list on the right called today ' s foods

you will also need to display the total amount of calories at the bottom of the list as a recap

httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif

if you don ' t remember how to create responsive columns with bulma you can check the documentationhttpsbulmaiodocumentationcolumnsbasics


 iteration 5 bonus group ingredients

you made an awesome application but you have found a little problem in the ux for example if you click twice on pizza it will display 2 lines 1 pizza 400 cal instead of 1 line 2 pizza 800 cal fix that problem


 iteration 6 bonus allow the user to remove an ingredient

on the today ' s food add a trash icon to let users removing one of their items


happy coding heart",react nutrit introduct realiz late diet healthi may impact health product long term take care food eat decid creat nutrit app track everyth eat httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif requir fork thi repo clone thi repo submiss upon complet run follow command git add git commit done git push origin master creat pull request teacher check work instruct import json import food foodsjson js import food ' foodsjson ' design struggl design find static exampl expect insid file styleguideshtml startercod folder let ' start iter 1 creat foodbox compon creat foodbox compon take least food prop display box inform ingredi use thi html snippet display properli foodbox httpsiimgurcomby9i5rwpng iter 2 display food app compon main compon display mani foodbox element insid variabl food httpsiimgurcom3tvqjdopng iter 3 add new food creat button add new food user click button form appear field name number calori imag user click submit food ad list form disappear user click submit button iter 4 implement search bar creat search compon perform search updat list meal httpsiimgurcomxaopax8png iter 5 creat add button foodbox input button use user click button add list right call today ' food also need display total amount calori bottom list recap httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif ' rememb creat respons column bulma check documentationhttpsbulmaiodocumentationcolumnsbas iter 5 bonu group ingredi made awesom applic found littl problem ux exampl click twice pizza display 2 line 1 pizza 400 cal instead 1 line 2 pizza 800 cal fix problem iter 6 bonu allow user remov ingredi today ' food add trash icon let user remov one item happi code heart,react nutrition introduction realized lately diet healthy may impact health productivity long term take care food eat decided create nutrition app track everything eat httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif requirement fork repo clone repo submission upon completion run following command git add git commit done git push origin master create pull request teacher check work instruction import json import food foodsjson j import food ' foodsjson ' design struggle design find static example expected inside file styleguideshtml startercode folder let ' start iteration 1 create foodbox component create foodbox component take least food prop display box information ingredient use html snippet display properly foodbox httpsiimgurcomby9i5rwpng iteration 2 display food app component main component display many foodbox element inside variable food httpsiimgurcom3tvqjdopng iteration 3 add new food create button add new food user click button form appear field name number calorie image user click submit food added list form disappear user click submit button iteration 4 implement search bar create search component perform search update list meal httpsiimgurcomxaopax8png iteration 5 create add button foodbox input button use user click button add list right called today ' food also need display total amount calorie bottom list recap httpsmediagiphycommediafh0dyqppjrvtbif5rjgiphygif ' remember create responsive column bulma check documentationhttpsbulmaiodocumentationcolumnsbasics iteration 5 bonus group ingredient made awesome application found little problem ux example click twice pizza display 2 line 1 pizza 400 cal instead 1 line 2 pizza 800 cal fix problem iteration 6 bonus allow user remove ingredient today ' food add trash icon let user removing one item happy coding heart
Shell,"These files are useful in creating a MySQL database from the SR22 nutrition
information produced by the USDA.

You must first create a new user and database, make sure that these are
referred to in createdb.sh.

Then make sure you have a recent copy of mdb-tools.  These tools are used to
convert the sr22 data from access format into SQL.

Edit create_db.sh to reflect your local MySQL installation, user, password, and
database.

Then:

    make sr22

This should insert all the data into your mysql database!
","these files are useful in creating a mysql database from the sr22 nutrition
information produced by the usda

you must first create a new user and database make sure that these are
referred to in createdbsh

then make sure you have a recent copy of mdbtools these tools are used to
convert the sr22 data from access format into sql

edit createdbsh to reflect your local mysql installation user password and
database

then

 make sr22

this should insert all the data into your mysql database",file use creat mysql databas sr22 nutrit inform produc usda must first creat new user databas make sure refer createdbsh make sure recent copi mdbtool tool use convert sr22 data access format sql edit createdbsh reflect local mysql instal user password databas make sr22 thi insert data mysql databas,file useful creating mysql database sr22 nutrition information produced usda must first create new user database make sure referred createdbsh make sure recent copy mdbtools tool used convert sr22 data access format sql edit createdbsh reflect local mysql installation user password database make sr22 insert data mysql database
JavaScript,"First, install NodeJS. It comes with NPM. Also, it might be easier to install with NVM to manage multiple versions.

Add ```APIKEY=myapikey``` as an environment variable.

Then run these commands:
```
git clone git@github.com:esha/wsdemo.git
cd wsdemo
npm install
cd dist
npx nf start -p 8000
```

Then direct your browser to ```http://localhost:8000/```

To change the project, edit the html/css/js files in /app.
Whenever you make a change, rebuild and restart by doing:
```cd .. && grunt && cd dist && npx nf start -p 8000```

To deploy the app to Heroku, follow these instructions.
Create your own Heroku app with:  
```heroku apps:create myappname```
Set your APIKEY:
```heroku config:set APIKEY=myapikey```
Deploy the app:  
```git subtree push --prefix dist heroku master```
For later updates, force the subtree push:
```git push heroku `git subtree split --prefix dist master`:master --force```
","first install nodejs it comes with npm also it might be easier to install with nvm to manage multiple versions

add apikeymyapikey as an environment variable

then run these commands

git clone gitgithubcomeshawsdemogit
cd wsdemo
npm install
cd dist
npx nf start p 8000


then direct your browser to httplocalhost8000

to change the project edit the htmlcssjs files in app
whenever you make a change rebuild and restart by doing
cd grunt cd dist npx nf start p 8000

to deploy the app to heroku follow these instructions
create your own heroku app with 
heroku appscreate myappname
set your apikey
heroku configset apikeymyapikey
deploy the app 
git subtree push prefix dist heroku master
for later updates force the subtree push
git push heroku git subtree split prefix dist mastermaster force",first instal nodej come npm also might easier instal nvm manag multipl version add apikeymyapikey environ variabl run command git clone gitgithubcomeshawsdemogit cd wsdemo npm instal cd dist npx nf start p 8000 direct browser httplocalhost8000 chang project edit htmlcssj file app whenev make chang rebuild restart cd grunt cd dist npx nf start p 8000 deploy app heroku follow instruct creat heroku app heroku appscreat myappnam set apikey heroku configset apikeymyapikey deploy app git subtre push prefix dist heroku master later updat forc subtre push git push heroku git subtre split prefix dist mastermast forc,first install nodejs come npm also might easier install nvm manage multiple version add apikeymyapikey environment variable run command git clone gitgithubcomeshawsdemogit cd wsdemo npm install cd dist npx nf start p 8000 direct browser httplocalhost8000 change project edit htmlcssjs file app whenever make change rebuild restart cd grunt cd dist npx nf start p 8000 deploy app heroku follow instruction create heroku app heroku appscreate myappname set apikey heroku configset apikeymyapikey deploy app git subtree push prefix dist heroku master later update force subtree push git push heroku git subtree split prefix dist mastermaster force
JavaScript,"# Nutrition

A quick, no-frills way to track your macros. It can be used as an app on the iPhone if a user navigates to the site and downloads it to the home screen. I didn't feel like dealing with the app store / marketplace.

## How do I run this bad boy locally?

### Abridged Version:

Git clone, npm install, run. Profit.


### Unabridged Version:

This UI runs on node, and I recommend brunch.io as your framework of choice. That being said, you can always run this straight-up in Node. In server.coffee, the difference in environments is handled.

* First, you'll need node.js (0.8.x): `brew install node`
* Then, you'll need brunch: `npm install -g brunch`
* cd into nutrition, and pull down the dependencies: `npm install`
* Run it! `brunch watch --server`
* Profit

The default settings bind it to localhost:3333


## TODO

* Searching for an item
* User-defined supplements
","nutrition

a quick nofrills way to track your macros it can be used as an app on the iphone if a user navigates to the site and downloads it to the home screen i didn ' t feel like dealing with the app store marketplace

 how do i run this bad boy locally

 abridged version

git clone npm install run profit


 unabridged version

this ui runs on node and i recommend brunchio as your framework of choice that being said you can always run this straightup in node in servercoffee the difference in environments is handled

 first you ' ll need nodejs 08x brew install node
 then you ' ll need brunch npm install g brunch
 cd into nutrition and pull down the dependencies npm install
 run it brunch watch server
 profit

the default settings bind it to localhost3333


 todo

 searching for an item
 userdefined supplements",nutrit quick nofril way track macro use app iphon user navig site download home screen ' feel like deal app store marketplac run thi bad boy local abridg version git clone npm instal run profit unabridg version thi ui run node recommend brunchio framework choic said alway run thi straightup node servercoffe differ environ handl first ' need nodej 08x brew instal node ' need brunch npm instal g brunch cd nutrit pull depend npm instal run brunch watch server profit default set bind localhost3333 todo search item userdefin supplement,nutrition quick nofrills way track macro used app iphone user navigates site downloads home screen ' feel like dealing app store marketplace run bad boy locally abridged version git clone npm install run profit unabridged version ui run node recommend brunchio framework choice said always run straightup node servercoffee difference environment handled first ' need nodejs 08x brew install node ' need brunch npm install g brunch cd nutrition pull dependency npm install run brunch watch server profit default setting bind localhost3333 todo searching item userdefined supplement
Python,"# Nutritional-Calculator
A simple app that tells you the nutritional values of your food. Also with an option to add your own products.
","nutritionalcalculator
a simple app that tells you the nutritional values of your food also with an option to add your own products",nutritionalcalcul simpl app tell nutrit valu food also option add product,nutritionalcalculator simple app tell nutritional value food also option add product
Jupyter Notebook,"# DeepNutrition

Introduction to DeepNutrition: https://www.youtube.com/watch?v=GGbImsmBeQw <br />
And The Paper: https://drive.google.com/file/d/1Nuq-Mepx1YVq0IrwNcjdS6hX_tkKevEx/view?usp=sharing

Our term project of BBM406 Fundamentals of Machine Learning Lecture in Hacettepe University Computer Science.
We tested RESNet-50, VGGNet-16, Inceptionv3 (aka GoogleNet). Results have demonstrated at paper.
We have over %85 prediction accuracy for food recognition from 101 food class.
We worked on Food-101 Dataset.

# Food recognition from image for facilitating the dietary assessment process.

Dietary assessment plays a signiﬁcant role in ﬁghting obesity. In this paper, we used computer vision techniques to facilitate the dietary assessment process by detecting foods from images. We used the Food-101 dataset which consists of 101 classes and developed a model that uses a ﬁne-tuned model of InceptionV3 and get 85% top-1 accuracy. In this process, we tried different Models, Activation Functions, LossFunctions, Dropouts, LearningRates, Batch Sizes. We observed the model’s behavior in each of those conditions and tried to get the best case possible. Our results show that the InceptionV3 which is a CNN model can be a good choice for identifying Foods by using Food-101 Dataset.

# Our Medium Blogs:

You can access this project's medium blogs from here: <br />
Week 1: https://medium.com/bbm406f19/deepnutrition-be-aware-of-your-macronutrients-c47497c423cc  <br />
Week 2: https://medium.com/bbm406f19/week-2-deepnutrition-be-aware-of-your-macronutrients-131dc0389e8 <br />
Week 3: https://medium.com/bbm406f19/week-3-deepnutrition-be-aware-of-your-macronutrients-e3cd3f01a9f7 <br />
Week 4: https://medium.com/bbm406f19/week-4-deepnutrition-be-aware-of-your-macronutrients-aaecce8b330e <br />
Week 5: https://medium.com/bbm406f19/week-5-deepnutrition-be-aware-of-your-macronutrients-f6f36dc070a0 <br />
Week 6: https://medium.com/bbm406f19/week-6-deepnutrition-be-aware-of-your-macronutrients-54abd178148 <br />

# Our Team
Ali Kayadibi (https://www.linkedin.com/in/ali-kayadibi-a1a262147/), <br />
Ismet Okatar (https://www.linkedin.com/in/ismetokatar/), (https://github.com/ismetokatar) <br />
Muhammed Aydogan (https://www.linkedin.com/in/muhammed-aydogan-22b31b179)
","deepnutrition

introduction to deepnutrition httpswwwyoutubecomwatchvggbimsmbeqw br 
and the paper httpsdrivegooglecomfiled1nuqmepx1yvq0irwncjds6hxtkkevexviewuspsharing

our term project of bbm406 fundamentals of machine learning lecture in hacettepe university computer science
we tested resnet50 vggnet16 inceptionv3 aka googlenet results have demonstrated at paper
we have over 85 prediction accuracy for food recognition from 101 food class
we worked on food101 dataset

 food recognition from image for facilitating the dietary assessment process

dietary assessment plays a significant role in fighting obesity in this paper we used computer vision techniques to facilitate the dietary assessment process by detecting foods from images we used the food101 dataset which consists of 101 classes and developed a model that uses a finetuned model of inceptionv3 and get 85 top1 accuracy in this process we tried different models activation functions lossfunctions dropouts learningrates batch sizes we observed the models behavior in each of those conditions and tried to get the best case possible our results show that the inceptionv3 which is a cnn model can be a good choice for identifying foods by using food101 dataset

 our medium blogs

you can access this project ' s medium blogs from here br 
week 1 httpsmediumcombbm406f19deepnutritionbeawareofyourmacronutrientsc47497c423cc br 
week 2 httpsmediumcombbm406f19week2deepnutritionbeawareofyourmacronutrients131dc0389e8 br 
week 3 httpsmediumcombbm406f19week3deepnutritionbeawareofyourmacronutrientse3cd3f01a9f7 br 
week 4 httpsmediumcombbm406f19week4deepnutritionbeawareofyourmacronutrientsaaecce8b330e br 
week 5 httpsmediumcombbm406f19week5deepnutritionbeawareofyourmacronutrientsf6f36dc070a0 br 
week 6 httpsmediumcombbm406f19week6deepnutritionbeawareofyourmacronutrients54abd178148 br 

 our team
ali kayadibi httpswwwlinkedincominalikayadibia1a262147 br 
ismet okatar httpswwwlinkedincominismetokatar httpsgithubcomismetokatar br 
muhammed aydogan httpswwwlinkedincominmuhammedaydogan22b31b179",deepnutrit introduct deepnutrit httpswwwyoutubecomwatchvggbimsmbeqw br paper httpsdrivegooglecomfiled1nuqmepx1yvq0irwncjds6hxtkkevexviewuspshar term project bbm406 fundament machin learn lectur hacettep univers comput scienc test resnet50 vggnet16 inceptionv3 aka googlenet result demonstr paper 85 predict accuraci food recognit 101 food class work food101 dataset food recognit imag facilit dietari assess process dietari assess play signific role fight obes thi paper use comput vision techniqu facilit dietari assess process detect food imag use food101 dataset consist 101 class develop model use finetun model inceptionv3 get 85 top1 accuraci thi process tri differ model activ function lossfunct dropout learningr batch size observ model behavior condit tri get best case possibl result show inceptionv3 cnn model good choic identifi food use food101 dataset medium blog access thi project ' medium blog br week 1 httpsmediumcombbm406f19deepnutritionbeawareofyourmacronutrientsc47497c423cc br week 2 httpsmediumcombbm406f19week2deepnutritionbeawareofyourmacronutrients131dc0389e8 br week 3 httpsmediumcombbm406f19week3deepnutritionbeawareofyourmacronutrientse3cd3f01a9f7 br week 4 httpsmediumcombbm406f19week4deepnutritionbeawareofyourmacronutrientsaaecce8b330 br week 5 httpsmediumcombbm406f19week5deepnutritionbeawareofyourmacronutrientsf6f36dc070a0 br week 6 httpsmediumcombbm406f19week6deepnutritionbeawareofyourmacronutrients54abd178148 br team ali kayadibi httpswwwlinkedincominalikayadibia1a262147 br ismet okatar httpswwwlinkedincominismetokatar httpsgithubcomismetokatar br muham aydogan httpswwwlinkedincominmuhammedaydogan22b31b179,deepnutrition introduction deepnutrition httpswwwyoutubecomwatchvggbimsmbeqw br paper httpsdrivegooglecomfiled1nuqmepx1yvq0irwncjds6hxtkkevexviewuspsharing term project bbm406 fundamental machine learning lecture hacettepe university computer science tested resnet50 vggnet16 inceptionv3 aka googlenet result demonstrated paper 85 prediction accuracy food recognition 101 food class worked food101 dataset food recognition image facilitating dietary assessment process dietary assessment play significant role fighting obesity paper used computer vision technique facilitate dietary assessment process detecting food image used food101 dataset consists 101 class developed model us finetuned model inceptionv3 get 85 top1 accuracy process tried different model activation function lossfunctions dropout learningrates batch size observed model behavior condition tried get best case possible result show inceptionv3 cnn model good choice identifying food using food101 dataset medium blog access project ' medium blog br week 1 httpsmediumcombbm406f19deepnutritionbeawareofyourmacronutrientsc47497c423cc br week 2 httpsmediumcombbm406f19week2deepnutritionbeawareofyourmacronutrients131dc0389e8 br week 3 httpsmediumcombbm406f19week3deepnutritionbeawareofyourmacronutrientse3cd3f01a9f7 br week 4 httpsmediumcombbm406f19week4deepnutritionbeawareofyourmacronutrientsaaecce8b330e br week 5 httpsmediumcombbm406f19week5deepnutritionbeawareofyourmacronutrientsf6f36dc070a0 br week 6 httpsmediumcombbm406f19week6deepnutritionbeawareofyourmacronutrients54abd178148 br team ali kayadibi httpswwwlinkedincominalikayadibia1a262147 br ismet okatar httpswwwlinkedincominismetokatar httpsgithubcomismetokatar br muhammed aydogan httpswwwlinkedincominmuhammedaydogan22b31b179
JavaScript,"# Nutrition Journal

Description
---

Nutrition Log is an application where a user can sign up by creating an account and keep track of their nutrition habits.  This app allows you to enter the foods you have eaten and the nutritional facts about that food will be displayed. It also tells you how many calories are in that food.  The user can also enter exercise completed and the expected calories to burn will be provided. 

# Built With
 
Passport, Express, BULMA, Heroku, Sequelize, Javascript, jQuery, MySql
Handlebars, Nutritionix API

How To Use:
---

![screenshot of the code](./public/assets/images/gif2.gif);



![screenshot of the code](./public/assets/images/gif.gif);


# Getting Started
Link to deployed app (https://salty-ravine-80275.herokuapp.com/)
---


# Credits



# License
MIT License

Copyright (c) [2020] [Thomas Argent, Sharon Yelverton, Matt Dominick, Alexander Garcia]

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","nutrition journal

description


nutrition log is an application where a user can sign up by creating an account and keep track of their nutrition habits this app allows you to enter the foods you have eaten and the nutritional facts about that food will be displayed it also tells you how many calories are in that food the user can also enter exercise completed and the expected calories to burn will be provided 

 built with
 
passport express bulma heroku sequelize javascript jquery mysql
handlebars nutritionix api

how to use


screenshot of the codepublicassetsimagesgif2gif



screenshot of the codepublicassetsimagesgifgif


 getting started
link to deployed app httpssaltyravine80275herokuappcom



 credits



 license
mit license

copyright c 2020 thomas argent sharon yelverton matt dominick alexander garcia

permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense andor sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions

the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software

the software is provided as is without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software",nutrit journal descript nutrit log applic user sign creat account keep track nutrit habit thi app allow enter food eaten nutrit fact food display also tell mani calori food user also enter exercis complet expect calori burn provid built passport express bulma heroku sequel javascript jqueri mysql handlebar nutritionix api use screenshot codepublicassetsimagesgif2gif screenshot codepublicassetsimagesgifgif get start link deploy app httpssaltyravine80275herokuappcom credit licens mit licens copyright c 2020 thoma argent sharon yelverton matt dominick alexand garcia permiss herebi grant free charg ani person obtain copi thi softwar associ document file softwar deal softwar without restrict includ without limit right use copi modifi merg publish distribut sublicens andor sell copi softwar permit person softwar furnish subject follow condit abov copyright notic thi permiss notic shall includ copi substanti portion softwar softwar provid without warranti ani kind express impli includ limit warranti merchant fit particular purpos noninfring event shall author copyright holder liabl ani claim damag liabil whether action contract tort otherwis aris connect softwar use deal softwar,nutrition journal description nutrition log application user sign creating account keep track nutrition habit app allows enter food eaten nutritional fact food displayed also tell many calorie food user also enter exercise completed expected calorie burn provided built passport express bulma heroku sequelize javascript jquery mysql handlebar nutritionix api use screenshot codepublicassetsimagesgif2gif screenshot codepublicassetsimagesgifgif getting started link deployed app httpssaltyravine80275herokuappcom credit license mit license copyright c 2020 thomas argent sharon yelverton matt dominick alexander garcia permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
JavaScript,"# NutritionIQ
NutritionIQ is a machine-learning based receipt scanner with nutritional information about food items in the receipt. It was made in a team of 4 with Terrence Ho, David Lu, Rut Patel, and Ryan Kim for MHacks X (2017).

Built using the Google Cloud Platform (Storage, Machine-learning, Cloud Vision), Expo.io (React-Native), Node.js, Heroku, and NutritionIX.

## Inspiration
We wanted to utilize machine learning in order to get nutritional information from a grocery receipt. We needed an easy way to get relevant nutritional facts about our grocery shopping trips, without having to look everything up individually.
## What it does
NutritionIQ uses Google Cloud Platform tools to get smart-data about items on a grocery receipt. No matter how long the grocery list, precise nutritional details are displayed for every food item in order to help us make smart, conscious decisions about our daily nutrition.
## How I built it
To build it, we used Expo.io (React-Native) to offer cross-platform mobile support. We used the Google Cloud Platform tools for our machine learning and part of our backend, and used Heroku with Node.js for the rest of our backend. NutritionIX API was used for up-to-date nutritional info.
## Challenges I ran into
Some challenges we faced included:
1. Grocery receipts were not standardized amoung any grocery stores so we needed a way to parse the receipts in a way so that results were still consistent amoung different sellers. Also, a lot of items are abbreviated in grocery receipts so searching up the exact item was hard.
2. Not everyone on the team was familiar with the stack we used, so it was difficult learning a new language/framework while trying to work with it to use the APIs.
3. The data we received from the API's we used would not always be consistent due to the nature of our product. We had to come up with algorithms and implementations that were robust enough to handle errors due to inconsistencies from certain API calls.
## Accomplishments that I'm proud of
We are proud that we integrated each part that we worked on into one big, working product. We worked with technologies that were not all familiar to us but we read through enough docs and examples to learn what we needed to succeed.
## What I learned
Since we all had different experiences, we specialized in certain tasks, depending on our background. Even so, we learned a lot of things from using the APIs, integrating each component of our project into one working product, and working with new technologies.
## What's next for NutritionIQ
We would love to add support for recipe recommendations based on the ingredients that were parsed from the receipt. Also, we could extend our app to be a health-tracker with users' food and nutritional data stored on the server. We could also recommend what foods to buy in order to meet our daily nutritional requirements.
","nutritioniq
nutritioniq is a machinelearning based receipt scanner with nutritional information about food items in the receipt it was made in a team of 4 with terrence ho david lu rut patel and ryan kim for mhacks x 2017

built using the google cloud platform storage machinelearning cloud vision expoio reactnative nodejs heroku and nutritionix

 inspiration
we wanted to utilize machine learning in order to get nutritional information from a grocery receipt we needed an easy way to get relevant nutritional facts about our grocery shopping trips without having to look everything up individually
 what it does
nutritioniq uses google cloud platform tools to get smartdata about items on a grocery receipt no matter how long the grocery list precise nutritional details are displayed for every food item in order to help us make smart conscious decisions about our daily nutrition
 how i built it
to build it we used expoio reactnative to offer crossplatform mobile support we used the google cloud platform tools for our machine learning and part of our backend and used heroku with nodejs for the rest of our backend nutritionix api was used for uptodate nutritional info
 challenges i ran into
some challenges we faced included
1 grocery receipts were not standardized amoung any grocery stores so we needed a way to parse the receipts in a way so that results were still consistent amoung different sellers also a lot of items are abbreviated in grocery receipts so searching up the exact item was hard
2 not everyone on the team was familiar with the stack we used so it was difficult learning a new languageframework while trying to work with it to use the apis
3 the data we received from the api ' s we used would not always be consistent due to the nature of our product we had to come up with algorithms and implementations that were robust enough to handle errors due to inconsistencies from certain api calls
 accomplishments that i ' m proud of
we are proud that we integrated each part that we worked on into one big working product we worked with technologies that were not all familiar to us but we read through enough docs and examples to learn what we needed to succeed
 what i learned
since we all had different experiences we specialized in certain tasks depending on our background even so we learned a lot of things from using the apis integrating each component of our project into one working product and working with new technologies
 what ' s next for nutritioniq
we would love to add support for recipe recommendations based on the ingredients that were parsed from the receipt also we could extend our app to be a healthtracker with users ' food and nutritional data stored on the server we could also recommend what foods to buy in order to meet our daily nutritional requirements",nutritioniq nutritioniq machinelearn base receipt scanner nutrit inform food item receipt wa made team 4 terrenc ho david lu rut patel ryan kim mhack x 2017 built use googl cloud platform storag machinelearn cloud vision expoio reactn nodej heroku nutritionix inspir want util machin learn order get nutrit inform groceri receipt need easi way get relev nutrit fact groceri shop trip without look everyth individu doe nutritioniq use googl cloud platform tool get smartdata item groceri receipt matter long groceri list precis nutrit detail display everi food item order help us make smart consciou decis daili nutrit built build use expoio reactn offer crossplatform mobil support use googl cloud platform tool machin learn part backend use heroku nodej rest backend nutritionix api wa use uptod nutrit info challeng ran challeng face includ 1 groceri receipt standard amoung ani groceri store need way pars receipt way result still consist amoung differ seller also lot item abbrevi groceri receipt search exact item wa hard 2 everyon team wa familiar stack use wa difficult learn new languageframework tri work use api 3 data receiv api ' use would alway consist due natur product come algorithm implement robust enough handl error due inconsist certain api call accomplish ' proud proud integr part work one big work product work technolog familiar us read enough doc exampl learn need succeed learn sinc differ experi special certain task depend background even learn lot thing use api integr compon project one work product work new technolog ' next nutritioniq would love add support recip recommend base ingredi pars receipt also could extend app healthtrack user ' food nutrit data store server could also recommend food buy order meet daili nutrit requir,nutritioniq nutritioniq machinelearning based receipt scanner nutritional information food item receipt wa made team 4 terrence ho david lu rut patel ryan kim mhacks x 2017 built using google cloud platform storage machinelearning cloud vision expoio reactnative nodejs heroku nutritionix inspiration wanted utilize machine learning order get nutritional information grocery receipt needed easy way get relevant nutritional fact grocery shopping trip without look everything individually doe nutritioniq us google cloud platform tool get smartdata item grocery receipt matter long grocery list precise nutritional detail displayed every food item order help u make smart conscious decision daily nutrition built build used expoio reactnative offer crossplatform mobile support used google cloud platform tool machine learning part backend used heroku nodejs rest backend nutritionix api wa used uptodate nutritional info challenge ran challenge faced included 1 grocery receipt standardized amoung grocery store needed way parse receipt way result still consistent amoung different seller also lot item abbreviated grocery receipt searching exact item wa hard 2 everyone team wa familiar stack used wa difficult learning new languageframework trying work use apis 3 data received api ' used would always consistent due nature product come algorithm implementation robust enough handle error due inconsistency certain api call accomplishment ' proud proud integrated part worked one big working product worked technology familiar u read enough doc example learn needed succeed learned since different experience specialized certain task depending background even learned lot thing using apis integrating component project one working product working new technology ' next nutritioniq would love add support recipe recommendation based ingredient parsed receipt also could extend app healthtracker user ' food nutritional data stored server could also recommend food buy order meet daily nutritional requirement
JavaScript,"# NutritionIQ
NutritionIQ is a machine-learning based receipt scanner with nutritional information about food items in the receipt. It was made in a team of 4 with Terrence Ho, David Lu, Rut Patel, and Ryan Kim for MHacks X (2017).

Built using the Google Cloud Platform (Storage, Machine-learning, Cloud Vision), Expo.io (React-Native), Node.js, Heroku, and NutritionIX.

## Inspiration
We wanted to utilize machine learning in order to get nutritional information from a grocery receipt. We needed an easy way to get relevant nutritional facts about our grocery shopping trips, without having to look everything up individually.
## What it does
NutritionIQ uses Google Cloud Platform tools to get smart-data about items on a grocery receipt. No matter how long the grocery list, precise nutritional details are displayed for every food item in order to help us make smart, conscious decisions about our daily nutrition.
## How I built it
To build it, we used Expo.io (React-Native) to offer cross-platform mobile support. We used the Google Cloud Platform tools for our machine learning and part of our backend, and used Heroku with Node.js for the rest of our backend. NutritionIX API was used for up-to-date nutritional info.
## Challenges I ran into
Some challenges we faced included:
1. Grocery receipts were not standardized amoung any grocery stores so we needed a way to parse the receipts in a way so that results were still consistent amoung different sellers. Also, a lot of items are abbreviated in grocery receipts so searching up the exact item was hard.
2. Not everyone on the team was familiar with the stack we used, so it was difficult learning a new language/framework while trying to work with it to use the APIs.
3. The data we received from the API's we used would not always be consistent due to the nature of our product. We had to come up with algorithms and implementations that were robust enough to handle errors due to inconsistencies from certain API calls.
## Accomplishments that I'm proud of
We are proud that we integrated each part that we worked on into one big, working product. We worked with technologies that were not all familiar to us but we read through enough docs and examples to learn what we needed to succeed.
## What I learned
Since we all had different experiences, we specialized in certain tasks, depending on our background. Even so, we learned a lot of things from using the APIs, integrating each component of our project into one working product, and working with new technologies.
## What's next for NutritionIQ
We would love to add support for recipe recommendations based on the ingredients that were parsed from the receipt. Also, we could extend our app to be a health-tracker with users' food and nutritional data stored on the server. We could also recommend what foods to buy in order to meet our daily nutritional requirements.
","nutritioniq
nutritioniq is a machinelearning based receipt scanner with nutritional information about food items in the receipt it was made in a team of 4 with terrence ho david lu rut patel and ryan kim for mhacks x 2017

built using the google cloud platform storage machinelearning cloud vision expoio reactnative nodejs heroku and nutritionix

 inspiration
we wanted to utilize machine learning in order to get nutritional information from a grocery receipt we needed an easy way to get relevant nutritional facts about our grocery shopping trips without having to look everything up individually
 what it does
nutritioniq uses google cloud platform tools to get smartdata about items on a grocery receipt no matter how long the grocery list precise nutritional details are displayed for every food item in order to help us make smart conscious decisions about our daily nutrition
 how i built it
to build it we used expoio reactnative to offer crossplatform mobile support we used the google cloud platform tools for our machine learning and part of our backend and used heroku with nodejs for the rest of our backend nutritionix api was used for uptodate nutritional info
 challenges i ran into
some challenges we faced included
1 grocery receipts were not standardized amoung any grocery stores so we needed a way to parse the receipts in a way so that results were still consistent amoung different sellers also a lot of items are abbreviated in grocery receipts so searching up the exact item was hard
2 not everyone on the team was familiar with the stack we used so it was difficult learning a new languageframework while trying to work with it to use the apis
3 the data we received from the api ' s we used would not always be consistent due to the nature of our product we had to come up with algorithms and implementations that were robust enough to handle errors due to inconsistencies from certain api calls
 accomplishments that i ' m proud of
we are proud that we integrated each part that we worked on into one big working product we worked with technologies that were not all familiar to us but we read through enough docs and examples to learn what we needed to succeed
 what i learned
since we all had different experiences we specialized in certain tasks depending on our background even so we learned a lot of things from using the apis integrating each component of our project into one working product and working with new technologies
 what ' s next for nutritioniq
we would love to add support for recipe recommendations based on the ingredients that were parsed from the receipt also we could extend our app to be a healthtracker with users ' food and nutritional data stored on the server we could also recommend what foods to buy in order to meet our daily nutritional requirements",nutritioniq nutritioniq machinelearn base receipt scanner nutrit inform food item receipt wa made team 4 terrenc ho david lu rut patel ryan kim mhack x 2017 built use googl cloud platform storag machinelearn cloud vision expoio reactn nodej heroku nutritionix inspir want util machin learn order get nutrit inform groceri receipt need easi way get relev nutrit fact groceri shop trip without look everyth individu doe nutritioniq use googl cloud platform tool get smartdata item groceri receipt matter long groceri list precis nutrit detail display everi food item order help us make smart consciou decis daili nutrit built build use expoio reactn offer crossplatform mobil support use googl cloud platform tool machin learn part backend use heroku nodej rest backend nutritionix api wa use uptod nutrit info challeng ran challeng face includ 1 groceri receipt standard amoung ani groceri store need way pars receipt way result still consist amoung differ seller also lot item abbrevi groceri receipt search exact item wa hard 2 everyon team wa familiar stack use wa difficult learn new languageframework tri work use api 3 data receiv api ' use would alway consist due natur product come algorithm implement robust enough handl error due inconsist certain api call accomplish ' proud proud integr part work one big work product work technolog familiar us read enough doc exampl learn need succeed learn sinc differ experi special certain task depend background even learn lot thing use api integr compon project one work product work new technolog ' next nutritioniq would love add support recip recommend base ingredi pars receipt also could extend app healthtrack user ' food nutrit data store server could also recommend food buy order meet daili nutrit requir,nutritioniq nutritioniq machinelearning based receipt scanner nutritional information food item receipt wa made team 4 terrence ho david lu rut patel ryan kim mhacks x 2017 built using google cloud platform storage machinelearning cloud vision expoio reactnative nodejs heroku nutritionix inspiration wanted utilize machine learning order get nutritional information grocery receipt needed easy way get relevant nutritional fact grocery shopping trip without look everything individually doe nutritioniq us google cloud platform tool get smartdata item grocery receipt matter long grocery list precise nutritional detail displayed every food item order help u make smart conscious decision daily nutrition built build used expoio reactnative offer crossplatform mobile support used google cloud platform tool machine learning part backend used heroku nodejs rest backend nutritionix api wa used uptodate nutritional info challenge ran challenge faced included 1 grocery receipt standardized amoung grocery store needed way parse receipt way result still consistent amoung different seller also lot item abbreviated grocery receipt searching exact item wa hard 2 everyone team wa familiar stack used wa difficult learning new languageframework trying work use apis 3 data received api ' used would always consistent due nature product come algorithm implementation robust enough handle error due inconsistency certain api call accomplishment ' proud proud integrated part worked one big working product worked technology familiar u read enough doc example learn needed succeed learned since different experience specialized certain task depending background even learned lot thing using apis integrating component project one working product working new technology ' next nutritioniq would love add support recipe recommendation based ingredient parsed receipt also could extend app healthtracker user ' food nutritional data stored server could also recommend food buy order meet daily nutritional requirement
Go,"# Code Nutrition

[![codenutrition](http://code.grevit.net/badge/O%2B%2B_S%2B%2B_I%2B%2B_C_E_M_V%2B_PS%2B%2B_D%2B_)](http://code.grevit.net/facts/O%2B%2B_S%2B%2B_I%2B%2B_C_E_M_V%2B_PS%2B%2B_D%2B)

**Imagine your code and all dependencies would carry nutrition labels.**

Code Nutrition is a service for labelling code so everybody can understand what they are getting into when building upon or using your software. The survey is based on a set of questions presented by Felix von Leitner: ""Nützlich-Unbedenklich Spektrum"" at 36C3 (Minor adjustmenst have been made to the original text.) [learn more here](https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=2ahUKEwjE-v7ropLnAhXUwMQBHd68B9UQwqsBMAB6BAgKEAQ&url=https%3A%2F%2Fmedia.ccc.de%2Fv%2F36c3-10608-das_nutzlich-unbedenklich_spektrum&usg=AOvVaw1_05ix3-K_lRn_T9LbJRZi).

The survey itself is still under development you are welcome to discuss, contribute and improve it. Currently it consists of 9 fundamental questions regarding the state of your (legacy) code. After answering them by multiple choice the service generates an embeddable badge representing the state of your project. I highly reccommend completing the survey even if you don't want to use the badge - the questions asked can be very helpful.

[Survey](https://github.com/moethu/codenutrition/blob/master/static/spectrum.json)

Again, the intention of this repo and the survey is to get the conversation started and potentially develop a solid metric representing the state of a project.

[Start your survey now](http://code.grevit.net:8084)

## Requirements for building the service

[![Go Report Card](https://goreportcard.com/badge/github.com/moethu/codenutrition)](https://goreportcard.com/report/github.com/moethu/codenutrition)

- go 1.11.5+

### requirements (via go modules)

- github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751
- github.com/gin-gonic/gin v1.5.0
- github.com/llgcode/draw2d v0.0.0-20200110163050-b96d8208fcfc
- github.com/swaggo/gin-swagger v1.2.0
- github.com/swaggo/swag v1.6.5
","code nutrition

codenutritionhttpcodegrevitnetbadgeo2b2bs2b2bi2b2bcemv2bps2b2bd2bhttpcodegrevitnetfactso2b2bs2b2bi2b2bcemv2bps2b2bd2b

imagine your code and all dependencies would carry nutrition labels

code nutrition is a service for labelling code so everybody can understand what they are getting into when building upon or using your software the survey is based on a set of questions presented by felix von leitner nutzlichunbedenklich spektrum at 36c3 minor adjustmenst have been made to the original text learn more herehttpswwwgooglecomurlsatrctjqesrcssourcewebcd1cadrjauact8ved2ahukewjev7roplnahxuwmqbhd68b9uqwqsbmab6bagkeaqurlhttps3a2f2fmediacccde2fv2f36c310608dasnutzlichunbedenklichspektrumusgaovvaw105ix3klrnt9lbjrzi

the survey itself is still under development you are welcome to discuss contribute and improve it currently it consists of 9 fundamental questions regarding the state of your legacy code after answering them by multiple choice the service generates an embeddable badge representing the state of your project i highly reccommend completing the survey even if you don ' t want to use the badge the questions asked can be very helpful

surveyhttpsgithubcommoethucodenutritionblobmasterstaticspectrumjson

again the intention of this repo and the survey is to get the conversation started and potentially develop a solid metric representing the state of a project

start your survey nowhttpcodegrevitnet8084

 requirements for building the service

go report cardhttpsgoreportcardcombadgegithubcommoethucodenutritionhttpsgoreportcardcomreportgithubcommoethucodenutrition

 go 1115

 requirements via go modules

 githubcomalecthomastemplate v00020190718012654fb15b899a751
 githubcomgingonicgin v150
 githubcomllgcodedraw2d v00020200110163050b96d8208fcfc
 githubcomswaggoginswagger v120
 githubcomswaggoswag v165",code nutrit codenutritionhttpcodegrevitnetbadgeo2b2bs2b2bi2b2bcemv2bps2b2bd2bhttpcodegrevitnetfactso2b2bs2b2bi2b2bcemv2bps2b2bd2b imagin code depend would carri nutrit label code nutrit servic label code everybodi understand get build upon use softwar survey base set question present felix von leitner nutzlichunbedenklich spektrum 36c3 minor adjustmenst made origin text learn herehttpswwwgooglecomurlsatrctjqesrcssourcewebcd1cadrjauact8ved2ahukewjev7roplnahxuwmqbhd68b9uqwqsbmab6bagkeaqurlhttps3a2f2fmediacccde2fv2f36c310608dasnutzlichunbedenklichspektrumusgaovvaw105ix3klrnt9lbjrzi survey still develop welcom discuss contribut improv current consist 9 fundament question regard state legaci code answer multipl choic servic gener embedd badg repres state project highli reccommend complet survey even ' want use badg question ask veri help surveyhttpsgithubcommoethucodenutritionblobmasterstaticspectrumjson intent thi repo survey get convers start potenti develop solid metric repres state project start survey nowhttpcodegrevitnet8084 requir build servic go report cardhttpsgoreportcardcombadgegithubcommoethucodenutritionhttpsgoreportcardcomreportgithubcommoethucodenutrit go 1115 requir via go modul githubcomalecthomastempl v00020190718012654fb15b899a751 githubcomgingonicgin v150 githubcomllgcodedraw2d v00020200110163050b96d8208fcfc githubcomswaggoginswagg v120 githubcomswaggoswag v165,code nutrition codenutritionhttpcodegrevitnetbadgeo2b2bs2b2bi2b2bcemv2bps2b2bd2bhttpcodegrevitnetfactso2b2bs2b2bi2b2bcemv2bps2b2bd2b imagine code dependency would carry nutrition label code nutrition service labelling code everybody understand getting building upon using software survey based set question presented felix von leitner nutzlichunbedenklich spektrum 36c3 minor adjustmenst made original text learn herehttpswwwgooglecomurlsatrctjqesrcssourcewebcd1cadrjauact8ved2ahukewjev7roplnahxuwmqbhd68b9uqwqsbmab6bagkeaqurlhttps3a2f2fmediacccde2fv2f36c310608dasnutzlichunbedenklichspektrumusgaovvaw105ix3klrnt9lbjrzi survey still development welcome discus contribute improve currently consists 9 fundamental question regarding state legacy code answering multiple choice service generates embeddable badge representing state project highly reccommend completing survey even ' want use badge question asked helpful surveyhttpsgithubcommoethucodenutritionblobmasterstaticspectrumjson intention repo survey get conversation started potentially develop solid metric representing state project start survey nowhttpcodegrevitnet8084 requirement building service go report cardhttpsgoreportcardcombadgegithubcommoethucodenutritionhttpsgoreportcardcomreportgithubcommoethucodenutrition go 1115 requirement via go module githubcomalecthomastemplate v00020190718012654fb15b899a751 githubcomgingonicgin v150 githubcomllgcodedraw2d v00020200110163050b96d8208fcfc githubcomswaggoginswagger v120 githubcomswaggoswag v165
Prolog,# Nutrition-Expert-System-Gestational-Diabetes,nutritionexpertsystemgestationaldiabetes,nutritionexpertsystemgestationaldiabet,nutritionexpertsystemgestationaldiabetes
Python,"---
title: lexiscore
emoji: 📗
colorFrom: green
colorTo: gray
sdk: streamlit
app_file: main.py
pinned: false
---

![](https://paulbricman.com/assets/img/lexiscore_cover.png)
# Lexiscore

As a first effort in tackling the [theme of information overload](https://paulbricman.com/reflections/twenty-one) in content consumption, I've been working on the lexiscore: a nutritional label for food for thought designed to help you narrow in on resources which personally bring you the most value. The open source companion software can automatically label raw text originating from RSS feeds, bookmarked pages, PDFs, EPUBs, and more. In the scope of this project, I'm considering valuable resources to be those from which you learn a lot, those which are packed with ideas you find surprising.

[Read more...](https://paulbricman.com/thoughtware/lexiscore)

# Installation

**Note**: This tool requires a running instance of the [conceptarium](https://paulbricman.com/thoughtware/conceptarium) as a proxy for your knowledge.

The lexiscore labeler can either be deployed from source or using Docker.

### Docker

To deploy the lexiscore labeler using Docker, first make sure to have Docker installed, then simply run the following.

```
docker run -p 8501:8501 paulbricman/lexiscore 
```

The tool should be available at `localhost:8501`.

### From Source

To set up the lexiscore labeler, clone the repository and run the following:

```
python3 -m pip install -r requirements.txt
streamlit run main.py
```

The tool should be available at `localhost:8501`.

# Screenshots

![](https://paulbricman.com/assets/img/lexiscore_mockup.png)
![](https://paulbricman.com/assets/img/lexiscore_mealprep.png)
","title lexiscore
emoji 
colorfrom green
colorto gray
sdk streamlit
appfile mainpy
pinned false


httpspaulbricmancomassetsimglexiscorecoverpng
 lexiscore

as a first effort in tackling the theme of information overloadhttpspaulbricmancomreflectionstwentyone in content consumption i ' ve been working on the lexiscore a nutritional label for food for thought designed to help you narrow in on resources which personally bring you the most value the open source companion software can automatically label raw text originating from rss feeds bookmarked pages pdfs epubs and more in the scope of this project i ' m considering valuable resources to be those from which you learn a lot those which are packed with ideas you find surprising

read morehttpspaulbricmancomthoughtwarelexiscore

 installation

note this tool requires a running instance of the conceptariumhttpspaulbricmancomthoughtwareconceptarium as a proxy for your knowledge

the lexiscore labeler can either be deployed from source or using docker

 docker

to deploy the lexiscore labeler using docker first make sure to have docker installed then simply run the following


docker run p 85018501 paulbricmanlexiscore 


the tool should be available at localhost8501

 from source

to set up the lexiscore labeler clone the repository and run the following


python3 m pip install r requirementstxt
streamlit run mainpy


the tool should be available at localhost8501

 screenshots

httpspaulbricmancomassetsimglexiscoremockuppng
httpspaulbricmancomassetsimglexiscoremealpreppng",titl lexiscor emoji colorfrom green colorto gray sdk streamlit appfil mainpi pin fals httpspaulbricmancomassetsimglexiscorecoverpng lexiscor first effort tackl theme inform overloadhttpspaulbricmancomreflectionstwentyon content consumpt ' work lexiscor nutrit label food thought design help narrow resourc person bring valu open sourc companion softwar automat label raw text origin rss feed bookmark page pdf epub scope thi project ' consid valuabl resourc learn lot pack idea find surpris read morehttpspaulbricmancomthoughtwarelexiscor instal note thi tool requir run instanc conceptariumhttpspaulbricmancomthoughtwareconceptarium proxi knowledg lexiscor label either deploy sourc use docker docker deploy lexiscor label use docker first make sure docker instal simpli run follow docker run p 85018501 paulbricmanlexiscor tool avail localhost8501 sourc set lexiscor label clone repositori run follow python3 pip instal r requirementstxt streamlit run mainpi tool avail localhost8501 screenshot httpspaulbricmancomassetsimglexiscoremockuppng httpspaulbricmancomassetsimglexiscoremealpreppng,title lexiscore emoji colorfrom green colorto gray sdk streamlit appfile mainpy pinned false httpspaulbricmancomassetsimglexiscorecoverpng lexiscore first effort tackling theme information overloadhttpspaulbricmancomreflectionstwentyone content consumption ' working lexiscore nutritional label food thought designed help narrow resource personally bring value open source companion software automatically label raw text originating r feed bookmarked page pdfs epubs scope project ' considering valuable resource learn lot packed idea find surprising read morehttpspaulbricmancomthoughtwarelexiscore installation note tool requires running instance conceptariumhttpspaulbricmancomthoughtwareconceptarium proxy knowledge lexiscore labeler either deployed source using docker docker deploy lexiscore labeler using docker first make sure docker installed simply run following docker run p 85018501 paulbricmanlexiscore tool available localhost8501 source set lexiscore labeler clone repository run following python3 pip install r requirementstxt streamlit run mainpy tool available localhost8501 screenshots httpspaulbricmancomassetsimglexiscoremockuppng httpspaulbricmancomassetsimglexiscoremealpreppng
Dart,"# Flutter-Nutrition-Application ( WIP )


## Notable Links:
- [Flutter Information](https://flutter.io/docs)
- [Flutter Documentation](https://docs.flutter.io/index.html)
- [Firebase Console](https://console.firebase.google.com/u/0/)
- [Firebase Documentation](https://firebase.google.com/)

## Version Information:
- **Flutter:** v. 1.1.6 
- **Dart:** v. 2.1.1
- **Android API Platform:** v. 27
- **Java:** v. 1.8.0_152 

## Coding Standards:
- Functions:
    - If possible, prefer lower-upper camel case on function naming.

- Classes:
    - All lowercase file names.
    - Uppercase CamelCase Formatting.  
      Example: ```class MyClass```
    - Flutter Widget State Hierarchy (Top to Bottom):
        - Variables
        - Constructor Functions
        - Utility Functions
        - @override Flutter Functions  
       Example 
       ```
       class MyClass extends StatelessWidget {
                    int _currentIndex = 0;  
                    Widget myWidget;    
                    MyClass(this.myWidget);
                    
                    void doStuff(Widget widget) {
                        this.myWidget = widget;
                    }
                    
                    @override
                    Widget build (BuildContext context) {
                        return new MaterialApp();
                    }
           }
       ```

- Variables:
    - Variables behave in a lower-upper camel case format similar to functions.


## Git ( For Collaborators )
- Make your own branch named ""dev-*name*"".
- Once your are done with a task, submit a pull request to the **dev** branch for review.
","flutternutritionapplication wip 


 notable links
 flutter informationhttpsflutteriodocs
 flutter documentationhttpsdocsflutterioindexhtml
 firebase consolehttpsconsolefirebasegooglecomu0
 firebase documentationhttpsfirebasegooglecom

 version information
 flutter v 116 
 dart v 211
 android api platform v 27
 java v 180152 

 coding standards
 functions
 if possible prefer lowerupper camel case on function naming

 classes
 all lowercase file names
 uppercase camelcase formatting 
 example class myclass
 flutter widget state hierarchy top to bottom
 variables
 constructor functions
 utility functions
 override flutter functions 
 example 
 
 class myclass extends statelesswidget 
 int currentindex 0 
 widget mywidget 
 myclassthismywidget
 
 void dostuffwidget widget 
 thismywidget widget
 
 
 override
 widget build buildcontext context 
 return new materialapp
 
 
 

 variables
 variables behave in a lowerupper camel case format similar to functions


 git for collaborators 
 make your own branch named devname
 once your are done with a task submit a pull request to the dev branch for review",flutternutritionappl wip notabl link flutter informationhttpsflutteriodoc flutter documentationhttpsdocsflutterioindexhtml firebas consolehttpsconsolefirebasegooglecomu0 firebas documentationhttpsfirebasegooglecom version inform flutter v 116 dart v 211 android api platform v 27 java v 180152 code standard function possibl prefer lowerupp camel case function name class lowercas file name uppercas camelcas format exampl class myclass flutter widget state hierarchi top bottom variabl constructor function util function overrid flutter function exampl class myclass extend statelesswidget int currentindex 0 widget mywidget myclassthismywidget void dostuffwidget widget thismywidget widget overrid widget build buildcontext context return new materialapp variabl variabl behav lowerupp camel case format similar function git collabor make branch name devnam onc done task submit pull request dev branch review,flutternutritionapplication wip notable link flutter informationhttpsflutteriodocs flutter documentationhttpsdocsflutterioindexhtml firebase consolehttpsconsolefirebasegooglecomu0 firebase documentationhttpsfirebasegooglecom version information flutter v 116 dart v 211 android api platform v 27 java v 180152 coding standard function possible prefer lowerupper camel case function naming class lowercase file name uppercase camelcase formatting example class myclass flutter widget state hierarchy top bottom variable constructor function utility function override flutter function example class myclass extends statelesswidget int currentindex 0 widget mywidget myclassthismywidget void dostuffwidget widget thismywidget widget override widget build buildcontext context return new materialapp variable variable behave lowerupper camel case format similar function git collaborator make branch named devname done task submit pull request dev branch review
Ruby,"= NutritionLabelPlugin
Nutrition label generation for Rails 3.1 using the asset pipeline. 

== Installation

1. If using bundler, add to your Gemfile and run bundle install:
    gem nutrition_label_plugin
2. Otherwise run 'gem install nutrition_label_plugin'
3. To add the CSS file to your load path, add to your app's application.css file: 
    *= require nutrition_label_plugin

== Feature list

Currently, there is a single method available that accepts a hash of all optional 
parameters. 
    create_base_label(args)

The method returns html output, which you can use in your views to show these
awesome nutrition fact labels. 

---
=== create_base_label arguments

create_base_label takes a number of optional arguments in the form of a hash:
* :name => ""string""
* :yield => float, in grams
* :servings => float, # of servings
* :calories => float, # of calories
* :fat => float, in grams
* :saturated_fat => float, in grams
* :trans_fat => float, in grams
* :cholesterol => float, in milligrams
* :sodium => float, in milligrams
* :carbohydrate => float, in grams
* :fiber => float, in grams
* :sugar => float, in grams
* :vitamin_C => float, in milligrams
* :vitamin_A => float, in IU (international units)
* :Iron => float, in milligrams
* :calcium => float, in milligrams

== Planned features

* Automatic rounding according to USDA conventions
* Additional optional nutrients
* Additional output formats
* If you have ideas for features, let me know and I'll see what I can do!

== Contributing

If you have any feedback or want to add methods other than the basic nutrition label,
feel free to fork and send a pull request.

---
This project rocks and uses MIT-LICENSE.
","nutritionlabelplugin
nutrition label generation for rails 31 using the asset pipeline 

 installation

1 if using bundler add to your gemfile and run bundle install
 gem nutritionlabelplugin
2 otherwise run ' gem install nutritionlabelplugin ' 
3 to add the css file to your load path add to your app ' s applicationcss file 
 require nutritionlabelplugin

 feature list

currently there is a single method available that accepts a hash of all optional 
parameters 
 createbaselabelargs

the method returns html output which you can use in your views to show these
awesome nutrition fact labels 


 createbaselabel arguments

createbaselabel takes a number of optional arguments in the form of a hash
 name string
 yield float in grams
 servings float of servings
 calories float of calories
 fat float in grams
 saturatedfat float in grams
 transfat float in grams
 cholesterol float in milligrams
 sodium float in milligrams
 carbohydrate float in grams
 fiber float in grams
 sugar float in grams
 vitaminc float in milligrams
 vitamina float in iu international units
 iron float in milligrams
 calcium float in milligrams

 planned features

 automatic rounding according to usda conventions
 additional optional nutrients
 additional output formats
 if you have ideas for features let me know and i ' ll see what i can do

 contributing

if you have any feedback or want to add methods other than the basic nutrition label
feel free to fork and send a pull request


this project rocks and uses mitlicense",nutritionlabelplugin nutrit label gener rail 31 use asset pipelin instal 1 use bundler add gemfil run bundl instal gem nutritionlabelplugin 2 otherwis run ' gem instal nutritionlabelplugin ' 3 add css file load path add app ' applicationcss file requir nutritionlabelplugin featur list current singl method avail accept hash option paramet createbaselabelarg method return html output use view show awesom nutrit fact label createbaselabel argument createbaselabel take number option argument form hash name string yield float gram serv float serv calori float calori fat float gram saturatedfat float gram transfat float gram cholesterol float milligram sodium float milligram carbohydr float gram fiber float gram sugar float gram vitaminc float milligram vitamina float iu intern unit iron float milligram calcium float milligram plan featur automat round accord usda convent addit option nutrient addit output format idea featur let know ' see contribut ani feedback want add method basic nutrit label feel free fork send pull request thi project rock use mitlicens,nutritionlabelplugin nutrition label generation rail 31 using asset pipeline installation 1 using bundler add gemfile run bundle install gem nutritionlabelplugin 2 otherwise run ' gem install nutritionlabelplugin ' 3 add cs file load path add app ' applicationcss file require nutritionlabelplugin feature list currently single method available accepts hash optional parameter createbaselabelargs method return html output use view show awesome nutrition fact label createbaselabel argument createbaselabel take number optional argument form hash name string yield float gram serving float serving calorie float calorie fat float gram saturatedfat float gram transfat float gram cholesterol float milligram sodium float milligram carbohydrate float gram fiber float gram sugar float gram vitaminc float milligram vitamina float iu international unit iron float milligram calcium float milligram planned feature automatic rounding according usda convention additional optional nutrient additional output format idea feature let know ' see contributing feedback want add method basic nutrition label feel free fork send pull request project rock us mitlicense
HTML,"# The-Nutrition-Coach

## Inspiration
Growing up you might have heard the term ‘Health is Wealth’, but its essential meaning is still not clear to most people. Our food habits does not have merely one but numerous benefits. It helps us in various spheres of life. So to help you keep track of it we present you The Nutrition Coach , a website to raise people's awareness about diets and it's types. Here person can convert the language of nutrition label and receive access to exercise bot.

## What it does
The Nutrition Coach helps in three area's :
<br>
1. **Diet** : It provides diet corresponding to illness and chart to find their category.It has explained diets according to provided illness 
<br>

2. **Action Console or Bot** : This functionality provides the user to join into exercise workspace in slack and talk in #general channel with each other and also a dialog flow bot. 
<br>

3. **Language converter**: This functionality helps in converting English nutrition labels behind the packaging of product into their native language for better understanding.

## How I built it
It is purely HTML , CSS , JavaScript web application. It has customize diets for illness with detailed description to follow rendered in cards format .
It has a trained Dialog flow conversational bot linked to Slack through Exercise workspace.It was built in dialog flow console and integrated to slack
It has built with Tesseract.js to build an OCR web application.

## Demo

#### Home Page
<img src=""https://github.com/blackcrabb/The-Nutrition-Coach/blob/screenshots/Screenshots/home.gif"" width=300 height=150>

#### Dietary
<img src=""https://github.com/blackcrabb/The-Nutrition-Coach/blob/screenshots/Screenshots/dietary.gif"" width=300 height=150>

#### Action Console
<img src=""https://github.com/blackcrabb/The-Nutrition-Coach/blob/screenshots/Screenshots/action-console.gif"" width=300 height=150>

#### Nutrition Language Converter
<img src=""https://github.com/blackcrabb/The-Nutrition-Coach/blob/screenshots/Screenshots/converter.gif"" width=300 height=150>
","thenutritioncoach

 inspiration
growing up you might have heard the term health is wealth but its essential meaning is still not clear to most people our food habits does not have merely one but numerous benefits it helps us in various spheres of life so to help you keep track of it we present you the nutrition coach a website to raise people ' s awareness about diets and it ' s types here person can convert the language of nutrition label and receive access to exercise bot

 what it does
the nutrition coach helps in three area ' s 
br
1 diet it provides diet corresponding to illness and chart to find their categoryit has explained diets according to provided illness 
br

2 action console or bot this functionality provides the user to join into exercise workspace in slack and talk in general channel with each other and also a dialog flow bot 
br

3 language converter this functionality helps in converting english nutrition labels behind the packaging of product into their native language for better understanding

 how i built it
it is purely html css javascript web application it has customize diets for illness with detailed description to follow rendered in cards format 
it has a trained dialog flow conversational bot linked to slack through exercise workspaceit was built in dialog flow console and integrated to slack
it has built with tesseractjs to build an ocr web application

 demo

 home page
img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotshomegif width300 height150

 dietary
img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsdietarygif width300 height150

 action console
img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsactionconsolegif width300 height150

 nutrition language converter
img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsconvertergif width300 height150",thenutritioncoach inspir grow might heard term health wealth essenti mean still clear peopl food habit doe mere one numer benefit help us variou sphere life help keep track present nutrit coach websit rais peopl ' awar diet ' type person convert languag nutrit label receiv access exercis bot doe nutrit coach help three area ' br 1 diet provid diet correspond ill chart find categoryit ha explain diet accord provid ill br 2 action consol bot thi function provid user join exercis workspac slack talk gener channel also dialog flow bot br 3 languag convert thi function help convert english nutrit label behind packag product nativ languag better understand built pure html css javascript web applic ha custom diet ill detail descript follow render card format ha train dialog flow convers bot link slack exercis workspaceit wa built dialog flow consol integr slack ha built tesseractj build ocr web applic demo home page img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotshomegif width300 height150 dietari img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsdietarygif width300 height150 action consol img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsactionconsolegif width300 height150 nutrit languag convert img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsconvertergif width300 height150,thenutritioncoach inspiration growing might heard term health wealth essential meaning still clear people food habit doe merely one numerous benefit help u various sphere life help keep track present nutrition coach website raise people ' awareness diet ' type person convert language nutrition label receive access exercise bot doe nutrition coach help three area ' br 1 diet provides diet corresponding illness chart find categoryit ha explained diet according provided illness br 2 action console bot functionality provides user join exercise workspace slack talk general channel also dialog flow bot br 3 language converter functionality help converting english nutrition label behind packaging product native language better understanding built purely html cs javascript web application ha customize diet illness detailed description follow rendered card format ha trained dialog flow conversational bot linked slack exercise workspaceit wa built dialog flow console integrated slack ha built tesseractjs build ocr web application demo home page img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotshomegif width300 height150 dietary img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsdietarygif width300 height150 action console img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsactionconsolegif width300 height150 nutrition language converter img srchttpsgithubcomblackcrabbthenutritioncoachblobscreenshotsscreenshotsconvertergif width300 height150
Ruby,"Here is the basic gist of this application. This is a testing ground for me to build a gem that imports the USDA National Nutrient Database for Standard Reference  (http://www.ars.usda.gov/Services/docs.htm?docid=8964). The text version of the database is in a none conventional format, delimitated by a '^' and surrounded by '~'s. 

This application has 12 models that match the 12 tables in the Nutrient Database. These models are used to import the data that is parsed from the ""ASCII"" form of the database. The actual format of the text files are 'windows-1251'.

In the lib/tasks directory there is a rake task file that will parse the Nutrient Database ASCII files, found lib/data directory.

There is a task called 'process_data', it will run the parse method from the 'parse_usda.rb' file. This file will convert the USDA text files to a conventional 'CSV' file. Each file is then imported into its matching table using a CSV reader.

The tasks require the 12 models to already be created in a local database. There are 12 migration files in the 'db' directory. These will help you create the models you need.

If you have any questions please email me at bcmehrman@gmail.com


 ","here is the basic gist of this application this is a testing ground for me to build a gem that imports the usda national nutrient database for standard reference httpwwwarsusdagovservicesdocshtmdocid8964 the text version of the database is in a none conventional format delimitated by a ' ' and surrounded by ' ' s 

this application has 12 models that match the 12 tables in the nutrient database these models are used to import the data that is parsed from the ascii form of the database the actual format of the text files are ' windows1251 ' 

in the libtasks directory there is a rake task file that will parse the nutrient database ascii files found libdata directory

there is a task called ' processdata ' it will run the parse method from the ' parseusdarb ' file this file will convert the usda text files to a conventional ' csv ' file each file is then imported into its matching table using a csv reader

the tasks require the 12 models to already be created in a local database there are 12 migration files in the ' db ' directory these will help you create the models you need

if you have any questions please email me at bcmehrmangmailcom",basic gist thi applic thi test ground build gem import usda nation nutrient databas standard refer httpwwwarsusdagovservicesdocshtmdocid8964 text version databas none convent format delimit ' ' surround ' ' thi applic ha 12 model match 12 tabl nutrient databas model use import data pars ascii form databas actual format text file ' windows1251 ' libtask directori rake task file pars nutrient databas ascii file found libdata directori task call ' processdata ' run pars method ' parseusdarb ' file thi file convert usda text file convent ' csv ' file file import match tabl use csv reader task requir 12 model alreadi creat local databas 12 migrat file ' db ' directori help creat model need ani question pleas email bcmehrmangmailcom,basic gist application testing ground build gem import usda national nutrient database standard reference httpwwwarsusdagovservicesdocshtmdocid8964 text version database none conventional format delimitated ' ' surrounded ' ' application ha 12 model match 12 table nutrient database model used import data parsed ascii form database actual format text file ' windows1251 ' libtasks directory rake task file parse nutrient database ascii file found libdata directory task called ' processdata ' run parse method ' parseusdarb ' file file convert usda text file conventional ' csv ' file file imported matching table using csv reader task require 12 model already created local database 12 migration file ' db ' directory help create model need question please email bcmehrmangmailcom
JavaScript,"# csci-3308-Project-GroupAwesome

Project Name: FeedmeWell

Project Description: 
This project is a food ordering app that can order food for user based on user's workout data tracked by Fitbit.

Deployment:
Link: https://ide.c9.io/kino6052/nodeauthentication
Instruction : 

1. Follow the link
2. Log into the cloud9
3. Request Access
4. Go to the terminal on the bottom (should say ""Terminal"", if not, click ""+"" to add new Terminal)
5. In terminal, go to workspace directory and execute mongod-start (if you see errors, this is likely because mongod is already running)
6. Then, go to temp and open app.js
7. Press on the play button on the top of the screen
 
## Repo Organization

* Documentation
  * This is where the auto-generated documentation .html files are found
* database
  * Folder containing UML diagram for the database organization
* nodeServer
  * node.js server with project folders
* node_modules
  * jsdocs is found here
* toolbox
  * Folder with various code snippets used throughout our project
* www
  * PhoneGap project bones 

## Running Tests

1. Go to the ""toolbox"" folder
2. Run apis.html


## APIs
https://www.nutritionix.com/ - Calorie APIs
https://api.delivery.com/ - Restaurants APIs

##Toolbox
Folder that contains snippets that will be useful further in the project

###Project managment tracker
https://www.pivotaltracker.com/n/projects/1342872

###UI Prototype
https://www.fluidui.com/editor/live/preview/p_c8Q7gDMTCopDB6E77aVIQFxWKMGipBlt.1447357197567
.
","csci3308projectgroupawesome

project name feedmewell

project description 
this project is a food ordering app that can order food for user based on user ' s workout data tracked by fitbit

deployment
link httpsidec9iokino6052nodeauthentication
instruction 

1 follow the link
2 log into the cloud9
3 request access
4 go to the terminal on the bottom should say terminal if not click to add new terminal
5 in terminal go to workspace directory and execute mongodstart if you see errors this is likely because mongod is already running
6 then go to temp and open appjs
7 press on the play button on the top of the screen
 
 repo organization

 documentation
 this is where the autogenerated documentation html files are found
 database
 folder containing uml diagram for the database organization
 nodeserver
 nodejs server with project folders
 nodemodules
 jsdocs is found here
 toolbox
 folder with various code snippets used throughout our project
 www
 phonegap project bones 

 running tests

1 go to the toolbox folder
2 run apishtml


 apis
httpswwwnutritionixcom calorie apis
httpsapideliverycom restaurants apis

toolbox
folder that contains snippets that will be useful further in the project

project managment tracker
httpswwwpivotaltrackercomnprojects1342872

ui prototype
httpswwwfluiduicomeditorlivepreviewpc8q7gdmtcopdb6e77aviqfxwkmgipblt1447357197567",csci3308projectgroupawesom project name feedmewel project descript thi project food order app order food user base user ' workout data track fitbit deploy link httpsidec9iokino6052nodeauthent instruct 1 follow link 2 log cloud9 3 request access 4 go termin bottom say termin click add new termin 5 termin go workspac directori execut mongodstart see error thi like becaus mongod alreadi run 6 go temp open appj 7 press play button top screen repo organ document thi autogener document html file found databas folder contain uml diagram databas organ nodeserv nodej server project folder nodemodul jsdoc found toolbox folder variou code snippet use throughout project www phonegap project bone run test 1 go toolbox folder 2 run apishtml api httpswwwnutritionixcom calori api httpsapideliverycom restaur api toolbox folder contain snippet use project project manag tracker httpswwwpivotaltrackercomnprojects1342872 ui prototyp httpswwwfluiduicomeditorlivepreviewpc8q7gdmtcopdb6e77aviqfxwkmgipblt1447357197567,csci3308projectgroupawesome project name feedmewell project description project food ordering app order food user based user ' workout data tracked fitbit deployment link httpsidec9iokino6052nodeauthentication instruction 1 follow link 2 log cloud9 3 request access 4 go terminal bottom say terminal click add new terminal 5 terminal go workspace directory execute mongodstart see error likely mongod already running 6 go temp open appjs 7 press play button top screen repo organization documentation autogenerated documentation html file found database folder containing uml diagram database organization nodeserver nodejs server project folder nodemodules jsdocs found toolbox folder various code snippet used throughout project www phonegap project bone running test 1 go toolbox folder 2 run apishtml apis httpswwwnutritionixcom calorie apis httpsapideliverycom restaurant apis toolbox folder contains snippet useful project project managment tracker httpswwwpivotaltrackercomnprojects1342872 ui prototype httpswwwfluiduicomeditorlivepreviewpc8q7gdmtcopdb6e77aviqfxwkmgipblt1447357197567
Java,# FANTA,fanta,fanta,fanta
